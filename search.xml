<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android Debug：Android Studio androidTest 跑不起來</title>
    <url>/Android/Debug/76c15376/</url>
    <content><![CDATA[<p>每次搞自動測試都一個頭兩個大，到底是升級後的 IDE 有問題還是裝置太爛？</p>
<span id="more"></span>

<h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>Android Studio: Android Studio Electric Eel | 2022.1.1</p>
<p>Project minSdkVersion: 28</p>
<p>Project targetSdkVersion: 31</p>
<p>OS Version: 30</p>
<p>Gradle version: 5.4.1</p>
<p>Gradle plugin version: 3.5.3</p>
<p>Project is Launcher App</p>
<h2 id="遭遇問題"><a href="#遭遇問題" class="headerlink" title="遭遇問題"></a>遭遇問題</h2><ol>
<li><p>Test App 安裝過久，可能 8 分鐘以上都裝不上去。<br>這問題持續了至少半個月以上，找不到確切解決方式；某天多次 run App 後回歸正常，也不確定會不會再次發生。</p>
</li>
<li><p>等半天之後安裝不上去，報錯 Installation failed due to: ‘device offline’。<br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ha2FqaW1hRk4vYXJ0aWNsZS9kZXRhaWxzLzEyNjY5MDYzOA==">Installation failed due to: ‘device offline‘<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>重新開機後只有第一次安裝 App 能正常運行，之後安裝的 App 就算成功裝上去也是黑畫面無法操作，最後只能重開機。<br>還沒解決。</p>
</li>
<li><p>執行 Android instrumented tests 時，測試 App 好不容易安裝上去，卻報出警告說沒支援。<br>“Run Android instrumented tests using Gradle” option was ignored because this module type is not supported yet.<br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NlaW56eC9hcnRpY2xlL2RldGFpbHMvMTI2MTcyNjMy">“Run Android instrumented tests using Gradle“ option was ignored … 的解决方法<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>IDE Gradle 突然一直讀不到專案文件，無法切換 Build Variant。<br>其實應該算是常發生問題，修改 res&#x2F;layout 的 xml 時也會發生類似的事。<br>Build &gt; Clean Project<br>Build &gt; Rebuild Project<br>File &gt; Sync Project with Gradle Files<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9oZWxwL2lkZWEvcmVwYWlyLWlkZS5odG1s">Repair IDE<i class="fa fa-external-link-alt"></i></span>：File &gt; Repair IDE，會帶使用者做一系列修復流程。</p>
</li>
</ol>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>折騰了好久，終於能開始寫測試了…</p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Debug</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>andriodTest</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Note：App Links</title>
    <url>/Android/Note/1d91382/</url>
    <content><![CDATA[<p>特殊的 Deep Links 可讓網站網址開啟 Android App 中的對應內容，照著官方文檔跟工具實踐通常不會有什麼問題，但在公司開發常常會發生莫名插曲。</p>
<span id="more"></span>

<h2 id="建置流程"><a href="#建置流程" class="headerlink" title="建置流程"></a>建置流程</h2><ol>
<li>依照 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdHJhaW5pbmcvYXBwLWxpbmtzL3ZlcmlmeS1hbmRyb2lkLWFwcGxpbmtz">官方文檔<i class="fa fa-external-link-alt"></i></span> 使用 Android Studio 的 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1ZGlvL3dyaXRlL2FwcC1saW5rLWluZGV4aW5n">App Links Assistant<i class="fa fa-external-link-alt"></i></span> 設定 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vZGlnaXRhbC1hc3NldC1saW5rcw==">Digital Asset Links
<i class="fa fa-external-link-alt"></i></span> 並取得 <code>assetlinks.json</code> 檔案</li>
<li>後端或網頁端需要將 <code>assetlinks.json</code> 檔案置於網頁根目錄的 <code>/.well-known/assetlinks.json</code> 路徑，並且能透過網址 <code>https://www.example.com/.well-known/assetlinks.json</code> 獲取 <code>assetlinks.json</code> 檔案內容</li>
</ol>
<p>[注意事項]<br>問題通常發生在 <code>assetlinks.json</code> 檔案的部署，因為後端或網頁端常常會有一些理由想要方便一下，然而 Android 這邊要求的比較嚴格（跟 iOS 類似功能的設定比較），強烈建議後端或網頁端把官方文檔仔細看，畢竟部署這件事通常不是 App 端負責處理，這裡列出幾個踩過的雷：</p>
<ol>
<li>不能透過重新導向來獲取 <code>assetlinks.json</code> 檔案，這可能會發生在後端或網頁端想取巧時</li>
<li>不能設置需要透過 VPN 才到得了的網站 domain，這很麻煩，因為很多公司的網頁測試版都只能用內網連，如果其實可以做到的話拜託告訴我🙏🏼</li>
<li>server response 必須為 HTTP 200 否則都視為錯誤，這則是沒注意就會錯</li>
<li><code>assetlinks.json</code> 檔案必須在 HTTP headers 設定為 Content-Type: application&#x2F;json，這也是沒注意就會錯</li>
</ol>
<h2 id="常規測試方式"><a href="#常規測試方式" class="headerlink" title="常規測試方式"></a>常規測試方式</h2><h3 id="網頁工具"><a href="#網頁工具" class="headerlink" title="網頁工具"></a>網頁工具</h3><p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vZGlnaXRhbC1hc3NldC1saW5rcy90b29scy9nZW5lcmF0b3I=">Statement List Generator and Tester<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Digital-Asset-Links-API"><a href="#Digital-Asset-Links-API" class="headerlink" title="Digital Asset Links API"></a>Digital Asset Links API</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://digitalassetlinks.googleapis.com/v1/statements:list?source.web.site=https://domain.name:optional_port&amp;relation=delegate_permission/common.handle_all_urls</span><br></pre></td></tr></table></figure>

<p>將 <code>domain.name:optional_port</code> 換成自己網站的 domain</p>
<h3 id="於-Android-專案中使用指令"><a href="#於-Android-專案中使用指令" class="headerlink" title="於 Android 專案中使用指令"></a>於 Android 專案中使用指令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell am start -a android.intent.action.VIEW -c android.intent.category.BROWSABLE -d &quot;https://www.example.com&quot;</span><br></pre></td></tr></table></figure>

<p>將其中網址 <code>https://www.example.com</code> 換成正確的<br>若建置成功，系統會發出正確 intent 叫起 app，失敗則會開啟瀏覽器前往該網頁</p>
<h2 id="本地測試"><a href="#本地測試" class="headerlink" title="本地測試"></a>本地測試</h2><p>若後端或網頁端沒辦法將 assetlinks.json 檔案放到正確的網頁位置時，或是使用非公開網域進行測試時可以透過建立本地環境來模擬，並使用測試指令來進行驗證</p>
<h3 id="裝置設定中手動設定-App-開啟連結"><a href="#裝置設定中手動設定-App-開啟連結" class="headerlink" title="裝置設定中手動設定 App 開啟連結"></a>裝置設定中手動設定 App 開啟連結</h3><p>進入裝置的 設定 &gt; 應用程式 &gt; YOUR_APP &gt; 應用程式資訊 &gt; 進階 &gt; 預設為開啟 &gt; 開啟連結 設定，前提是該連結需要先在 App 的 AndroidManifest.xml 中加入<br>設定完後就能使用測試指令測試該連結</p>
<h3 id="在本地建立網站-server-並透過第三方服務（ngrok）將本地網站臨時暴露給外部連線測試"><a href="#在本地建立網站-server-並透過第三方服務（ngrok）將本地網站臨時暴露給外部連線測試" class="headerlink" title="在本地建立網站 server 並透過第三方服務（ngrok）將本地網站臨時暴露給外部連線測試"></a>在本地建立網站 server 並透過第三方服務（ngrok）將本地網站臨時暴露給外部連線測試</h3><h4 id="建立本地網站-server（以-Node-js-Express-框架為例）"><a href="#建立本地網站-server（以-Node-js-Express-框架為例）" class="headerlink" title="建立本地網站 server（以 Node.js Express 框架為例）"></a>建立本地網站 server（以 Node.js Express 框架為例）</h4><ol>
<li>開啟新的專案資料夾並進入</li>
<li>若沒裝過 express，使用指令安裝：npm install express</li>
<li>建立一個 server.js 文件</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本的 Hello World 路由</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;Hello World!&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 處理 .well-known/assetlinks.json 的請求</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/.well-known/assetlinks.json&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(</span><br><span class="line">    <span class="comment">// 填入 assetlinks.json 內容</span></span><br><span class="line">    [&#123;</span><br><span class="line">        <span class="string">&quot;relation&quot;</span>: [<span class="string">&quot;delegate_permission/common.handle_all_urls&quot;</span>],</span><br><span class="line">        <span class="string">&quot;target&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;namespace&quot;</span>: <span class="string">&quot;android_app&quot;</span>,</span><br><span class="line">          <span class="string">&quot;package_name&quot;</span>: <span class="string">&quot;YOUR_PACKAGE_NAME&quot;</span>,</span><br><span class="line">          <span class="string">&quot;sha256_cert_fingerprints&quot;</span>:</span><br><span class="line">          [<span class="string">&quot;YOUR_SHA256_CERT_FINGERPRINTS&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;]</span><br><span class="line">  );</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟動伺服器</span></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running at http://localhost:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>啟動 server：node server.js</li>
<li>使用瀏覽器前往 <code>http://localhost:3000/.well-known/assetlinks.json</code> 檢查是否有看到 assetlinks.json 檔案內容</li>
</ol>
<h4 id="使用-ngrok-將本地網站臨時暴露給外部"><a href="#使用-ngrok-將本地網站臨時暴露給外部" class="headerlink" title="使用 ngrok 將本地網站臨時暴露給外部"></a>使用 ngrok 將本地網站臨時暴露給外部</h4><ol>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZ3Jvay5jb20v">ngrok 官網<i class="fa fa-external-link-alt"></i></span> 註冊 ngrok 帳號，隨後取得 token</li>
<li>安裝 ngrok：brew install ngrok&#x2F;ngrok&#x2F;ngrok</li>
<li>加入 token：ngrok config add-authtoken YOUR_TOKEN</li>
<li>啟動 ngrok 服務，因為前述本地 server 的 port 設為 3000，所以者裡也要填 3000：ngrok http 3000</li>
<li>由 <code>Forwarding</code> 取得這次的臨時公開網址（每次啟動都會換）</li>
<li>將這網址拿去設定 Digital Asset Link API 就能照正常流程進行 app link 測試</li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Debug：SQLite 不支援 variance 語法</title>
    <url>/Android/Debug/9776d6f4/</url>
    <content><![CDATA[<p>從 MySQL 將 SQL 程式碼遷移至 Android 的 SQLite，發現 SQLite 不支援 variance function。</p>
<span id="more"></span>

<h2 id="遭遇問題"><a href="#遭遇問題" class="headerlink" title="遭遇問題"></a>遭遇問題</h2><p>android.database.sqlite.SQLiteException: no such function: variance (code 1 SQLITE_ERROR): , while compiling: SELECT variance</p>
<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><p>將 SELECT variance(var) FROM table</p>
<p>改成 SELECT SUM((var-(SELECT AVG(var) FROM table))*(var-(SELECT AVG(var) FROM table)))&#x2F;(COUNT(var)-1) AS Variance FROM table</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>其實就是將 variance 的算式展開。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjU4OTU4NzQvY2FsY3VsYXRlLXZhcmlhbmNlLWluLXNxbGl0ZQ==">Calculate variance in sqlite<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Debug</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>SQLite</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Note：Activity Manager (am) intent arguments</title>
    <url>/Android/Note/85ba8edf/</url>
    <content><![CDATA[<p>有鑑於 Android 中 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vZ3VpZGUvY29tcG9uZW50cy9pbnRlbnRzLWZpbHRlcnM=">Intents and Intent Filters<i class="fa fa-external-link-alt"></i></span> 本身的複雜度，其指令參數也是那樣誇張沒錯。不過人腦記一些最基礎必要的東西就好了，太複雜的就交給查表。</p>
<span id="more"></span>

<p>Intemt 大致由以下這幾類東西組成：</p>
<ul>
<li>Component name</li>
<li>Action</li>
<li>Data</li>
<li>Category</li>
<li>Extras</li>
<li>Flags</li>
</ul>
<p>不過大多都不是必須組件，直接以例子來說明，下面是以 Activity Manager 發出一個 broadcast 的指令：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ am broadcast -a action_string --es es_key es_value --ei ei_key ei_value</span><br></pre></td></tr></table></figure>

<p>其中 <code>am broadcast</code> 是要求 Activity Manager 發出 broadcast 的宣告<br>後面的 <code>-a action_string --es es_key es_value --ei ei_key ei_value</code> 整串都是 intent arguments，而這其中又能分為三組：</p>
<ul>
<li><code>-a action_string</code>：<code>-a</code> 表示加入 Action，後方 <code>action_string</code> 即是要使用的 Action 字串。</li>
<li><code>--es es_key es_value</code>：<code>--es</code> 表示加入 Extra String 的鍵值對，後方 <code>es_key es_value</code> 即為該鍵值對。</li>
<li><code>--ei ei_key ei_value</code>：<code>--ei</code> 表示加入 Extra Integer 的鍵值對，後方 <code>ei_key ei_value</code> 即為該鍵值對。</li>
</ul>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1ZGlvL2NvbW1hbmQtbGluZS9hZGIjSW50ZW50U3BlYw==">Specification for intent arguments<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Note：DecorView</title>
    <url>/Android/Note/fdd5466a/</url>
    <content><![CDATA[<p>獲取當前 Activity 的根視圖。</p>
<span id="more"></span>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 獲取 DecorView，他是整個窗口的最頂層視圖</span></span><br><span class="line"><span class="keyword">val</span> decorView = window.decorView</span><br><span class="line"></span><br><span class="line"><span class="comment">// 獲取內容視圖的根視圖</span></span><br><span class="line"><span class="keyword">val</span> rootView = decorView.findViewById&lt;ViewGroup&gt;(android.R.id.content)</span><br></pre></td></tr></table></figure>

<p>其中 <code>android.R.id.content</code> 這個 id 對跨平台框架的 android 原生操作有奇效，像是添加 android 原生畫面之類的</p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Note：常用 Android Debug Bridge (adb) 功能</title>
    <url>/Android/Note/8318bca4/</url>
    <content><![CDATA[<p>我常用的 adb 功能。</p>
<span id="more"></span>

<h2 id="設定-Path-環境變數"><a href="#設定-Path-環境變數" class="headerlink" title="設定 Path 環境變數"></a>設定 Path 環境變數</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>Android Studio 隨附的 adb 所在路徑：<br>C:\Users\username\AppData\Local\Android\Sdk\platform-tools</p>
<p>控制台\系統及安全性\系統、進階系統設定、環境變數、系統變數：Path：瀏覽：找到上述路徑、確定。</p>
<p>打開 command line tool 輸入：adb 跳出資訊表示設置成功，之後在任何資料夾都能直接呼叫 adb；若未設置 Path 環境變數，要使用 adb 必須進到存放 adb 的路徑。</p>
<h2 id="TCP-IP-連接設備"><a href="#TCP-IP-連接設備" class="headerlink" title="TCP&#x2F;IP 連接設備"></a>TCP&#x2F;IP 連接設備</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb connect device_ip_address[:PORT]</span><br></pre></td></tr></table></figure>

<p>default port&#x3D;5555。</p>
<h2 id="切斷-TCP-IP-連接"><a href="#切斷-TCP-IP-連接" class="headerlink" title="切斷 TCP&#x2F;IP 連接"></a>切斷 TCP&#x2F;IP 連接</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb disconnect [device_ip_address[:PORT]]</span><br></pre></td></tr></table></figure>

<p>不指定會切斷所有連接。</p>
<h2 id="列出所有連接設備"><a href="#列出所有連接設備" class="headerlink" title="列出所有連接設備"></a>列出所有連接設備</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb devices [-l]</span><br></pre></td></tr></table></figure>

<p>預設會列出 adb 給這些設備指定的 serial number 與 state。<br>加上 <code>-l</code> (long output) 會印出設備詳細資訊：device product、model、device、transport_id。</p>
<h2 id="指定設備下指令"><a href="#指定設備下指令" class="headerlink" title="指定設備下指令"></a>指定設備下指令</h2><p>若連接了多台設備，要先知道設備的 serial number 才能指定個別設備下指令。</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb -s serial_number adb_command</span><br></pre></td></tr></table></figure>

<h2 id="下載-Logcat"><a href="#下載-Logcat" class="headerlink" title="下載 Logcat"></a>下載 Logcat</h2><p>即使機器使用當下沒有連接監視設備，事後接上機器也能下載。</p>
<p>及時寫在 command line：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">adb logcat</span><br></pre></td></tr></table></figure>

<p>並寫入特定檔案至當前資料夾：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">adb logcat -d &gt; crash.txt</span><br></pre></td></tr></table></figure>

<p>從特定位置擷取Logcat：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">adb logcat &gt; schedule.txt</span><br></pre></td></tr></table></figure>

<p>結束擷取：<br><code>Ctrl</code> + <code>C</code></p>
<h2 id="下載-Bugreport"><a href="#下載-Bugreport" class="headerlink" title="下載 Bugreport"></a>下載 Bugreport</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">adb bugreport</span><br></pre></td></tr></table></figure>

<p>要回報錯誤報告給開發商時才要下載此檔案，回報時需使用.zip檔案格式。</p>
<h2 id="安裝-App"><a href="#安裝-App" class="headerlink" title="安裝 App"></a>安裝 App</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb install path_to_apk</span><br></pre></td></tr></table></figure>

<h2 id="文件傳輸"><a href="#文件傳輸" class="headerlink" title="文件傳輸"></a>文件傳輸</h2><h3 id="設備複製到本地"><a href="#設備複製到本地" class="headerlink" title="設備複製到本地"></a>設備複製到本地</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb pull remote_path local_path</span><br></pre></td></tr></table></figure>

<h3 id="本地複製到設備"><a href="#本地複製到設備" class="headerlink" title="本地複製到設備"></a>本地複製到設備</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb push local_path remote_path</span><br></pre></td></tr></table></figure>

<p>path 可以是文件或目錄。</p>
<h2 id="重啟設備"><a href="#重啟設備" class="headerlink" title="重啟設備"></a>重啟設備</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb reboot</span><br></pre></td></tr></table></figure>

<h2 id="root-權限"><a href="#root-權限" class="headerlink" title="root 權限"></a>root 權限</h2><h3 id="以-root-權限重啟-adbd"><a href="#以-root-權限重啟-adbd" class="headerlink" title="以 root 權限重啟 adbd"></a>以 root 權限重啟 adbd</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb root</span><br></pre></td></tr></table></figure>

<h3 id="以非-root-權限重啟-adbd"><a href="#以非-root-權限重啟-adbd" class="headerlink" title="以非 root 權限重啟 adbd"></a>以非 root 權限重啟 adbd</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb unroot</span><br></pre></td></tr></table></figure>

<h2 id="停止-adb-server"><a href="#停止-adb-server" class="headerlink" title="停止 adb server"></a>停止 adb server</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb kill-server</span><br></pre></td></tr></table></figure>

<p>會斷絕所有連接，需要重新連，通常是 adb 出問題時才會用到這個指令。</p>
<h2 id="下-shell-指令"><a href="#下-shell-指令" class="headerlink" title="下 shell 指令"></a>下 shell 指令</h2><p>基本上 Android 的 shell 指令是用指令操作 Android 設備時的精華。</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ adb shell [shell_command]</span><br></pre></td></tr></table></figure>

<p>Android 本質是 Linux 核心擴增的框架，因此能對其使用 Unix 指令。<br>不直接下指令可以進入交互式 shell，可以使用 <code>Ctrl</code> + <code>D</code> 或輸入 <code>exit</code> 離開。</p>
<h3 id="模擬按鍵輸入"><a href="#模擬按鍵輸入" class="headerlink" title="模擬按鍵輸入"></a>模擬按鍵輸入</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ input keyevent keycode</span><br></pre></td></tr></table></figure>

<p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vcmVmZXJlbmNlL2FuZHJvaWQvdmlldy9LZXlFdmVudCNLRVlDT0RFX0JBQ0s=">KeyEvent<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="activity-manager"><a href="#activity-manager" class="headerlink" title="activity manager"></a>activity manager</h3><p>算是最重要的 Android Shell 指令，可以操作 Android 主要元件。</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ am am_command</span><br></pre></td></tr></table></figure>

<h4 id="啟動-Activity"><a href="#啟動-Activity" class="headerlink" title="啟動 Activity"></a>啟動 Activity</h4><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ am start [options] intent</span><br></pre></td></tr></table></figure>

<h4 id="啟動-Service"><a href="#啟動-Service" class="headerlink" title="啟動 Service"></a>啟動 Service</h4><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ am start [options] intent</span><br></pre></td></tr></table></figure>

<h4 id="啟動-Broadcast"><a href="#啟動-Broadcast" class="headerlink" title="啟動 Broadcast"></a>啟動 Broadcast</h4><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ am broadcast [options] intent</span><br></pre></td></tr></table></figure>

<h3 id="package-manager"><a href="#package-manager" class="headerlink" title="package manager"></a>package manager</h3><p>管理 App 的。</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ pm pm_command</span><br></pre></td></tr></table></figure>

<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p>command: adb help</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1ZGlvL2NvbW1hbmQtbGluZS9hZGI=">Android Debug Bridge (adb)<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTAzOTE4MTEyMDc5ODg1">关于 adb 命令你所需要知道的<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Android</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Blog 01：使用 Hexo 迅速在 GitHub Pages 展開 Blog 旅程</title>
    <url>/Hexo/Blog/dceed03/</url>
    <content><![CDATA[<p>自從成為碼農後已經用 <span class="exturl" data-url="aHR0cHM6Ly9tYXJrZG93bi50dy8=">Markdown<i class="fa fa-external-link-alt"></i></span> 做了很久的筆記，之前聽朋友說 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLXR3Lw==">Hexo<i class="fa fa-external-link-alt"></i></span> 能直接把 Markdown 檔案變成 Blog 文章，想想就覺得心動，這樣日常做筆記之餘還能有所產出。感覺做筆記時心態會更認真，不過原本只是重點搬運工，之後還要思考文章的可讀性，以及如何才能幫助到真正需要這些資訊的人等等。</p>
<span id="more"></span>

<h2 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h2><ul>
<li>使用 Hexo Blog 框架將 Markdown 文件輸出成精美 Blog</li>
<li>以 <span class="exturl" data-url="aHR0cHM6Ly9wYWdlcy5naXRodWIuY29tLw==">GitHub Pages<i class="fa fa-external-link-alt"></i></span> 作為 Blog 網站的架設平台</li>
</ul>
<h2 id="參考文檔"><a href="#參考文檔" class="headerlink" title="參考文檔"></a>參考文檔</h2><p>按照以下官方文檔進行操作：</p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLXR3L2RvY3Mv">文件 | Hexo<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLXR3L2RvY3MvZ2l0aHViLXBhZ2Vz">在 GitHub Pages 上部署 Hexo<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<p>不過照官方文檔操作可能會遇到一些障礙，我改良了些許流程，希望能因此幫到大家。</p>
<h2 id="前置需求"><a href="#前置需求" class="headerlink" title="前置需求"></a>前置需求</h2><ul>
<li><p>安裝 <span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=">git<i class="fa fa-external-link-alt"></i></span></p>
<p> 我的版本：</p>
 <figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">git version 2.24.1.windows.2</span><br></pre></td></tr></table></figure>
</li>
<li><p>安裝 <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==">Node.js<i class="fa fa-external-link-alt"></i></span></p>
<p> 我的版本：</p>
 <figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ node --version</span><br><span class="line">v18.12.1</span><br></pre></td></tr></table></figure>
</li>
<li><p>註冊 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLw==">GitHub<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<p>所有安裝操作盡量以最新穩定版本為主。</p>
<h2 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h2><h3 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h3>   <figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>   我的版本：</p>
   <figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo version</span><br><span class="line">hexo-cli: 4.3.0</span><br><span class="line">os: win32 10.0.19045</span><br><span class="line">node: 18.12.1</span><br><span class="line">v8: 10.2.154.15-node.12</span><br><span class="line">uv: 1.43.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">ares: 1.18.1</span><br><span class="line">modules: 108</span><br><span class="line">nghttp2: 1.47.0</span><br><span class="line">napi: 8</span><br><span class="line">llhttp: 6.0.10</span><br><span class="line">openssl: 3.0.7+quic</span><br><span class="line">cldr: 41.0</span><br><span class="line">icu: 71.1</span><br><span class="line">tz: 2022b</span><br><span class="line">unicode: 14.0</span><br><span class="line">ngtcp2: 0.8.1</span><br><span class="line">nghttp3: 0.7.0</span><br></pre></td></tr></table></figure>

<h3 id="建立-Hexo-Blog-專案，並安裝-Hexo-必要檔案"><a href="#建立-Hexo-Blog-專案，並安裝-Hexo-必要檔案" class="headerlink" title="建立 Hexo Blog 專案，並安裝 Hexo 必要檔案"></a>建立 Hexo Blog 專案，並安裝 Hexo 必要檔案</h3>   <figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>   <code>&lt;folder&gt;</code> 換成自己想要的 Blog 專案名稱，我是直接學 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLXR3Lw==">官網首頁<i class="fa fa-external-link-alt"></i></span> 的範例取為 <code>blog</code>。</p>
<h3 id="於-GitHub-建立名為-username-github-io-的儲存庫，能見度-visibility-必須設為-Public"><a href="#於-GitHub-建立名為-username-github-io-的儲存庫，能見度-visibility-必須設為-Public" class="headerlink" title="於 GitHub 建立名為 username.github.io 的儲存庫，能見度 (visibility) 必須設為 Public"></a>於 GitHub 建立名為 <strong>username.github.io</strong> 的儲存庫，能見度 (visibility) 必須設為 Public</h3><p>   <code>username</code> 為 GitHub 使用者名稱，請自行替換。</p>
<p>   這樣其實就是建立了一個 <span class="exturl" data-url="aHR0cHM6Ly9wYWdlcy5naXRodWIuY29tLw==">GitHub Pages<i class="fa fa-external-link-alt"></i></span> 儲存庫，此儲存庫專門用來存放 Hexo 替我們生成的靜態網頁檔案，GitHub Pages 會將這些檔案作為網頁發佈。</p>
<p>   基本上此儲存庫建立好後我們就不會直接使用它了，都是藉由部署指令自動更新其內容。</p>
<h3 id="於-GitHub-建立一個用來存放-Hexo-Blog-專案的儲存庫，名稱隨意，能見度設為-Private"><a href="#於-GitHub-建立一個用來存放-Hexo-Blog-專案的儲存庫，名稱隨意，能見度設為-Private" class="headerlink" title="於 GitHub 建立一個用來存放 Hexo Blog 專案的儲存庫，名稱隨意，能見度設為 Private"></a>於 GitHub 建立一個用來存放 Hexo Blog 專案的儲存庫，名稱隨意，能見度設為 Private</h3><p>   之後 Blog 文章的更新與設定調整都是推至此儲存庫。</p>
<p>   <strong>註：</strong>官方文檔只建立了一個 <strong>username.github.io</strong> 儲存庫，但因為之後可能會設定一些機密資訊，所以我強烈建議多開一個私人儲存庫來降低風險，踩坑經歷請見：<a href="/Hexo/Debug/ba57c00/" title="Hexo Debug 04：Hexo 避免機密資訊上傳 GitHub">Hexo 避免機密資訊上傳 GitHub</a></p>
<h3 id="將-Hexo-Blog-專案-push-至儲存庫的預設分支"><a href="#將-Hexo-Blog-專案-push-至儲存庫的預設分支" class="headerlink" title="將 Hexo Blog 專案 push 至儲存庫的預設分支"></a>將 Hexo Blog 專案 push 至儲存庫的預設分支</h3>   <figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin https://github.com/&lt;username&gt;/&lt;步驟 4 的儲存庫名稱&gt;.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>

<p>   <strong>註：</strong>由於不知何時起 GitHub 要求以 token 執行 push 操作，這裡可能會遇到一些 GitHub 登入問題，在此提供之前踩坑後覺得有用的資訊：</p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vZW4vYXV0aGVudGljYXRpb24va2VlcGluZy15b3VyLWFjY291bnQtYW5kLWRhdGEtc2VjdXJlL2NyZWF0aW5nLWEtcGVyc29uYWwtYWNjZXNzLXRva2Vu">Creating a personal access token<i class="fa fa-external-link-alt"></i></span></p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhcm9saW5lX3dlbmR5L2FydGljbGUvZGV0YWlscy8xMTk3MzYxMDU=">GitHub - Personal Access Token &amp; SourceTree<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
</ul>
<h3 id="更改-Hexo-Blog-專案根目錄中-config-yml-的部署設定"><a href="#更改-Hexo-Blog-專案根目錄中-config-yml-的部署設定" class="headerlink" title="更改 Hexo Blog 專案根目錄中 _config.yml 的部署設定"></a>更改 Hexo Blog 專案根目錄中 <code>_config.yml</code> 的部署設定</h3>   <figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://&lt;username&gt;.github.io</span></span><br><span class="line"><span class="comment"># Blog 的網址，就是步驟 3 的 GitHub Pages 專案名稱，一定要填對，不然部署網站時會出錯</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;username&gt;/&lt;project&gt;</span></span><br><span class="line">  <span class="comment"># 就是步驟 3 的 GitHub Pages 儲存庫網址，一定要填對，不然部署 Blog 網站時會出錯</span></span><br><span class="line">  <span class="comment"># example, https://github.com/hexojs/hexojs.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line">  <span class="comment"># Hexo 生成 Blog 靜態網頁檔案後會 push 至 GitHub Pages 專案的 main branch</span></span><br></pre></td></tr></table></figure>

<h3 id="安裝-hexo-deployer-git"><a href="#安裝-hexo-deployer-git" class="headerlink" title="安裝 hexo-deployer-git"></a>安裝 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWRlcGxveWVyLWdpdA==">hexo-deployer-git<i class="fa fa-external-link-alt"></i></span></h3>   <figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>   我的版本：v3.0.0</p>
<p>   這是 Hexo 專門用來以 git 部署 Blog 網頁的工具，會依照步驟 6 的設定，將 Blog 網頁內容推到步驟 3 的 GitHub Pages 儲存庫，該儲存庫會自動將網頁部署。</p>
<h3 id="執行快速部署指令"><a href="#執行快速部署指令" class="headerlink" title="執行快速部署指令"></a>執行快速部署指令</h3>   <figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>

<p>   <strong>註：</strong>clean 會清除先前生成的靜態網頁資料；deploy 就是部屬指令。</p>
<h3 id="瀏覽-github-io-檢查你的-Blog-能否運作"><a href="#瀏覽-github-io-檢查你的-Blog-能否運作" class="headerlink" title="瀏覽 &lt;GitHub 用戶名&gt;.github.io 檢查你的 Blog 能否運作"></a>瀏覽 <code>&lt;GitHub 用戶名&gt;.github.io</code> 檢查你的 Blog 能否運作</h3><p>   <strong>註：</strong>可能需要等待一下子。</p>
<p>大功告成！<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-01-Hexo-on-GitHub-Pages/blogSample.png?raw=true" alt="大功告成！"></p>
<h2 id="阻礙"><a href="#阻礙" class="headerlink" title="阻礙"></a>阻礙</h2><p>雖然成功架設了 Blog，不過坑還是很大，在此列出接下來需要解決的問題：</p>
<ul>
<li>改變頁面主題：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=">Hexo Themes<i class="fa fa-external-link-alt"></i></span></li>
<li>留言功能</li>
<li>讓 Blog 更容易被搜尋：<span class="exturl" data-url="aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS9zZWFyY2gtY29uc29sZS93ZWxjb21l">Google Search Console<i class="fa fa-external-link-alt"></i></span></li>
<li>加入廣告 Plugin：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9hZHNlbnNlL3N0YXJ0LyMvP21vZGFsX2FjdGl2ZT1ub25l">Google Adsense<i class="fa fa-external-link-alt"></i></span></li>
<li>讓 Blog 可追蹤流量：<span class="exturl" data-url="aHR0cHM6Ly9hbmFseXRpY3MuZ29vZ2xlLmNvbS9hbmFseXRpY3Mvd2ViLw==">Google Analytics<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>2022&#x2F;11&#x2F;23 成功建置<a href="https://wcw0310.github.io/">本 Blog</a></p>
<p>如果你平常也在用 Markdown 做些技術筆記，不妨一起嘗試 Hexo，讓連自己都很少看的筆記成為 Blog 文章來服務網路上遇到同樣問題的人們吧！</p>
<p>願各位付出的精力都能結出甜美的果實。</p>
<p>2022&#x2F;12&#x2F;30 更新成保護機密資訊的建置方式。</p>
<p>下一篇系列文章：<a href="/Hexo/Blog/a3d910a8/" title="Hexo Blog 02：更換 Hexo 主題，初探 NexT">更換 Hexo 主題，初探 NexT</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub Pages</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Blog 02：更換 Hexo 主題，初探 NexT</title>
    <url>/Hexo/Blog/a3d910a8/</url>
    <content><![CDATA[<p>前一篇系列文章：<a href="/Hexo/Blog/dceed03/" title="Hexo Blog 01：使用 Hexo 迅速在 GitHub Pages 展開 Blog 旅程">使用 Hexo 迅速在 GitHub Pages 展開 Blog 旅程</a>  最後列了一些使用 Hexo Blog 要解決的問題，最重要的應該就是更換主題了，因為要擴充功能什麼的幾乎都能透過更改主題的設定實踐。</p>
<p>人工在網上繞了圈後，發現最多人拿來作練習的主題是 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy8=">NexT<i class="fa fa-external-link-alt"></i></span> ，為了少走彎路，我首次換的主題也決定是它了，然而我發現 NexT 官方有新的推薦用法，先人的文章卻都還沒採用，因此我決定照官方推薦方式實踐。</p>
<span id="more"></span>



<h2 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h2><ul>
<li><p>將預設主題換成 NexT</p>
</li>
<li><p>依照官方推薦的 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL2dldHRpbmctc3RhcnRlZC9jb25maWd1cmF0aW9uLmh0bWw=">Alternate Theme Config<i class="fa fa-external-link-alt"></i></span> 方式來設定 NexT 的 config</p>
</li>
</ul>
<h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>Hexo: 6.3.0</p>
<p>hexo-cli: 4.3.0</p>
<h2 id="建置流程"><a href="#建置流程" class="headerlink" title="建置流程"></a>建置流程</h2><ol>
<li><p>在 Hexo Blog 專案內安裝 NexT 主題：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ npm install hexo-theme-next</span><br></pre></td></tr></table></figure>

<p>我的版本：v8.14.0 (更新：2022&#x2F;12&#x2F;21)</p>
</li>
<li><p>更改專案根目錄中的 <code>_config.yml</code> 檔案，來啟用 NexT 主題：</p>
<p>將 <code>theme:</code> 的值由原先的 <code>landscape</code> 改成 <code>next</code>：</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span> <span class="comment">#landscape</span></span><br></pre></td></tr></table></figure>


</li>
<li><p>複製 NexT 原始 config 的內容至專案根目錄，作為本專案的主題設定檔：</p>
<p>在 Hexo Blog 專案內執行：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cp</span> node_modules/hexo-theme-next/_config.yml _config.next.yml</span><br></pre></td></tr></table></figure>

<p>這指令會在根目錄中建立 <code>_config.next.yml</code> 檔案，並複製 NexT 原始 config 的內容。</p>
<p><strong>註：</strong>之後要自定義主題設定只會修改 <code>_config.next.yml</code>，而不會直接改動任何 NexT 的原始檔案，這就是目前官方推薦的使用方式，這樣 NexT 之後做版本升級時，使用者的改動才不會影響程序，或是自定義的內容被覆蓋而遺失。</p>
</li>
<li><p>重新部署 Blog：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>


</li>
<li><p>瀏覽 Blog 檢查主題是否更新</p>
</li>
</ol>
<p>大功告成！<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-02-Hexo-Theme-NexT/nextSample.png?raw=true"></p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>NexT 主題簡潔優雅，不過仔細看更新後的 Blog 還是有些發現：</p>
<ul>
<li><p>缺了 Categories 與 Tags 頁面</p>
</li>
<li><p>缺了文章相關統計：閱讀次數、文章字數、所需閱讀時間</p>
</li>
<li><p>缺了與讀者互動功能：留言板或聊天室</p>
</li>
</ul>
<p>關卡還是滿多的，繼續加油吧！</p>
<p>下一篇系列文章：<a href="/Hexo/Blog/a4c4ed5f/" title="Hexo Blog 03：繼續探索 NexT">繼續探索 NexT</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Blog 03：繼續探索 NexT</title>
    <url>/Hexo/Blog/a4c4ed5f/</url>
    <content><![CDATA[<p>前一篇系列文章：<a href="/Hexo/Blog/a3d910a8/" title="Hexo Blog 02：更換 Hexo 主題，初探 NexT">更換 Hexo 主題，初探 NexT</a> 最後建出了最基本的 NexT 主題 Blog，看起來簡潔有力，但還是缺很多 Blog 的常見功能。本來以為要到處搜尋 Plugins 之類的，但 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL2dldHRpbmctc3RhcnRlZC9jb25maWd1cmF0aW9uLmh0bWw=">NexT 的官方文檔<i class="fa fa-external-link-alt"></i></span> 已經列出了大量的選項與 Plugins，很多功能只要在 config 中啟用就好。</p>
<p>下面我會列出非常必須或啟用後覺得特別有感的功能，並提供我自己的設定給各位參考，此外非常建議大家優先閱讀官方文檔自行嘗試。</p>
<span id="more"></span>

<h2 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h2><p>跟著我設定會變成這樣<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/nextSettingSample.png?raw=true"></p>
<h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>Hexo: 6.3.0</p>
<p>hexo-cli: 4.3.0</p>
<p>NexT: 8.14.0</p>
<h2 id="主題樣式"><a href="#主題樣式" class="headerlink" title="主題樣式"></a>主題樣式</h2><p>NexT 提供了四種主題樣式，每種都可以對應黑暗模式，大家可以善用本地預覽來挑選自己喜歡的。</p>
<p>(身為眼睛天天被摧殘的碼農，我是一定要開啟黑暗模式的啦!)</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dark Mode</span></span><br><span class="line"><span class="attr">darkmode:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h2 id="側邊欄位置"><a href="#側邊欄位置" class="headerlink" title="側邊欄位置"></a>側邊欄位置</h2><p>預設在左邊，我因為其他版面配置考量，所以改成右邊。</p>
<p>有一些功能顯示的位置跟側邊欄位置相關，像是：返回最上按鈕、書籤。</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># Sidebar Position.</span></span><br><span class="line">  <span class="comment">#position: left</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">right</span></span><br></pre></td></tr></table></figure>

<p>側邊欄 (sidebar)<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/sidebar.png?raw=true"></p>
<h2 id="首頁文章折疊與閱讀全文按鈕"><a href="#首頁文章折疊與閱讀全文按鈕" class="headerlink" title="首頁文章折疊與閱讀全文按鈕"></a>首頁文章折疊與閱讀全文按鈕</h2><p>首頁預設是把每篇文章完整呈現出來，其實滿不符合一般人的期望，開啟此功能可以只顯示文章摘要，讓想看完整文章的讀者可以點擊 <code>閱讀全文</code> 按鈕進入該文章頁面閱讀。</p>
<ol>
<li><p>修改設定檔</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在文章設置斷點</p>
<p>在文章的 Markdown 檔案中插入 <code>&lt;!-- more --&gt;</code> 標記，這樣標記之前的內容會顯示在首頁，標記之後的內容則會隱藏。</p>
</li>
</ol>
<p>閱讀全文按鈕<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/readMoreBTN.png?raw=true"></p>
<h2 id="訪客人次-總閱讀次數"><a href="#訪客人次-總閱讀次數" class="headerlink" title="訪客人次&#x2F;總閱讀次數"></a>訪客人次&#x2F;總閱讀次數</h2><p>NexT 提供了 <span class="exturl" data-url="aHR0cDovL2licnVjZS5pbmZvLzIwMTUvMDQvMDQvYnVzdWFuemkv">不蒜子<i class="fa fa-external-link-alt"></i></span> 的網站記數功能，只要 <code>enable:</code> 設為 <code>true</code> 就能啟用。</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># For more information: http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span> <span class="comment"># 網站總訪客人數，顯示在頁面底部</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span> <span class="comment"># 網站總閱讀次數，網頁每次刷新都會加一 (快樂表)，顯示在頁面底部</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">false</span> <span class="comment"># 文章總閱讀次數，網頁每次刷新都會加一 (快樂表)，顯示在文章標題下方。我個人是使用 firestore 實現非快樂表的此功能</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">far</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure>

<p>頁面底部的訪客人數與閱讀次數<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/siteCount.png?raw=true"></p>
<h2 id="文章閱讀次數-Firestore"><a href="#文章閱讀次數-Firestore" class="headerlink" title="文章閱讀次數 (Firestore)"></a>文章閱讀次數 (Firestore)</h2><p>使用 firestore 功能實現的文章閱讀次數，但其實應該說是文章訪客人數，同個瀏覽器重複進入文章是不會增加記數的。</p>
<p>需要去 <span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLmZpcmViYXNlLmdvb2dsZS5jb20vdS8wLw==">Google Firebase<i class="fa fa-external-link-alt"></i></span> 建立新專案，並且取得 <code>apiKey</code> 與 <code>projectId</code>。</p>
<p>按照 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoaXJkLXBhcnR5LXNlcnZpY2VzL3N0YXRpc3RpY3MtYW5kLWFuYWx5dGljcy5odG1sI0ZpcmViYXNl">NexT 文檔<i class="fa fa-external-link-alt"></i></span> 就可以完成。</p>
<p>要注意的是 <code>apiKey</code> 必須進入 <code>Authentication</code> 頁面啟用該功能後才會生成。</p>
<p>之後需要進入 <code>Firestore Database</code> 頁面建立新資料庫，讀取規則需照如下設定：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rules_version = &#x27;2&#x27;;</span><br><span class="line">service cloud.firestore &#123;</span><br><span class="line">  match /databases/&#123;database&#125;/documents &#123;</span><br><span class="line">    match /articles/&#123;document=**&#125; &#123;</span><br><span class="line">      allow read, create: if true;</span><br><span class="line">      allow write: if request.resource.data.count==resource.data.count+1;</span><br><span class="line">    &#125;</span><br><span class="line">    match /&#123;document=**&#125; &#123;</span><br><span class="line">      allow read, write: if false;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>之後再調整主題設定就好：</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Another tool to show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># Visit https://console.firebase.google.com/u/0/ to get apiKey and projectId.</span></span><br><span class="line"><span class="comment"># Visit https://firebase.google.com/docs/firestore/ to get more information about firestore.</span></span><br><span class="line"><span class="attr">firestore:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">collection:</span> <span class="string">articles</span> <span class="comment"># Required, a string collection name to access firestore database</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="string">OOOOO</span> <span class="comment"># Required</span></span><br><span class="line">  <span class="attr">projectId:</span> <span class="string">OOOOO</span> <span class="comment"># Required</span></span><br></pre></td></tr></table></figure>

<p>文章標題下方的眼睛是 firestore 計算的文章訪客人數<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/firestoreCount.png?raw=true"></p>
<p>這功能設置起來是真的滿麻煩，目前也不是很彈性，想快速有這種功能只要將前面  <span class="exturl" data-url="aHR0cDovL2licnVjZS5pbmZvLzIwMTUvMDQvMDQvYnVzdWFuemkv">不蒜子<i class="fa fa-external-link-alt"></i></span> 的網站記數功能 <code>post_views:</code> 設為 true 就好了。</p>
<p>但使用 firestore 的方式可以將專案結合其他 Google 的統計功能。</p>
<h2 id="程式碼區塊複製按紐"><a href="#程式碼區塊複製按紐" class="headerlink" title="程式碼區塊複製按紐"></a>程式碼區塊複製按紐</h2><p>預設程式碼區塊是沒有複製按鈕的，不過也只要 <code>enable:</code> 設為 <code>true</code> 就能啟用。</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">default</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">stackoverflow-dark</span></span><br><span class="line">  <span class="attr">prism:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">prism</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">prism-dark</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">flat</span></span><br></pre></td></tr></table></figure>



<h2 id="返回最上按鈕調整"><a href="#返回最上按鈕調整" class="headerlink" title="返回最上按鈕調整"></a>返回最上按鈕調整</h2><p>其實預設就有開啟這功能，不過我比較喜歡有顯示百分比的。</p>
<p>可以選擇要不要放在側邊欄裡面，如果不要的話就會出現在側邊欄另一邊的下面。</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>顯示瀏覽百分比的返回最上按鈕<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/b2tBTN.png?raw=true"></p>
<h2 id="頁面載入進度條"><a href="#頁面載入進度條" class="headerlink" title="頁面載入進度條"></a>頁面載入進度條</h2><p>顯示在瀏覽器上方，讓頁面載入時有個視覺回饋。</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/CodeByZach/pace</span></span><br><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># All available colors:</span></span><br><span class="line">  <span class="comment"># black | blue | green | orange | pink | purple | red | silver | white | yellow</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">blue</span></span><br><span class="line">  <span class="comment"># All available themes:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">minimal</span></span><br></pre></td></tr></table></figure>



<h2 id="閱讀進度條"><a href="#閱讀進度條" class="headerlink" title="閱讀進度條"></a>閱讀進度條</h2><p>顯示在瀏覽器上方 (同頁面載入進度條) 或下方，跟返回最上按鈕的百分比是一樣意思，就是多一種視覺回饋，預設是藍色。</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reading progress bar</span></span><br><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Available values: left | right</span></span><br><span class="line">  <span class="attr">start_at:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment"># Available values: top | bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">reversed:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#37c6c0&quot;</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span></span><br></pre></td></tr></table></figure>

<p>閱讀進度條設成 left 跟 top 後，跟頁面載入進度條其實是差不多的東西<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/progressBar.png?raw=true"></p>
<h2 id="書籤"><a href="#書籤" class="headerlink" title="書籤"></a>書籤</h2><p>記住讀者的閱讀位置，這樣下次到訪時會從記錄的位置開始。</p>
<p>啟用後側邊欄另一邊的上面會有個書籤的圖標，點擊後就會記錄了。</p>
<p>也能設成自動記錄，但我個人覺得自動記錄很惱人，所以採用手動模式。</p>
<p>2022&#x2F;12&#x2F;20 更新：後來覺得這個功能整個惱人，所以關掉了。</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bookmark Support</span></span><br><span class="line"><span class="attr">bookmark:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Customize the color of the bookmark.</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#fff&quot;</span></span><br><span class="line">  <span class="comment"># If auto, save the reading progress when closing the page or clicking the bookmark-icon.</span></span><br><span class="line">  <span class="comment"># If manual, only save it by clicking the bookmark-icon.</span></span><br><span class="line">  <span class="attr">save:</span> <span class="string">manual</span></span><br></pre></td></tr></table></figure>



<h2 id="文章字數統計-閱讀時間估計"><a href="#文章字數統計-閱讀時間估計" class="headerlink" title="文章字數統計&#x2F;閱讀時間估計"></a>文章字數統計&#x2F;閱讀時間估計</h2><p>這是 Blog 中很常見的功能，但預設是沒啟用的。</p>
<p>照 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by13b3JkLWNvdW50ZXI=">官方文檔<i class="fa fa-external-link-alt"></i></span> 操作即可啟用：</p>
<ol>
<li><p>安裝</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ npm install hexo-word-counter</span><br><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>
</li>
<li><p>調整專案設定</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Word Counter: https://github.com/next-theme/hexo-word-counter</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span> <span class="comment"># 文章字數統計，顯示在文章標題下方</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span> <span class="comment"># 文章閱讀時間估計，顯示在文章標題下方</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span> <span class="comment"># 全文章字數統計，顯示在頁面最下方</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span> <span class="comment"># 全文章閱讀時間估計，顯示在頁面最下方</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span> <span class="comment"># 排除程式碼區塊</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span> <span class="comment"># 每分鐘閱讀幾個字</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">&quot;mins.&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>調整主題設定</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">false</span> <span class="comment"># 文章標題下方的標示是否顯示說明文字</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-word-counter</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">false</span> <span class="comment"># 文章標題下方的標示是否獨立一行顯示</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span> <span class="comment"># 頁面最下方的標示是否顯示說明文字</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>文章標題下方的文章字數統計與閱讀時間估計<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/postWordCandReadT.png?raw=true"></p>
<p>頁面最下方的全文章字數統計與全文章閱讀時間估計<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/siteWordCandReadT.png?raw=true"></p>
<h2 id="關於-About-、標籤-Tags-與-分類-Categories-頁面"><a href="#關於-About-、標籤-Tags-與-分類-Categories-頁面" class="headerlink" title="關於 (About)、標籤 (Tags) 與 分類 (Categories) 頁面"></a>關於 (About)、標籤 (Tags) 與 分類 (Categories) 頁面</h2><p>NexT 預設沒有幫使用者建立這三個常用的頁面，不過建立步驟也很簡單，使用的是 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoZW1lLXNldHRpbmdzL2N1c3RvbS1wYWdlcy5odG1s">NexT Custom Pages<i class="fa fa-external-link-alt"></i></span> 機制：</p>
<h3 id="使用建立新頁面指令："><a href="#使用建立新頁面指令：" class="headerlink" title="使用建立新頁面指令："></a>使用建立新頁面指令：</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo new page custom-name</span><br></pre></td></tr></table></figure>

<p>指令中的 <code>custom-name</code> 分別換成 <code>about</code>、<code>tags</code> 與 <code>categories</code> 就能創造出不同的三種頁面（此指令可以自訂任何頁面，不限於這三種）。</p>
<p>該指令會在 Blog 專案根目錄中的 source 資料夾中建立 custom-name&#x2F;index.md 檔案。</p>
<h3 id="修改-custom-name-index-md："><a href="#修改-custom-name-index-md：" class="headerlink" title="修改 custom-name&#x2F;index.md："></a>修改 custom-name&#x2F;index.md：</h3><ul>
<li><p>關於（about）頁面的 front-matter 只需要自訂 title 即可，接著下面可以像一般 post 文章一樣寫入自定義內容。</p>
<figure class="highlight yaml"><figcaption><span>about/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">關於</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">Hi</span> <span class="string">歡迎你來到這一頁，在這文字媒介式微的時代，你能看到我在這寫的廢話真的算緣分。</span></span><br></pre></td></tr></table></figure>
<p>（除了 <code>type: tags</code> 與 <code>type: categories</code> 的 Custom Pages 都能當成一般文章編輯內容）</p>
</li>
<li><p>標籤（tags）頁面 與 分類（categories）頁面的 front-matter 還需要加上 type，並且下面不能加上自定義內容（加了也沒用）。</p>
<figure class="highlight yaml"><figcaption><span>tags/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">標籤</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">tags</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><figcaption><span>categories/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分類</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">categories</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<p>（NexT 主題對這兩種 type 的 Custom Pages 做了特殊處置，即顯示所有 tags 或顯示所有 categories。）</p>
</li>
</ul>
<h3 id="修改主題設定檔："><a href="#修改主題設定檔：" class="headerlink" title="修改主題設定檔："></a>修改主題設定檔：</h3><p>將本來被註解的 about、tags 與 categories 開啟。</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-sensitive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>

<p>完成上述操作後，重新部署 Blog 就能看到側邊欄的 menu 會出現 關於、標籤 與 分類 按鈕，點擊後可以進入各獨立頁面。</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/about.png?raw=true" alt="關於頁面 (About)"></div><div class="group-picture-column"><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/tags.png?raw=true" alt="標籤頁面 (Tags)"></div><div class="group-picture-column"><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/categories.png?raw=true" alt="分類頁面 (Categories)"></div></div></div>



<h2 id="站內搜尋"><a href="#站內搜尋" class="headerlink" title="站內搜尋"></a>站內搜尋</h2><p>可以在站內搜尋自己文章，啟用後側邊欄會有個放大鏡圖標的搜尋鈕。</p>
<p>照 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoaXJkLXBhcnR5LXNlcnZpY2VzL3NlYXJjaC1zZXJ2aWNlcy5odG1sI0xvY2FsLVNlYXJjaA==">官方文檔<i class="fa fa-external-link-alt"></i></span> 操作即可啟用：</p>
<ol>
<li><p>安裝</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>
</li>
<li><p>調整專案設定</p>
<figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>調整主題設定</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>站內搜尋範例<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/search.png?raw=true"></p>
<h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><p>在每篇文章的側邊欄列出關聯的文章 (NexT 8.14.0 之前是在每篇文章最後，並且有很多問題)，這功能我是覺得滿推薦啟用的。</p>
<p>照 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoZW1lLXNldHRpbmdzL3Bvc3RzLmh0bWwjUmVsYXRlZC1Qb3B1bGFyLVBvc3Rz">NexT 文檔<i class="fa fa-external-link-alt"></i></span> 操作才會成功，若是直接照 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoZW1lLXNldHRpbmdzL3Bvc3RzLmh0bWwjUmVsYXRlZC1Qb3B1bGFyLVBvc3Rz">插件 README<i class="fa fa-external-link-alt"></i></span> 設定會失敗，因為 NexT 已經進行實現了，我們只需要安裝跟啟用就好。</p>
<ol>
<li>安裝</li>
</ol>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ npm install hexo-related-posts</span><br><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>調整主題設定來啟用</li>
</ol>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Related popular posts</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/sergeyzwezdin/hexo-related-posts</span></span><br><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span> <span class="comment"># Custom header, leave empty to use the default one</span></span><br><span class="line">  <span class="attr">display_in_home:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>相關文章範例<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-03-Hexo-Theme-NexT-2/relatedPosts.png?raw=true"></p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>啟用以上功能後，Blog 頁面整個豐富了起來，但目前還是只能供讀者閱讀而已，下次再加上能讓讀者與作者交流的功能。</p>
<p>下一篇系列文章：<a href="/Hexo/Blog/bf635840/" title="Hexo Blog 04：NexT 主題加入留言與聊天室機制">NexT 主題加入留言與聊天室機制</a></p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly93ZWlyZW54dWUuZ2l0aHViLmlvLzIwMjEvMDYvMTEvaGV4b19uZXh0X2ZpcmVzdG9yZV92aXNpdG9ycy8=">Hexo × NexT × Firestore 顯示瀏覽人次<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Firebase</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Blog 05：NexT 主題 SEO 相關設置</title>
    <url>/Hexo/Blog/6528a7b6/</url>
    <content><![CDATA[<p>前一篇系列文章：<a href="/Hexo/Blog/bf635840/" title="Hexo Blog 04：NexT 主題加入留言與聊天室機制">NexT 主題加入留言與聊天室機制</a> 讓我們有機會透過留言與聊天室跟讀者互動，這回來讓我們的文章能真正接觸到讀者，並且綜觀全局知曉到底有沒有讀者來過吧!</p>
<span id="more"></span>



<h2 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h2><ul>
<li><p>完成 Blog 的 SEO 相關設置</p>
</li>
<li><p>使用 Google Analytics 進行 Blog 流量監測</p>
</li>
</ul>
<h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>Hexo: 6.3.0</p>
<p>hexo-cli: 4.3.0</p>
<p>NexT: 8.14.0</p>
<h2 id="SEO-設置"><a href="#SEO-設置" class="headerlink" title="SEO 設置"></a>SEO 設置</h2><p>想要讓建置好的 Blog 被需要的人們看到，搜尋引擎優化 (Search Engine Optimization, SEO) 是必要的功課。而要讓我們的 Blog 被搜尋引擎收錄的第一步就是要驗證網站的所有權。</p>
<h3 id="驗證網站擁有權"><a href="#驗證網站擁有權" class="headerlink" title="驗證網站擁有權"></a>驗證網站擁有權</h3><p>NexT 提供了一些方便我們進行 SEO 作業的 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoZW1lLXNldHRpbmdzL3Nlby5odG1s">接口<i class="fa fa-external-link-alt"></i></span>，主要是方便我們對各搜尋引擎驗證網站所有權，適配的搜尋引擎有：Google、Bing、Yandex、Baidu。其中 Yandex 主要是服務俄羅斯，所以我直接放棄使用；Baidu 是服務中國，雖然同是中文圈，但它申請服務需要使用中國境內手機號碼才能申請，所以我被迫放棄。而 Bing 的驗證可以直接以通過驗證的 Google 帳號來授權，因此最終我們只需要申請 Google 的驗證就好。</p>
<h4 id="於-Google-Search-Console-驗證網站擁有權："><a href="#於-Google-Search-Console-驗證網站擁有權：" class="headerlink" title="於 Google Search Console 驗證網站擁有權："></a>於 <span class="exturl" data-url="aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS9zZWFyY2gtY29uc29sZS9hYm91dA==">Google Search Console<i class="fa fa-external-link-alt"></i></span> 驗證網站擁有權：</h4><h5 id="以網址前置字元進行驗證"><a href="#以網址前置字元進行驗證" class="headerlink" title="以網址前置字元進行驗證"></a>以網址前置字元進行驗證</h5><p>輸入 Blog 網址後點擊 <code>繼續</code><br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-05-Hexo-Theme-NexT-SEO-and-Analytic/welcome.png?raw=true"></p>
<h5 id="驗證擁有權"><a href="#驗證擁有權" class="headerlink" title="驗證擁有權"></a>驗證擁有權</h5><p>選擇 <code>HTML 標記</code><br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-05-Hexo-Theme-NexT-SEO-and-Analytic/verify.png?raw=true"></p>
<ul>
<li>複製 HTML 程式碼中的 content 內容（不含引號），貼進 NexT 主題設置中：</li>
</ul>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># SEO Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/theme-settings/seo</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If true, site-subtitle will be added to the title of index page.</span></span><br><span class="line"><span class="comment"># Remember to set up your site-subtitle in Hexo `_config.yml` (e.g. subtitle: Subtitle)</span></span><br><span class="line"><span class="attr">index_with_subtitle:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically add external URL with Base64 encrypt &amp; decrypt.</span></span><br><span class="line"><span class="attr">exturl:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># If true, an icon will be attached to each external URL</span></span><br><span class="line"><span class="attr">exturl_icon:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://developers.google.com/search</span></span><br><span class="line"><span class="attr">google_site_verification:</span> <span class="string">XXXXXXXXXXXXXXXXXXXXXXX</span> <span class="comment"># 僅填入 content 部分：&lt;meta name=&quot;google-site-verification&quot; content=&quot;XXXXXXXXXXXXXXXXXXXXXXX&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>重新部署 Blog 後，回到 Google Search Console 點擊 <code>驗證</code> 即可完成驗證。</li>
</ul>
<h4 id="於-Bing-Webmaster-Tools-驗證網站擁有權："><a href="#於-Bing-Webmaster-Tools-驗證網站擁有權：" class="headerlink" title="於 Bing Webmaster Tools 驗證網站擁有權："></a>於 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmluZy5jb20vd2VibWFzdGVycw==">Bing Webmaster Tools<i class="fa fa-external-link-alt"></i></span> 驗證網站擁有權：</h4><p>選擇 <code>從 GSC 匯入您的網站</code>，即可簡單完成。</p>
<p>點擊 <code>匯入</code><br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-05-Hexo-Theme-NexT-SEO-and-Analytic/bingVerify.png?raw=true"></p>
<p>驗證完所有權後，接著必須讓搜尋引擎知道我們的 Blog 有什麼內容。執行的方式簡單粗暴，就是我們主動提交網站資訊給搜尋引擎，不這樣做就只能慢慢等待他們的網路爬蟲爬到我們的 Blog 了。</p>
<h3 id="提交網站資訊"><a href="#提交網站資訊" class="headerlink" title="提交網站資訊"></a>提交網站資訊</h3><p>最理想的方式就是提交網站地圖 (sitemap) 位置，讓搜尋引擎定期透過爬蟲方式來更新我們 Blog 的最新索引狀態。</p>
<h4 id="提交-sitemap"><a href="#提交-sitemap" class="headerlink" title="提交 sitemap"></a>提交 sitemap</h4><p>使用 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWdlbmVyYXRvci1zaXRlbWFw">hexo-generator-sitemap<i class="fa fa-external-link-alt"></i></span> 插件可以在部署 Blog 時生成 sitemap 於特定路徑：</p>
<ol>
<li><p>於專案根目錄安裝：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改主題配置：</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-generator-sitemap: https://github.com/hexojs/hexo-generator-sitemap</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sitemap.xml</span></span><br><span class="line">  <span class="attr">rel:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>重新部署 Blog 後，前往 Blog 網頁，在網址後加上 <code>/sitemap.xml</code>，即可看到 sitemap 的 xml  畫面。</p>
</li>
<li><p>將 sitemap 路徑加入 <span class="exturl" data-url="aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS9zZWFyY2gtY29uc29sZS9hYm91dA==">Google Search Console<i class="fa fa-external-link-alt"></i></span> 與 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmluZy5jb20vd2VibWFzdGVycw==">Bing Webmaster Tools<i class="fa fa-external-link-alt"></i></span>。</p>
</li>
</ol>
<p>Google Search Console<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-05-Hexo-Theme-NexT-SEO-and-Analytic/googleSitemap.png?raw=true"></p>
<p>Bing Webmaster Tools<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-05-Hexo-Theme-NexT-SEO-and-Analytic/bingSitemap.png?raw=true"></p>
<p>加入 sitemap 後，理想上搜尋引擎就能定期透過他們的網路爬蟲自動更新我們 Blog 的索引狀態。不過我使用 Google 加入sitemap 後一直都是顯示 <code>無法擷取</code>，保險起見還是主動提交網址吧。</p>
<p>2023&#x2F;01&#x2F;01 更新：<br>Google 終於讀了我的 sitemap<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-05-Hexo-Theme-NexT-SEO-and-Analytic/googleSitemapAccess.png?raw=true"></p>
<h4 id="提交網址"><a href="#提交網址" class="headerlink" title="提交網址"></a>提交網址</h4><p>sitemap 中包含我們 Blog 中所有文章的網址，因此交給搜尋引擎爬蟲是最省力的，但當 sitemap 方式不可靠時，就必須將每篇文章的網址一一提交給搜尋引擎了。</p>
<h5 id="手動提交"><a href="#手動提交" class="headerlink" title="手動提交"></a>手動提交</h5><p>就是暴力解，每次發布新文章都去各搜尋引擎提交網址，不同搜尋引擎這功能的名稱小有不同：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9zZWFyY2guZ29vZ2xlLmNvbS9zZWFyY2gtY29uc29sZS9hYm91dA==">Google Search Console<i class="fa fa-external-link-alt"></i></span>：網址審查。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYmluZy5jb20vd2VibWFzdGVycw==">Bing Webmaster Tools<i class="fa fa-external-link-alt"></i></span>：URL 檢查。</p>
<h5 id="自動提交"><a href="#自動提交" class="headerlink" title="自動提交"></a>自動提交</h5><p>手動畢竟還是太惱人了，好險有前輩們提供的自動提交網址審查插件。</p>
<p>這裡列出我使用過的兩種：</p>
<h6 id="hexo-seo-autopush"><a href="#hexo-seo-autopush" class="headerlink" title="hexo-seo-autopush"></a><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xldGUxMTQvaGV4by1zZW8tYXV0b3B1c2g=">hexo-seo-autopush<i class="fa fa-external-link-alt"></i></span></h6><p>使用方法它的文檔就很清楚了，在此列一些它的特點：</p>
<ul>
<li>每日定時推送 (預設是中午12點)。</li>
<li>點擊 Blog 的 GitHub 倉儲的 Star 即可手動推送。</li>
<li>使用 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vZW4vYWN0aW9ucw==">GitHub Actions<i class="fa fa-external-link-alt"></i></span> 機制完成。</li>
<li>keys 敏感資訊透過 GitHub Secrets 保存，不存在自己的設定檔中。</li>
<li>須注意 GitHub 倉儲的 default branch 需要設成存放靜態網頁的 branch 才會運作，不過跟著我建議的方法建置就不用思考這問題 <a href="/Hexo/Blog/dceed03/" title="Hexo Blog 01：使用 Hexo 迅速在 GitHub Pages 展開 Blog 旅程">使用 Hexo 迅速在 GitHub Pages 展開 Blog 旅程</a>。</li>
</ul>
<h6 id="hexo-submit-urls-to-search-engine"><a href="#hexo-submit-urls-to-search-engine" class="headerlink" title="hexo-submit-urls-to-search-engine"></a><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NqaDA2MTMvaGV4by1zdWJtaXQtdXJscy10by1zZWFyY2gtZW5naW5l">hexo-submit-urls-to-search-engine<i class="fa fa-external-link-alt"></i></span></h6><p>申請 keys 的方法需要參照 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xldGUxMTQvaGV4by1zZW8tYXV0b3B1c2g=">hexo-seo-autopush<i class="fa fa-external-link-alt"></i></span> 的文件，特點為每次部署 Blog 時都會推送網址去審查。</p>
<p>最終我自己是只採用 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xldGUxMTQvaGV4by1zZW8tYXV0b3B1c2g=">hexo-seo-autopush<i class="fa fa-external-link-alt"></i></span>，因為一天推送一次網址審查其實就夠多了，真有額外需要也有提供手動執行的方式。</p>
<p>至此，SEO的基本設定就完成了，新文章發布後什麼都不做，半週內即可在搜尋引擎搜尋到自己的文章，至於如何提升在搜尋引擎中的排序優先度就是其他課題了。</p>
<p>想知道自己的 Blog 被搜尋引擎收錄了沒只需要在搜尋引擎搜尋： <code>site:自己網址</code> （注意：冒號後面沒有空格！）</p>
<h2 id="Google-Analytics"><a href="#Google-Analytics" class="headerlink" title="Google Analytics"></a>Google Analytics</h2><p>各搜尋引擎的 Webmaster Tools 都有提供很不錯的網站成效分析，其實基本上就夠用了，不過沒有人在嫌多的吧?</p>
<p>Google Analytics 提供的資訊更多，對於之後可能套用更多 Google 工具的人來說，就順手加上吧，畢竟之後也一定會用到。</p>
<p>前往 <span class="exturl" data-url="aHR0cHM6Ly9hbmFseXRpY3MuZ29vZ2xlLmNvbS8=">Google Analytics<i class="fa fa-external-link-alt"></i></span> 創建帳號，如果先前有用了其他 Google 服務的話記得直接使用，或是將他們關聯起來，取得 <code>Google track ID</code> 後貼進主題設定檔及可：</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Google Analytics</span></span><br><span class="line"><span class="comment"># See: https://analytics.google.com</span></span><br><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line">  <span class="attr">tracking_id:</span> <span class="string">OOOOO</span> <span class="comment"># &lt;app_id&gt;</span></span><br><span class="line">  <span class="comment"># By default, NexT will load an external gtag.js script on your site.</span></span><br><span class="line">  <span class="comment"># If you only need the pageview feature, set the following option to true to get a better performance.</span></span><br><span class="line">  <span class="attr">only_pageview:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>設定好後 Google 就可以追蹤我們 Blog 的表現，我們可以依據這些數據知曉各文章的觸及效果如何，以調整我們的 SEO 策略。</p>
<h2 id="其他-SEO-相關插件與文件設置"><a href="#其他-SEO-相關插件與文件設置" class="headerlink" title="其他 SEO 相關插件與文件設置"></a>其他 SEO 相關插件與文件設置</h2><h3 id="hexo-filter-nofollow"><a href="#hexo-filter-nofollow" class="headerlink" title="hexo-filter-nofollow"></a><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWZpbHRlci1ub2ZvbGxvdw==">hexo-filter-nofollow<i class="fa fa-external-link-alt"></i></span></h3><p>對外部連結進行必要修飾，有助於優化安全、隱私和 SEO。</p>
<h3 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt"></a><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vc2VhcmNoL2RvY3MvY3Jhd2xpbmctaW5kZXhpbmcvcm9ib3RzL3JvYm90c190eHQ/aGw9emgtdHc=">robots.txt<i class="fa fa-external-link-alt"></i></span></h3><p>告訴搜尋引擎爬蟲網站中哪些地方能去或不能去。</p>
<h3 id="hexo-abbrlink"><a href="#hexo-abbrlink" class="headerlink" title="hexo-abbrlink"></a><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvemJvL2hleG8tYWJicmxpbms=">hexo-abbrlink<i class="fa fa-external-link-alt"></i></span></h3><p>生成各頁面唯一 URL，可視需求使用。</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>至此我們的 Blog 建設就完成得差不多了，未來大致就是好好學怎麼寫好文章，跟加上廣告來破壞版面 (咦?</p>
<p>下一篇系列文章：<a href="/Hexo/Blog/d951a84f/" title="Hexo Blog 06：NexT 主題加入 Google Adsense">NexT 主題加入 Google Adsense</a></p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly93ZWlsaW5pbmcuZ2l0aHViLmlvLzEuaHRtbA==">Hexo SEO 最有用的教程<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNray5tb2UvcG9zdC9oZXhvLWZpbHRlci1ub2ZvbGxvdy1qb2luZWQtaGV4by1vZmZpY2lhbC1wbHVnaW4v">hexo-filter-nofollow - Hexo 官方的 nofollow 插件<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>SEO</tag>
        <tag>Google Search Console</tag>
        <tag>Microsoft Bing</tag>
        <tag>Webmaster Tools</tag>
        <tag>Google Analytics</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Blog 06：NexT 主題加入 Google Adsense</title>
    <url>/Hexo/Blog/d951a84f/</url>
    <content><![CDATA[<p>前一篇系列文章：<a href="/Hexo/Blog/6528a7b6/" title="Hexo Blog 05：NexT 主題 SEO 相關設置">NexT 主題 SEO 相關設置</a> 加入向搜尋引擎自動推送網址的功能後，我們的 Blog 終於能出現在人們視野中。而有能見度後就是要收取過路費阿 (咦?</p>
<span id="more"></span>



<h2 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h2><ul>
<li>於 Blog 加入並啟用 Google Adsense</li>
</ul>
<h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>Hexo: 6.3.0</p>
<p>hexo-cli: 4.3.0</p>
<p>NexT: 8.14.0</p>
<h2 id="於-Google-AdSense-新增網站並獲取-AdSense-程式碼"><a href="#於-Google-AdSense-新增網站並獲取-AdSense-程式碼" class="headerlink" title="於 Google AdSense 新增網站並獲取 AdSense 程式碼"></a>於 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9hZHNlbnNlLw==">Google AdSense<i class="fa fa-external-link-alt"></i></span> 新增網站並獲取 AdSense 程式碼</h2><p>由於我是申請成功後才想說要來記錄申請過程，所以看不到首次申請的畫面了…不過重要的地方不變。</p>
<p>基本上按照 <span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vYWRzZW5zZS9hbnN3ZXIvMTAxNjI=">Google AdSense 官方說明<i class="fa fa-external-link-alt"></i></span> 操作即可。</p>
<h3 id="添加網址"><a href="#添加網址" class="headerlink" title="添加網址"></a>添加網址</h3><p>總之就是輸入 Blog 的網址<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-06-Hexo-Theme-NexT-Google-Adsense/addUrl.png?raw=true"></p>
<h3 id="三步驟設定"><a href="#三步驟設定" class="headerlink" title="三步驟設定"></a>三步驟設定</h3><p>進去之後大致會看到由左至右三個步驟：</p>
<ol>
<li><span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vYWRzZW5zZS9hbnN3ZXIvNDczMzM=">輸入您的付款資訊<i class="fa fa-external-link-alt"></i></span>：</li>
</ol>
<p>就乖乖的按網站指示填資料。</p>
<ol start="2">
<li><span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vYWRzZW5zZS9hbnN3ZXIvMTA2NTc4ODU=">(選擇性) 查看廣告在網站上的呈現模樣<i class="fa fa-external-link-alt"></i></span>：</li>
</ol>
<p>我是直接選擇 <code>自動廣告</code>，這樣通過審查後 Google 會自己將廣告內容插入我們的 Blog，而且他已經很人性化，提供我們選擇想要的廣告板型了。</p>
<p>若是想要全部自定義，就需要使用 NexT 主題的 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL2FkdmFuY2VkLXNldHRpbmdzL2N1c3RvbS1maWxlcy5odG1s">Custom Files<i class="fa fa-external-link-alt"></i></span> 配合一些主題參數化設置或是其他插件協助完成。</p>
<ol start="3">
<li><span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vYWRzZW5zZS9hbnN3ZXIvNzU4NDI2Mw==">將您的網站連結到 AdSense<i class="fa fa-external-link-alt"></i></span>：</li>
</ol>
<p>進去此選項即可複製 HTML 程式碼：</p>
<figure class="highlight html"><figcaption><span>此為範例，請複製自己的</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-OOOOOOOOOOOOOOOO&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>複製後即可點擊 <code>要求審查</code>，再來就乖乖等 Google 審查吧，Google 是說 <code>通常會在幾天內完成，但有時可能需時 2 至 4 週</code>。</p>
<h2 id="將-HTML-程式碼加入-Blog"><a href="#將-HTML-程式碼加入-Blog" class="headerlink" title="將 HTML 程式碼加入 Blog"></a>將 HTML 程式碼加入 Blog</h2><p>Google 要求將 HTML 程式碼貼入 <code>&lt;head&gt; 和 &lt;/head&gt;</code> 這兩個代碼之間。</p>
<p>而現在要在 NexT 主題做到這件事非常簡單，使用 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL2FkdmFuY2VkLXNldHRpbmdzL2N1c3RvbS1maWxlcy5odG1s">Custom Files<i class="fa fa-external-link-alt"></i></span> 功能就能在不破壞主題程式碼的情況下完成：</p>
<ol>
<li>於 Blog 專案根目錄中的 <code>source/_data</code> 建立 <code>head.njk</code> 檔案，並將剛剛複製的 HTML 程式碼貼入；若先前就已建立  <code>head.njk</code> 檔案則是將 HTML 程式碼貼到檔案最末端即可：</li>
</ol>
<figure class="highlight plaintext"><figcaption><span>/source/_data/head.njk</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;# Google AdSense #&#125;</span><br><span class="line">&lt;script async src=&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-OOOOOOOOOOOOOOOO&quot;</span><br><span class="line">     crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>將 NexT 主題設定中 head 的註解移除：</li>
</ol>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">head:</span> <span class="string">source/_data/head.njk</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>重新部署 Blog 網站即完成設定。</p>
</li>
<li><p>若想要自行檢查有沒有插入成功，只要進 Blog 網站，按 F12 看網頁原始碼的 <code>&lt;head&gt; 和 &lt;/head&gt;</code> 間有沒有該程式碼即可。</p>
</li>
<li><p>再來真的只能乖乖等 Google 審查了…</p>
</li>
</ol>
<h2 id="等待審查"><a href="#等待審查" class="headerlink" title="等待審查"></a>等待審查</h2><p>我在等待約兩週後收到審查結果的 Email：</p>
<p>通過審查 Email<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-06-Hexo-Theme-NexT-Google-Adsense/adApproveEmail.png?raw=true"></p>
<p>(照前面步驟操作基本上都要成功，若是沒成功可能就要寫信跟 Google 吵架了…)</p>
<h2 id="消除警告"><a href="#消除警告" class="headerlink" title="消除警告"></a>消除警告</h2><p>通過審查後，前往 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9hZHNlbnNlLw==">Google AdSense 首頁<i class="fa fa-external-link-alt"></i></span> 會看到 收益表 跟 兩則警告：</p>
<p>Google AdSense 首頁<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-06-Hexo-Theme-NexT-Google-Adsense/adsenseApprove.png?raw=true"></p>
<p>兩則警告<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-06-Hexo-Theme-NexT-Google-Adsense/adsenseWarn.png?raw=true"></p>
<ul>
<li><p>一個是要我們在 Blog 網站中加入 <code>ads.txt</code> 檔案。</p>
</li>
<li><p>一個是要我們公開自己的賣家資訊。</p>
</li>
</ul>
<h3 id="加入-ads-txt"><a href="#加入-ads-txt" class="headerlink" title="加入 ads.txt"></a>加入 ads.txt</h3><p>點擊 <code>ads.txt</code> 警告的 <code>立即修正</code>，會看到以下畫面：</p>
<p>點擊 下載 來獲取 ads.txt 檔案<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-06-Hexo-Theme-NexT-Google-Adsense/adsTxtDownload.png?raw=true"></p>
<p>將 ads.txt 檔案置於 Blog 專案根目錄的 source 資料夾中，再重新部署 Blog 網站即完成設定。</p>
<p>我們可以在 Blog網址&#x2F;ads.txt 網頁中看到其內容。</p>
<p>設定完後該警告不會馬上消失，只能等待 Google 檢查。</p>
<p>我自己是調整後的隔天警告就消失。</p>
<h3 id="公開賣家資訊-Google-sellers-json"><a href="#公開賣家資訊-Google-sellers-json" class="headerlink" title="公開賣家資訊 (Google sellers.json)"></a>公開賣家資訊 (Google sellers.json)</h3><p>點擊 <code>公開自己的賣家資訊</code> 警告的 <code>操作</code>，會看到以下畫面：</p>
<p>設成 資訊公開 並填入 商家網域 即完成設定<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-06-Hexo-Theme-NexT-Google-Adsense/sellerJsonOpen.png?raw=true"></p>
<p>設定完後重新整理 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9hZHNlbnNlLw==">Google AdSense 首頁<i class="fa fa-external-link-alt"></i></span> 就會看到該警告消失。</p>
<h2 id="等廣告出現"><a href="#等廣告出現" class="headerlink" title="等廣告出現"></a>等廣告出現</h2><p>剛通過審查也不會馬上有廣告出現，一樣只能等…</p>
<p>通過審查 Email 內容<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-06-Hexo-Theme-NexT-Google-Adsense/wait4ads.png?raw=true"></p>
<p>我自己是通過後的隔天才出現廣告。</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>連廣告都開通了，至此 Blog 的基礎建置算是大功告成，接下來能做的事情就是多寫文章來充實 Blog 內容，或是到處參考別人 Blog 有哪些酷功能來跟進 XD，祝大家玩得開心 ~</p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>Google Adsense</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Blog 08：Disqus 網址遷移</title>
    <url>/Hexo/Blog/6ceec86a/</url>
    <content><![CDATA[<p>先前一直對網址進行調整，結果之前的 Disqus 留言都不見了，因為都綁定在舊網址上，現在確定網址後就能對留言進行搬家了。</p>
<p>(如果你還沒給 Blog 加上留言板，請參考 <a href="/Hexo/Blog/bf635840/" title="Hexo Blog 04：NexT 主題加入留言與聊天室機制">NexT 主題加入留言與聊天室機制</a>)</p>
<span id="more"></span>



<h2 id="前往-Disqus-官網"><a href="#前往-Disqus-官網" class="headerlink" title="前往 Disqus 官網"></a>前往 Disqus 官網</h2><p><span class="exturl" data-url="aHR0cHM6Ly9kaXNxdXMuY29tLw==">Disqus 官網<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Log-In"><a href="#Log-In" class="headerlink" title="Log In"></a>Log In</h2><p><code>Log In</code> 登入 Disqus 帳號。</p>
<p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-08-Disqus-URL-migration/login.png?raw=true"></p>
<h2 id="Admin"><a href="#Admin" class="headerlink" title="Admin"></a>Admin</h2><p>點擊進入 <code>Admin</code> 功能。</p>
<p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-08-Disqus-URL-migration/admin.png?raw=true"></p>
<h2 id="Moderation-TOOLS-Migration-Tools"><a href="#Moderation-TOOLS-Migration-Tools" class="headerlink" title="Moderation &gt; TOOLS&#x2F;Migration Tools"></a>Moderation &gt; TOOLS&#x2F;Migration Tools</h2><p>點擊 上方 Tab 的 Moderation，畫面更新後點擊左方 side bar 的 Migration Tools。</p>
<p>Moderation &gt; TOOLS&#x2F;Migration Tools<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-08-Disqus-URL-migration/moderation.png?raw=true"></p>
<h2 id="Please-choose-a-site"><a href="#Please-choose-a-site" class="headerlink" title="Please choose a site"></a>Please choose a site</h2><p>上一步中可能會出現 Please choose a site 的 popup，選擇你要管理留言的網站即可。</p>
<p>Please choose a site<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-08-Disqus-URL-migration/chooseSite.png?raw=true"></p>
<h2 id="Upload-a-URL-map-Start-URL-mapper"><a href="#Upload-a-URL-map-Start-URL-mapper" class="headerlink" title="Upload a URL map&#x2F;Start URL mapper"></a>Upload a URL map&#x2F;Start URL mapper</h2><p>有三種網址搬遷方式，因為我要搬遷的網址不多，所以使用 URL map。</p>
<p>Upload a URL map&#x2F;Start URL mapper<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-08-Disqus-URL-migration/startURLmapper.png?raw=true"></p>
<h2 id="上傳-CSV-檔"><a href="#上傳-CSV-檔" class="headerlink" title="上傳 CSV 檔"></a>上傳 CSV 檔</h2><p>這裡要上傳對應新舊網址的 Map，Disqus 要求使用 CSV 檔。</p>
<ol>
<li><p>建立副檔名為 csv 的檔案，如：url.csv</p>
</li>
<li><p>編輯檔案內容，格式為一行一組新舊網址配對，舊網址擺前面，中間用一逗號與一空白隔開：</p>
</li>
</ol>
<figure class="highlight plaintext"><figcaption><span>url.csv</span></figcaption><table><tr><td class="code"><pre><span class="line">舊網址, 新網址</span><br><span class="line">http://example.com/old-path/old/posta.html, http://example.com/new-path/new/posta.html</span><br><span class="line">http://example.com/old-path/old/postb.html, http://example.com/new-path/new/postb.html</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>創建好對應的 map 後，點擊 <code>選擇檔案</code>，選擇剛剛建立的 csv 檔上傳，確認後點擊 Next Step</li>
</ol>
<p>上傳 CSV 檔<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-08-Disqus-URL-migration/nextStep.png?raw=true"></p>
<h2 id="Submit-Migration"><a href="#Submit-Migration" class="headerlink" title="Submit Migration"></a>Submit Migration</h2><p>Disqus 會列出所有要遷移的網址組合，確認後點擊 <code>Submit Migration</code>。</p>
<p>Submit Migration<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-08-Disqus-URL-migration/submit.png?raw=true"></p>
<h2 id="Migration-confirmed"><a href="#Migration-confirmed" class="headerlink" title="Migration confirmed"></a>Migration confirmed</h2><p>網址遷移完成，確認畫面說可能要等 24 小時，不過我完成後馬上去 Blog 看，就看到留言出現了，可能跟搬遷網址數量有關。</p>
<p>Migration confirmed<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-08-Disqus-URL-migration/confirm.png?raw=true"></p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9wcmluc3NzLmdpdGh1Yi5pby9kaXNxdXMtbWlncmF0aW9uLXRvb2xzLXVybC1tYXBwZXIv">使用 URL Mapper 迁移整理 Disqus 评论<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Disqus</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Debug 01：Hexo 文章 title 含特殊或功能字元引發錯誤</title>
    <url>/Hexo/Debug/9eeddd48/</url>
    <content><![CDATA[<p>想要在文章標題開頭用些分類性標記，第一時間想到的是用 <code>[]</code> 包裹關鍵字，沒想到陸續發生了以下兩種錯誤，還好都還算是能繞開，不影響其他使用體驗。</p>
<span id="more"></span>



<h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>Hexo: 6.3.0</p>
<p>hexo-cli: 4.3.0</p>
<p>NexT: 8.13.2</p>
<h2 id="情境一"><a href="#情境一" class="headerlink" title="情境一"></a>情境一</h2><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ol>
<li><p>修改文章 title，使其包含 <code>[</code> 與 <code>]</code> 字元</p>
</li>
<li><p>使用本地預覽指令：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
</li>
<li><p>無法正常顯示頁面</p>
</li>
</ol>
<h3 id="log"><a href="#log" class="headerlink" title="log"></a>log</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">ERROR Process failed: _posts/[Hexo]-常用-Hexo-指令.md</span><br><span class="line">YAMLException: bad indentation of a mapping entry (1:15)</span><br><span class="line"></span><br><span class="line"> 1 | title: [Hexo] 常用 Hexo 指令</span><br><span class="line">-------------------^</span><br><span class="line"> 2 | <span class="built_in">date</span>: 2022-11-29 10:26:27</span><br><span class="line"> 3 | tags:</span><br><span class="line">    at generateError (D:\blog\node_modules\js-yaml\lib\loader.js:183:10)</span><br><span class="line">    at throwError (D:\blog\node_modules\js-yaml\lib\loader.js:187:9)</span><br><span class="line">    at readBlockMapping (D:\blog\node_modules\js-yaml\lib\loader.js:1182:7)</span><br><span class="line">    at composeNode (D:\blog\node_modules\js-yaml\lib\loader.js:1441:12)</span><br><span class="line">    at readDocument (D:\blog\node_modules\js-yaml\lib\loader.js:1625:3)</span><br><span class="line">    at loadDocuments (D:\blog\node_modules\js-yaml\lib\loader.js:1688:5)</span><br><span class="line">    at Object.load (D:\blog\node_modules\js-yaml\lib\loader.js:1714:19)</span><br><span class="line">    at parseYAML (D:\blog\node_modules\hexo-front-matter\lib\front_matter.js:69:23)</span><br><span class="line">    at parse (D:\blog\node_modules\hexo-front-matter\lib\front_matter.js:50:12)</span><br><span class="line">    at D:\blog\node_modules\hexo\lib\plugins\processor\post.js:93:18</span><br><span class="line">    at tryCatcher (D:\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (D:\blog\node_modules\bluebird\js\release\promise.js:544:35)</span><br><span class="line">    at Promise._settlePromise (D:\blog\node_modules\bluebird\js\release\promise.js:604:18)</span><br><span class="line">    at Promise._settlePromise0 (D:\blog\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">    at Promise._settlePromises (D:\blog\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">    at Promise._fulfill (D:\blog\node_modules\bluebird\js\release\promise.js:673:18)</span><br><span class="line">    at PromiseArray._resolve (D:\blog\node_modules\bluebird\js\release\promise_array.js:127:19)</span><br><span class="line">    at PromiseArray._promiseFulfilled (D:\blog\node_modules\bluebird\js\release\promise_array.js:145:14)</span><br><span class="line">    at PromiseArray._iterate (D:\blog\node_modules\bluebird\js\release\promise_array.js:115:31)</span><br><span class="line">    at PromiseArray.init [as _init] (D:\blog\node_modules\bluebird\js\release\promise_array.js:79:10)</span><br><span class="line">    at Promise._settlePromise (D:\blog\node_modules\bluebird\js\release\promise.js:601:21)</span><br><span class="line">    at Promise._settlePromise0 (D:\blog\node_modules\bluebird\js\release\promise.js:649:10)</span><br></pre></td></tr></table></figure>

<h3 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h3><p>將 md. 檔案最上方 front_matter 中 title 的內容以引號包裹可避免發生此錯誤：</p>
<figure class="highlight yaml"><figcaption><span>front_matter</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#x27;[Hexo] title 包含特殊字元引發錯誤&#x27;</span></span><br></pre></td></tr></table></figure>



<h2 id="情境二"><a href="#情境二" class="headerlink" title="情境二"></a>情境二</h2><h3 id="流程-1"><a href="#流程-1" class="headerlink" title="流程"></a>流程</h3><ol>
<li><p>使用建立新文章指令建立 title 包含 <code>[</code> 與 <code>]</code> 字元的文章：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&#x27;[Hexo] title 包含特殊字元引發錯誤&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>文章建立失敗</p>
</li>
</ol>
<h3 id="log-1"><a href="#log-1" class="headerlink" title="log"></a>log</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">YAMLException: bad indentation of a mapping entry (1:15)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> 1 | title: [Hexo] title 包含特殊字元引發錯誤</span></span><br><span class="line"><span class="string">-------------------^</span></span><br><span class="line"><span class="string"> 2 | date: 2022-11-29 04:11:40</span></span><br><span class="line"><span class="string"> 3 | tags:</span></span><br><span class="line"><span class="string">    at generateError (D:\blog\node_modules\js-yaml\lib\loader.js:183:10)</span></span><br><span class="line"><span class="string">    at throwError (D:\blog\node_modules\js-yaml\lib\loader.js:187:9)</span></span><br><span class="line"><span class="string">    at readBlockMapping (D:\blog\node_modules\js-yaml\lib\loader.js:1182:7)</span></span><br><span class="line"><span class="string">    at composeNode (D:\blog\node_modules\js-yaml\lib\loader.js:1441:12)</span></span><br><span class="line"><span class="string">    at readDocument (D:\blog\node_modules\js-yaml\lib\loader.js:1625:3)</span></span><br><span class="line"><span class="string">    at loadDocuments (D:\blog\node_modules\js-yaml\lib\loader.js:1688:5)</span></span><br><span class="line"><span class="string">    at load (D:\blog\node_modules\js-yaml\lib\loader.js:1714:19)</span></span><br><span class="line"><span class="string">    at D:\blog\node_modules\hexo\lib\hexo\post.js:282:63</span></span><br><span class="line"><span class="string">    at tryCatcher (D:\blog\node_modules\bluebird\js\release\util.js:16:23)</span></span><br><span class="line"><span class="string">    at Promise._settlePromiseFromHandler (D:\blog\node_modules\bluebird\js\release\promise.js:547:31)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise (D:\blog\node_modules\bluebird\js\release\promise.js:604:18)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise0 (D:\blog\node_modules\bluebird\js\release\promise.js:649:10)</span></span><br><span class="line"><span class="string">    at Promise._settlePromises (D:\blog\node_modules\bluebird\js\release\promise.js:729:18)</span></span><br><span class="line"><span class="string">    at Promise._fulfill (D:\blog\node_modules\bluebird\js\release\promise.js:673:18)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise (D:\blog\node_modules\bluebird\js\release\promise.js:617:21)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise0 (D:\blog\node_modules\bluebird\js\release\promise.js:649:10)</span></span><br><span class="line"><span class="string">    at Promise._settlePromises (D:\blog\node_modules\bluebird\js\release\promise.js:729:18)</span></span><br><span class="line"><span class="string">    at Promise._fulfill (D:\blog\node_modules\bluebird\js\release\promise.js:673:18)</span></span><br><span class="line"><span class="string">    at D:\blog\node_modules\bluebird\js\release\nodeback.js:42:21</span></span><br><span class="line"><span class="string">    at D:\blog\node_modules\nunjucks\src\environment.js:41:5</span></span><br><span class="line"><span class="string">    at RawTask.call (D:\blog\node_modules\asap\asap.js:40:19)</span></span><br><span class="line"><span class="string">    at flush (D:\blog\node_modules\asap\raw.js:50:29)</span></span><br></pre></td></tr></table></figure>

<h3 id="解決方法-1"><a href="#解決方法-1" class="headerlink" title="解決方法"></a>解決方法</h3><p>我目前只能手動建立新 .md 檔案，並貼上模板，md. 檔案中 title 的內容依然需要以引號包裹才可避免發生其他錯誤。</p>
<h2 id="情境三"><a href="#情境三" class="headerlink" title="情境三"></a>情境三</h2><p>(2022&#x2F;12&#x2F;06 更新)</p>
<h3 id="流程-2"><a href="#流程-2" class="headerlink" title="流程"></a>流程</h3><ol>
<li><p>文章 title 包含半形冒號 <code>:</code> 字元</p>
</li>
<li><p>使用部署指令：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
</li>
<li><p>log 顯示錯誤；網頁部署成功，但出錯的文章未顯示</p>
</li>
</ol>
<h3 id="log-2"><a href="#log-2" class="headerlink" title="log"></a>log</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">PS D:\blog&gt; hexo deploy</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  ==================================</span><br><span class="line">  ███╗   ██╗███████╗██╗  ██╗████████╗</span><br><span class="line">  ████╗  ██║██╔════╝╚██╗██╔╝╚══██╔══╝</span><br><span class="line">  ██╔██╗ ██║█████╗   ╚███╔╝    ██║</span><br><span class="line">  ██║╚██╗██║██╔══╝   ██╔██╗    ██║</span><br><span class="line">  ██║ ╚████║███████╗██╔╝ ██╗   ██║</span><br><span class="line">  ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝   ╚═╝</span><br><span class="line">========================================</span><br><span class="line">NexT version 8.13.2</span><br><span class="line">Documentation: https://theme-next.js.org</span><br><span class="line">========================================</span><br><span class="line">INFO  Start processing</span><br><span class="line">ERROR Process failed: _posts/Hexo-Debug-03-sitemap-xml-xmlParseEntityRef-error.md</span><br><span class="line">YAMLException: bad indentation of a mapping entry (1:57)</span><br><span class="line"></span><br><span class="line"> 1 |  ... map.xml error xmlParseEntityRef: no name</span><br><span class="line">-----------------------------------------^</span><br><span class="line"> 2 |  ...</span><br><span class="line"> 3 |  ...</span><br><span class="line">    at generateError (D:\blog\node_modules\js-yaml\lib\loader.js:183:10)</span><br><span class="line">    at throwError (D:\blog\node_modules\js-yaml\lib\loader.js:187:9)</span><br><span class="line">    at readBlockMapping (D:\blog\node_modules\js-yaml\lib\loader.js:1182:7)</span><br><span class="line">    at composeNode (D:\blog\node_modules\js-yaml\lib\loader.js:1441:12)</span><br><span class="line">    at readDocument (D:\blog\node_modules\js-yaml\lib\loader.js:1625:3)</span><br><span class="line">    at loadDocuments (D:\blog\node_modules\js-yaml\lib\loader.js:1688:5)</span><br><span class="line">    at Object.load (D:\blog\node_modules\js-yaml\lib\loader.js:1714:19)</span><br><span class="line">    at parseYAML (D:\blog\node_modules\hexo-front-matter\lib\front_matter.js:69:23)</span><br><span class="line">    at parse (D:\blog\node_modules\hexo-front-matter\lib\front_matter.js:50:12)</span><br><span class="line">    at D:\blog\node_modules\hexo\lib\plugins\processor\post.js:93:18</span><br><span class="line">    at tryCatcher (D:\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (D:\blog\node_modules\bluebird\js\release\promise.js:544:35)</span><br><span class="line">    at Promise._settlePromise (D:\blog\node_modules\bluebird\js\release\promise.js:604:18)</span><br><span class="line">    at Promise._settlePromise0 (D:\blog\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">    at Promise._settlePromises (D:\blog\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">    at Promise._fulfill (D:\blog\node_modules\bluebird\js\release\promise.js:673:18)</span><br><span class="line">    at PromiseArray._resolve (D:\blog\node_modules\bluebird\js\release\promise_array.js:127:19)</span><br><span class="line">    at PromiseArray._promiseFulfilled (D:\blog\node_modules\bluebird\js\release\promise_array.js:145:14)</span><br><span class="line">    at PromiseArray._iterate (D:\blog\node_modules\bluebird\js\release\promise_array.js:115:31)</span><br><span class="line">    at PromiseArray.init [as _init] (D:\blog\node_modules\bluebird\js\release\promise_array.js:79:10)</span><br><span class="line">    at Promise._settlePromise (D:\blog\node_modules\bluebird\js\release\promise.js:601:21)</span><br><span class="line">    at Promise._settlePromise0 (D:\blog\node_modules\bluebird\js\release\promise.js:649:10)</span><br></pre></td></tr></table></figure>

<h3 id="解決方法-2"><a href="#解決方法-2" class="headerlink" title="解決方法"></a>解決方法</h3><p>將 md. 檔案最上方 front_matter 中 title 的內容以引號包裹可避免發生此錯誤：</p>
<figure class="highlight yaml"><figcaption><span>front_matter</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#x27;Hexo Debug 03：sitemap.xml error xmlParseEntityRef: no name&#x27;</span></span><br></pre></td></tr></table></figure>



<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>推測是 Hexo 在解析文章 front_matter 時是視為 yaml，遇到語法相關字元會有其預設的規範。遇到類似問題時都先試試用引號包裹，程式應該會將引號包裹內容當成字串處理。</p>
<p>不過最後我是選擇不使用特殊字元了，畢竟也不是很美觀 XD。</p>
<p>2022&#x2F;12&#x2F;06 更新：</p>
<p>md. 檔案最上方 front_matter 中 title 的內容一律建議用引號包裹。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p>自己試的，看 log 猜的</p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Debug</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Blog 04：NexT 主題加入留言與聊天室機制</title>
    <url>/Hexo/Blog/bf635840/</url>
    <content><![CDATA[<p>前一篇系列文章：<a href="/Hexo/Blog/a4c4ed5f/" title="Hexo Blog 03：繼續探索 NexT">繼續探索 NexT</a> 在 NexT 主題啟用了一些 Blog 常見功能，讓文章的簡單量化資訊一目了然。這回來加上讓讀者有機會與我們互動的留言與聊天室機制。</p>
<span id="more"></span>



<h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>Hexo: 6.3.0</p>
<p>hexo-cli: 4.3.0</p>
<p>NexT: 8.14.0</p>
<h2 id="留言機制"><a href="#留言機制" class="headerlink" title="留言機制"></a>留言機制</h2><p>NexT 提供了 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoaXJkLXBhcnR5LXNlcnZpY2VzL2NvbW1lbnRz">數種留言方案<i class="fa fa-external-link-alt"></i></span>，每種方案都有其使用上優缺點，可以思考一下自己 Blog 的客群來選擇。也可以全部都啟用，給讀者自行選擇要用什麼方案。</p>
<p>我是直接使用列在最前面的 <span class="exturl" data-url="aHR0cHM6Ly9kaXNxdXMuY29tLw==">Disqus<i class="fa fa-external-link-alt"></i></span>，只需要簡單註冊一下，取得 <code>shortname</code> 後貼進主題設定檔中即可：</p>
<h3 id="進入-Disqus-官網"><a href="#進入-Disqus-官網" class="headerlink" title="進入 Disqus 官網"></a>進入 <span class="exturl" data-url="aHR0cHM6Ly9kaXNxdXMuY29tLw==">Disqus 官網<i class="fa fa-external-link-alt"></i></span></h3><h3 id="點擊-GET-STARTED"><a href="#點擊-GET-STARTED" class="headerlink" title="點擊 GET STARTED"></a>點擊 GET STARTED</h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/getStarted.png?raw=true"></p>
<h3 id="Signup-註冊"><a href="#Signup-註冊" class="headerlink" title="Signup 註冊"></a>Signup 註冊</h3><h3 id="What-would-you-like-to-do-with-Disqus"><a href="#What-would-you-like-to-do-with-Disqus" class="headerlink" title="What would you like to do with Disqus?"></a>What would you like to do with Disqus?</h3><p>點擊 I want to install Disqus on my site<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/installOnMySite.png?raw=true"></p>
<h3 id="Create-a-new-site"><a href="#Create-a-new-site" class="headerlink" title="Create a new site"></a>Create a new site</h3><p>給 Disqus Websete 命名與設定類別 (可以隨便設，因為可以刪除)，完成後點擊 Create Site<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/createNewSite.png?raw=true"></p>
<h3 id="Select-a-plan"><a href="#Select-a-plan" class="headerlink" title="Select a plan"></a>Select a plan</h3><p>頁面往下滑，找到 Basic 方案，點擊 Subscribe Now (這是免費方案!)<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/selectPlan.png?raw=true"></p>
<h3 id="What-platform-is-your-site-on"><a href="#What-platform-is-your-site-on" class="headerlink" title="What platform is your site on?"></a>What platform is your site on?</h3><p>頁面往下滑，找到此按鈕並點擊<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/platform.png?raw=true"></p>
<h3 id="Universal-Code-install-instructions"><a href="#Universal-Code-install-instructions" class="headerlink" title="Universal Code install instructions"></a>Universal Code install instructions</h3><p>忽略此頁面內容，往下滑，找到 Configure 並點擊<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/configure.png?raw=true"></p>
<h3 id="Configure-Disqus"><a href="#Configure-Disqus" class="headerlink" title="Configure Disqus"></a>Configure Disqus</h3><p>Website URL 填入 Blog 網址</p>
<p>點擊 Next<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/configSetting.png?raw=true"></p>
<h3 id="Comment-and-Moderation-Settings"><a href="#Comment-and-Moderation-Settings" class="headerlink" title="Comment and Moderation Settings"></a>Comment and Moderation Settings</h3><p>選擇想要的留言規範後點擊 Complete Setup 即完成設定<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/commentSetting.png?raw=true"></p>
<p>Disqus 設定完成<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/complete.png?raw=true"></p>
<h3 id="取得-Shortname"><a href="#取得-Shortname" class="headerlink" title="取得 Shortname"></a>取得 Shortname</h3><p>點擊上方 Settings tab 即可找到 Shortname，將其複製 (本範例中的 Shortname 已刪除，僅供參考用途)<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/Shortname.png?raw=true"></p>
<h3 id="將-Shortname-貼進主題設定檔中："><a href="#將-Shortname-貼進主題設定檔中：" class="headerlink" title="將 Shortname 貼進主題設定檔中："></a>將 Shortname 貼進主題設定檔中：</h3><figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="comment"># For more information: https://disqus.com</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="string">OOOOO</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="重新部署-Blog"><a href="#重新部署-Blog" class="headerlink" title="重新部署 Blog"></a>重新部署 Blog</h3><p>設定好之後重新部署 Blog，留言板就會自動出現在文章或特定頁面下方了，缺點大概是無法使用訪客匿名留言，必須使用 Disqus 帳號或社群平台帳號登入才能留言，如：Facdbook、Twitter 及 Google。</p>
<p>大功告成!<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/disqusSample.png?raw=true"></p>
<p>補充：後來找到一款可以免登入的留言板 <span class="exturl" data-url="aHR0cHM6Ly9kaXNjdXNzLmpzLm9yZy8=">Discuss<i class="fa fa-external-link-alt"></i></span>，我自己是沒套用，但我有用 <span class="exturl" data-url="aHR0cHM6Ly93d3cuaW1sZXRlLmNuLw==">Lete乐特<i class="fa fa-external-link-alt"></i></span> 這位大大的其他套件。</p>
<h2 id="聊天室機制"><a href="#聊天室機制" class="headerlink" title="聊天室機制"></a>聊天室機制</h2><p>NexT 目前提供了 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoaXJkLXBhcnR5LXNlcnZpY2VzL2NoYXQtc2VydmljZXM=">三種聊天室方案<i class="fa fa-external-link-alt"></i></span>，一次只能啟用一種，若是在設定中開啟了多個，NexT 只會啟用在設定檔中列在比較前面的。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy8=">NexT 官網<i class="fa fa-external-link-alt"></i></span> 使用的是 <span class="exturl" data-url="aHR0cHM6Ly9naXR0ZXIuaW0v">Gitter<i class="fa fa-external-link-alt"></i></span>，是多人聊天室，我覺得可以取代留言板，不過不管創建聊天室或是加入聊天都是使用 GitHub 帳號。</p>
<p>我目前是使用 <span class="exturl" data-url="aHR0cHM6Ly9jaGF0cmEuY29tLw==">Chatra<i class="fa fa-external-link-alt"></i></span>，性質是偏向商家 (作者) 對顧客 (讀者) 的聊天室，讀者不需要登入即可與作者取得聯繫。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jaGF0cmEuY29tLw==">Chatra<i class="fa fa-external-link-alt"></i></span> 的啟用方法也是註冊後取得 <code>id</code> 後貼進主題設定檔中即可：</p>
<h3 id="進入-Chatra-官網"><a href="#進入-Chatra-官網" class="headerlink" title="進入 Chatra 官網"></a>進入 <span class="exturl" data-url="aHR0cHM6Ly9jaGF0cmEuY29tLw==">Chatra 官網<i class="fa fa-external-link-alt"></i></span></h3><h3 id="點擊-GET-STARTED-1"><a href="#點擊-GET-STARTED-1" class="headerlink" title="點擊 GET STARTED"></a>點擊 GET STARTED</h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/getStarted2.png?raw=true"></p>
<h3 id="填入-email-註冊"><a href="#填入-email-註冊" class="headerlink" title="填入 email 註冊"></a>填入 email 註冊</h3><p>填入 email 後點擊 <code>Let&#39;s go!</code> 即完成註冊。</p>
<p>需要進入登記的 email 收驗證信來驗證身份。</p>
<h3 id="左方側邊欄進入-Settings-Chat-widget-找到-HTML-程式碼："><a href="#左方側邊欄進入-Settings-Chat-widget-找到-HTML-程式碼：" class="headerlink" title="左方側邊欄進入 Settings &gt; Chat widget 找到 HTML 程式碼："></a>左方側邊欄進入 <span class="exturl" data-url="aHR0cHM6Ly9hcHAuY2hhdHJhLmlvL3NldHRpbmdzL2ludGVncmF0aW9ucy93aWRnZXQ=">Settings &gt; Chat widget<i class="fa fa-external-link-alt"></i></span> 找到 HTML 程式碼：</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Chatra &#123;literal&#125; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    (<span class="keyword">function</span>(<span class="params">d, w, c</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        w.<span class="property">ChatraID</span> = <span class="string">&#x27;OOOOO&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> s = d.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        w[c] = w[c] || <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            (w[c].<span class="property">q</span> = w[c].<span class="property">q</span> || []).<span class="title function_">push</span>(<span class="variable language_">arguments</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">        s.<span class="property">async</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">        s.<span class="property">src</span> = <span class="string">&#x27;https://call.chatra.io/chatra.js&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (d.<span class="property">head</span>) d.<span class="property">head</span>.<span class="title function_">appendChild</span>(s);</span></span><br><span class="line"><span class="language-javascript">    &#125;)(<span class="variable language_">document</span>, <span class="variable language_">window</span>, <span class="string">&#x27;Chatra&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /Chatra &#123;/literal&#125; --&gt;</span></span><br></pre></td></tr></table></figure>

<p>找到 w.ChatraID，複製引號間的 ID。</p>
<h3 id="將複製的-ID-貼進主題設定檔中："><a href="#將複製的-ID-貼進主題設定檔中：" class="headerlink" title="將複製的 ID 貼進主題設定檔中："></a>將複製的 ID 貼進主題設定檔中：</h3><figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Chatra Support</span></span><br><span class="line"><span class="comment"># For more information: https://chatra.com</span></span><br><span class="line"><span class="comment"># Dashboard: https://app.chatra.io/settings/general</span></span><br><span class="line"><span class="attr">chatra:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">async:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">OOOOO</span> <span class="comment"># Visit Dashboard to get your ChatraID</span></span><br><span class="line">  <span class="comment">#embed: # Unfinished experimental feature for developers. See: https://chatra.com/help/api/#injectto</span></span><br></pre></td></tr></table></figure>

<h3 id="重新部署-Blog-1"><a href="#重新部署-Blog-1" class="headerlink" title="重新部署 Blog"></a>重新部署 Blog</h3><p>聊天室按鈕就會自動出現在 Blog 頁面下方了，可以在它網站裡的 <span class="exturl" data-url="aHR0cHM6Ly9hcHAuY2hhdHJhLmlvL3NldHRpbmdzL2ludGVncmF0aW9ucy93aWRnZXQ=">Settings &gt; Chat widget<i class="fa fa-external-link-alt"></i></span> 設定其顯示的位置。</p>
<p>聊天室按鈕 (我的在頁面右下方)<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/chatBTN.png?raw=true"></p>
<p>聊天室 (點擊聊天室按鈕開啟)<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Blog-04-Hexo-Theme-NexT-Comment-and-Chat/chatRoom.png?raw=true"></p>
<p>也因為它自己就有按鈕，我們不用開啟 NexT 提供的 <code>Chat</code> 按鈕：</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># A button to open designated chat widget in sidebar.</span></span><br><span class="line"><span class="comment"># Firstly, you need to enable and configure the chat service.</span></span><br><span class="line"><span class="attr">chat:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-comment</span> <span class="comment"># Icon name in Font Awesome, set false to disable icon.</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">Chat</span> <span class="comment"># Button text, change it as you wish.</span></span><br></pre></td></tr></table></figure>

<h3 id="接收訊息"><a href="#接收訊息" class="headerlink" title="接收訊息"></a>接收訊息</h3><p>如果有人透過 Blog 的 Chatra 聊天室傳訊息給你，你要怎麼知道?</p>
<ul>
<li><p>App：在行動裝置或電腦安裝 <span class="exturl" data-url="aHR0cHM6Ly9hcHAuY2hhdHJhLmlvL2FwcHM=">Chatra App<i class="fa fa-external-link-alt"></i></span>，登入帳號即可即時收到別人傳的訊息。</p>
</li>
<li><p>Web：在 <span class="exturl" data-url="aHR0cHM6Ly9jaGF0cmEuY29tLw==">Chatra 官網<i class="fa fa-external-link-alt"></i></span> 登入帳號就可以看到全部訊息。</p>
</li>
<li><p>Email：如果你沒有使用 App 或登入網站的習慣，Chatra 會定期把你沒讀的訊息用 Email 寄給你。</p>
</li>
</ul>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>加入留言與聊天機制後 Blog 幾近完全體，各位可以好好撰寫文章了!</p>
<p>下一篇系列文章：<a href="/Hexo/Blog/6528a7b6/" title="Hexo Blog 05：NexT 主題 SEO 相關設置">NexT 主題 SEO 相關設置</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>Disqus</tag>
        <tag>Chatra</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Debug 02：Markdown 文字連結語法渲染失敗</title>
    <url>/Hexo/Debug/ec97b114/</url>
    <content><![CDATA[<p>在檢查自己 Hexo Blog 網頁渲染情況時，發現一些 <strong>文字連結</strong> (超連結) 竟然直接顯示出 <span class="exturl" data-url="aHR0cHM6Ly9tYXJrZG93bi50dy8jbGluaw==">本來的 Markdown 語法<i class="fa fa-external-link-alt"></i></span>，非常不美觀，而且無法點擊網址進行跳轉。</p>
<div class="note "><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">This is [<span class="string">an example</span>](<span class="link">http://example.com/ &quot;Title&quot;</span>) inline link.</span><br><span class="line"></span><br><span class="line">[<span class="string">This link</span>](<span class="link">http://example.net/</span>) has no title attribute.</span><br></pre></td></tr></table></figure>

<p>(用程式框框包裹是因為無法每次發生，然後我還沒想要處理圖床XD)</p>
</div>

<span id="more"></span>



<h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>Hexo: 6.3.0</p>
<p>hexo-cli: 4.3.0</p>
<p>NexT: 8.13.2</p>
<h2 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h2><p>每個文字連結渲染結果都能是這樣有底線的可跳轉文字：</p>
<div class="note "><p>This is <span class="exturl" data-url="aHR0cDovL2V4YW1wbGUuY29tLw==" title="Title">an example<i class="fa fa-external-link-alt"></i></span> inline link.</p>
<p><span class="exturl" data-url="aHR0cDovL2V4YW1wbGUubmV0Lw==">This link<i class="fa fa-external-link-alt"></i></span> has no title attribute.</p>
</div>



<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><p>使用 Hexo 的 Link <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLXR3L2RvY3MvdGFnLXBsdWdpbnM=">標籤外掛（Tag Plugins）<i class="fa fa-external-link-alt"></i></span> 取代 Markdown 語法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure>

<p>以前面的例子舉例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is &#123;% link an example http://example.com/ &quot;Title&quot; %&#125; inline link.</span><br><span class="line">&#123;% link This link http://example.net/ %&#125; has no title attribute.</span><br></pre></td></tr></table></figure>

<div class="note "><p>This is <span class="exturl" data-url="aHR0cDovL2V4YW1wbGUuY29tLw==" title="Title">an example<i class="fa fa-external-link-alt"></i></span> inline link.<br><span class="exturl" data-url="aHR0cDovL2V4YW1wbGUubmV0Lw==">This link<i class="fa fa-external-link-alt"></i></span> has no title attribute.</p>
</div>

<p>就是換個語法達到一樣效果的 work around。</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>雖然換個語法就能解決，但我還是習慣用本來的 Markdown 語法，所以都是遇到網頁渲染失敗時才使用 Hexo 的標籤外掛處理錯誤的文字連結。</p>
<p>此外 Hexo 的標籤外掛還有很多其他厲害的功能可以使用，但僅限用於 Hexo，使用其他 Markdown 閱讀器時很可能不支援。</p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Debug</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Debug 04：Hexo 避免機密資訊上傳 GitHub</title>
    <url>/Hexo/Debug/ba57c00/</url>
    <content><![CDATA[<p>先前在 <a href="/Hexo/Blog/a4c4ed5f/" title="Hexo Blog 03：繼續探索 NexT">繼續探索 NexT</a> 我將存有 Firestore apiKey 的 <code>_config.next.yml</code> 檔案推到 GitHub 儲存庫中，結果沒過多久就收到陌生的警告 Email，提醒我有機密洩漏，霎那間令我知曉網路上的爬蟲有多兇猛，還好這次來的是正義的爬蟲 😰</p>
<p>既然知道可怕了，就趕快來解除危機吧！</p>
<span id="more"></span>



<p>收到的警告信 (正義的爬蟲叫做 GitGuardian)：<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Debug-04-Hexo-avoid-confidential-leak-on-GitHub/GitGuardian.png?raw=true"></p>
<h2 id="罪魁禍首"><a href="#罪魁禍首" class="headerlink" title="罪魁禍首"></a>罪魁禍首</h2><p>當初照 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLXR3L2RvY3MvZ2l0aHViLXBhZ2Vz">Hexo 文檔<i class="fa fa-external-link-alt"></i></span> 的方式部署 Blog 至 GitHub Pages，並沒有提醒要注意機密資訊，而 GitHub Pages 強迫儲存庫的能見度 (visibility) 設為 Public，導致只要有包含機密資訊就一定會洩漏。</p>
<h2 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h2><p>程式碼中的機密資訊依然可以使用 GitHub 保存，但又不要輕易外流。</p>
<h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><ul>
<li><p>在 <code>.gitignore</code> 中加入 <code>_config.next.yml</code>：<br>這樣雖然可以避免洩漏資訊，但需要額外管理檔案，有違懶人的宗旨，只好否決。</p>
</li>
<li><p>讓 GitHub Pages 變為 Private：<br>這樣會直接讓 Blog 無法部屬，但可以嘗試換一種方式實現。</p>
</li>
</ul>
<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><p>就是很單純的在 GitHub 多開一個 Private 的儲存庫專門拿來放 Blog 專案。</p>
<p>GitHub Pages 儲存庫就讓它專門放 Hexo 生成的靜態網頁檔案，用兩個儲存庫來各司其職。</p>
<p>這兩件工作照 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLXR3L2RvY3MvZ2l0aHViLXBhZ2Vz">Hexo 文檔<i class="fa fa-external-link-alt"></i></span> 的做法是分成兩個 Branch 來達成，main 用來存放 Blog 專案，gh-pages 用來存放靜態網頁檔案。</p>
<p>雖然使用了兩個儲存庫，但消耗的精力其實是相同的，因為部屬 Blog 網站時我們都是用 <code>hexo deploy</code> 指令呼叫套件完成工作，套件會自動幫我們把靜態網頁檔案推至 GitHub Pages 儲存庫，我們只需要創建儲存庫跟設定好部署資訊即可。</p>
<p>多開的 Private 儲存庫就會變成我們平常更新文章與 Hexo 設定的工作儲存庫。</p>
<p>我把實作方法更新至 <a href="/Hexo/Blog/dceed03/" title="Hexo Blog 01：使用 Hexo 迅速在 GitHub Pages 展開 Blog 旅程">使用 Hexo 迅速在 GitHub Pages 展開 Blog 旅程</a> 跟著步驟實作就好，讓大家少走彎路。</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>雖然說將敏感內容藏進 Private 的儲存庫，但很多敏感資訊其實在開啟 Blog 網站後按 F12 就能直接找到 😂</p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Debug</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Debug 03：sitemap.xml error xmlParseEntityRef: no name</title>
    <url>/Hexo/Debug/49ddc6c2/</url>
    <content><![CDATA[<p>在檢查自己 Hexo Blog 網頁的 sitemap.xml 時頁面顯示：</p>
<div class="note "><h3 id="This-page-contains-the-following-errors"><a href="#This-page-contains-the-following-errors" class="headerlink" title="This page contains the following errors:"></a>This page contains the following errors:</h3><p>error on line 5 at column 69: xmlParseEntityRef: no name</p>
<h3 id="Below-is-a-rendering-of-the-page-up-to-the-first-error"><a href="#Below-is-a-rendering-of-the-page-up-to-the-first-error" class="headerlink" title="Below is a rendering of the page up to the first error."></a>Below is a rendering of the page up to the first error.</h3></div>

<span id="more"></span>



<h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>Hexo: 6.3.0</p>
<p>hexo-cli: 4.3.0</p>
<p>NexT: 8.13.2</p>
<h2 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h2><p>能正常顯示 sitemap.xml 的 xml 格式內容。</p>
<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><p>經調查發現是我 .md 檔案的檔名含有 <code>&amp;</code> 符號，將 <code>&amp;</code> 改掉就恢復正常了。</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>關於 .md 檔名或 post title 遇到特殊符號常常會出錯，建議全部避免。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z3VzdE1lL2FydGljbGUvZGV0YWlscy8xMjA3MDQ3NTU=">【Bug】xmlParseEntityRef: no name<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Debug</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>xml</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Note 01：常用 Hexo 指令</title>
    <url>/Hexo/Note/e88d5645/</url>
    <content><![CDATA[<p>單純記錄我真的有用到的 Hexo 指令，並無其他延伸用法，真要查指令 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLXR3L2RvY3Mv">官方文件<i class="fa fa-external-link-alt"></i></span> 永遠是最好的選擇，不過還是整理了些使用上遇到的問題。</p>
<span id="more"></span>



<h2 id="初始化-blog-專案"><a href="#初始化-blog-專案" class="headerlink" title="初始化 blog 專案"></a>初始化 blog 專案</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<ol>
<li><p>hexo 建立專案 (一個新的網站)。</p>
</li>
<li><p>進入專案資料夾。</p>
</li>
<li><p>npm 安裝必要的依賴檔案 (從 git clone 時也要記得這步)。</p>
</li>
</ol>
<h2 id="建立新文章"><a href="#建立新文章" class="headerlink" title="建立新文章"></a>建立新文章</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>



<h2 id="本地預覽"><a href="#本地預覽" class="headerlink" title="本地預覽"></a>本地預覽</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>clean</strong>：清除快取檔案 (db.json) 和已產生的靜態檔案 (public)。</p>
</li>
<li><p><strong>server</strong>：啟動伺服器展示 Blog 渲染結果，<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">預設網址<i class="fa fa-external-link-alt"></i></span>：<code>http://localhost:4000/</code>。</p>
</li>
<li><p>啟動伺服器後 command line 會提示需要按 <strong>Ctrl + C</strong> 結束伺服器才能繼續使用 command line：</p>
 <figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
</li>
<li><p>啟動伺服器後，有更改任何 config 時都要結束伺服器重新 <strong>clean</strong> 後再開啟不然設定不會更新；若只有更改 Markdown 檔案則不用，檔案存檔後會自動更新畫面。</p>
</li>
</ul>
<p><strong>註：</strong>我在 <strong>Windows 11</strong> 使用 <strong>Windows PowerShell</strong> 無法使用 <strong>&amp;&amp;</strong> 指令，所以兩個指令需要分開下。</p>
<p><strong>註：</strong>我在 <strong>Windows 11</strong> 使用 <strong>Git Bash</strong> 無法用 <strong>Ctrl + C</strong> 來結束 Server，都要用工作管理員把 <strong>Node.js JavaScript Runtime</strong> 強制結束工作。</p>
<h2 id="快速部署"><a href="#快速部署" class="headerlink" title="快速部署"></a>快速部署</h2><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>

<p><strong>clean</strong>：清除快取檔案 (db.json) 和已產生的靜態檔案 (public)，建議部屬前都清理一次。</p>
<p><strong>deploy</strong>：部署 Blog 網站。</p>
<p><strong>註：</strong>我在 Windows 11 使用 <strong>Windows PowerShell</strong> 無法使用 <strong>&amp;&amp;</strong> 指令，所以兩個指令需要分開下。</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>幾乎只會用到這四種功能的最基礎指令 XD，甚至初始化專案指令也只用了最開始的那一次。</p>
<p>障礙最多的反而是在 Windows 11 的 command line tool 設定，目前我還沒去研究，就是小小不方便而已，倒是使用 Mac 的 Terminal 都沒遇到問題 (真的不是要臭，純粹描述遇到的狀況)。</p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Note 01：常忘 Java 語法</title>
    <url>/Java/Note/76cc3fdb/</url>
    <content><![CDATA[<p>為了麵包不得已開始刷題人生，但被 IDE 寵壞後，默寫時連迴圈都寫不出來了，趕快來複習一下。</p>
<span id="more"></span>

<h2 id="for-loop"><a href="#for-loop" class="headerlink" title="for loop"></a>for loop</h2><figure class="highlight java"><figcaption><span>基本</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><figcaption><span>迭代</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i : array) &#123;</span><br><span class="line">  System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmEtc3RyaW5nLmh0bWw=">Java String 类<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="返回字串長度"><a href="#返回字串長度" class="headerlink" title="返回字串長度"></a>返回字串長度</h3><p>int length();</p>
<h3 id="判斷字串值是否相同"><a href="#判斷字串值是否相同" class="headerlink" title="判斷字串值是否相同"></a>判斷字串值是否相同</h3><p>boolean equals(String value);</p>
<h3 id="返回指定索引的-char"><a href="#返回指定索引的-char" class="headerlink" title="返回指定索引的 char"></a>返回指定索引的 char</h3><p>char charAt(int index);</p>
<h3 id="返回字串轉換成的-char"><a href="#返回字串轉換成的-char" class="headerlink" title="返回字串轉換成的 char[]"></a>返回字串轉換成的 char[]</h3><p>char[] toCharArray();</p>
<h3 id="返回子字串（指定頭尾）"><a href="#返回子字串（指定頭尾）" class="headerlink" title="返回子字串（指定頭尾）"></a>返回子字串（指定頭尾）</h3><p>String substring(int beginIndex, int endIndex);<br>注意：包含頭，不包含尾。</p>
<h3 id="返回子字串（指定頭）"><a href="#返回子字串（指定頭）" class="headerlink" title="返回子字串（指定頭）"></a>返回子字串（指定頭）</h3><p>String substring(int beginIndex);</p>
<h3 id="判斷是否包含指定字符序列"><a href="#判斷是否包含指定字符序列" class="headerlink" title="判斷是否包含指定字符序列"></a>判斷是否包含指定字符序列</h3><p>boolean contains(CharSequence chars);</p>
<h2 id="Character"><a href="#Character" class="headerlink" title="Character"></a>Character</h2><h3 id="確定是否為字母或數字"><a href="#確定是否為字母或數字" class="headerlink" title="確定是否為字母或數字"></a>確定是否為字母或數字</h3><p>Character.isLetterOrDigit(char)</p>
<h2 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h2><h3 id="建立新-Array-方法"><a href="#建立新-Array-方法" class="headerlink" title="建立新 Array 方法"></a>建立新 Array 方法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] intArray = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>]; <span class="comment">// 長度為三，空的 Array</span></span><br><span class="line"><span class="type">int</span>[] intArray2 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;; <span class="comment">// 自定義內容的 Array，算是 intArray3 方法的語法糖</span></span><br><span class="line"><span class="type">int</span>[] intArray3 = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;; <span class="comment">// 與 intArray2 一樣，不過在前面沒有表達式的型別宣告時只能這樣用，不然會出 illegal start of expression 錯</span></span><br></pre></td></tr></table></figure>

<h2 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmEtYXJyYXlsaXN0Lmh0bWw=">Java ArrayList<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h2><p>Arrays 是處理各式 Array 的工具類。</p>
<h3 id="排序傳入的-array"><a href="#排序傳入的-array" class="headerlink" title="排序傳入的 array"></a>排序傳入的 array</h3><p>Arrays.sort(array);</p>
<h3 id="比較兩-arrays-值是否相同"><a href="#比較兩-arrays-值是否相同" class="headerlink" title="比較兩 arrays 值是否相同"></a>比較兩 arrays 值是否相同</h3><p>Arrays.equals(array1, array2);</p>
<h3 id="生成裝有-values-的-List"><a href="#生成裝有-values-的-List" class="headerlink" title="生成裝有 values 的 List"></a>生成裝有 values 的 List</h3><p>Arrays.asList(value1, value2, …);<br>返回的 List 不適合拿來操作，通常是用來快速建立指定元素的 ArrayList 或 HashSet 之類的類別。</p>
<h2 id="Collections"><a href="#Collections" class="headerlink" title="Collections"></a>Collections</h2><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>Collections.sort(list);<br>Arrays 的 sort 不能排序 ArrayList，所以要用這個。</p>
<p>Collections.reverseOrder()<br>在建構 PriorityQueue 之類的 class 時可以用此指定反向順序。</p>
<h2 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmEtaGFzaG1hcC5odG1s">Java HashMap<i class="fa fa-external-link-alt"></i></span></p>
<p>需要注意基本類別要換成封裝類別。</p>
<h3 id="獲取指定-key-對應的-value"><a href="#獲取指定-key-對應的-value" class="headerlink" title="獲取指定 key 對應的 value"></a>獲取指定 key 對應的 value</h3><p>hashmap.get(key);</p>
<h3 id="獲取指定-key-對應的-value，若找不到-key-就返回-default"><a href="#獲取指定-key-對應的-value，若找不到-key-就返回-default" class="headerlink" title="獲取指定 key 對應的 value，若找不到 key 就返回 default"></a>獲取指定 key 對應的 value，若找不到 key 就返回 default</h3><p>hashmap.getOrDefault(key, default);</p>
<h3 id="添加鍵值對"><a href="#添加鍵值對" class="headerlink" title="添加鍵值對"></a>添加鍵值對</h3><p>hashmap.put(key, value);</p>
<h3 id="檢查是否存在指定-key-對應的映射關係"><a href="#檢查是否存在指定-key-對應的映射關係" class="headerlink" title="檢查是否存在指定 key 對應的映射關係"></a>檢查是否存在指定 key 對應的映射關係</h3><p>hashmap.containsKey(key);</p>
<h3 id="檢查是否存在指定-value-對應的映射關係"><a href="#檢查是否存在指定-value-對應的映射關係" class="headerlink" title="檢查是否存在指定 value 對應的映射關係"></a>檢查是否存在指定 value 對應的映射關係</h3><p>hashmap.containsValue(value);</p>
<h3 id="刪除-key-對應的鍵值對"><a href="#刪除-key-對應的鍵值對" class="headerlink" title="刪除 key 對應的鍵值對"></a>刪除 key 對應的鍵值對</h3><p>hashmap.remove(key);</p>
<h3 id="返回-hashmap-中所有-key-組成的-set"><a href="#返回-hashmap-中所有-key-組成的-set" class="headerlink" title="返回 hashmap 中所有 key 組成的 set"></a>返回 hashmap 中所有 key 組成的 set</h3><p>hashmap.keySet();</p>
<h3 id="返回-hashmap-中所有-value-組成的-set"><a href="#返回-hashmap-中所有-value-組成的-set" class="headerlink" title="返回 hashmap 中所有 value 組成的 set"></a>返回 hashmap 中所有 value 組成的 set</h3><p>hashmap.values();</p>
<h3 id="返回-hashmap-中所有-映射關係-的-set"><a href="#返回-hashmap-中所有-映射關係-的-set" class="headerlink" title="返回 hashmap 中所有 映射關係 的 set"></a>返回 hashmap 中所有 映射關係 的 set</h3><p>hashmap.entrySet();<br>換容器時會使用到，每個鍵值對的類型為 <code>Map.Entry</code><br>Map.Entry 取得鍵：getKey()<br>Map.Entry 取得值：getValue()</p>
<h2 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmEtaGFzaHNldC5odG1s">Java HashSet<i class="fa fa-external-link-alt"></i></span></p>
<p>需要注意基本類別要換成封裝類別。</p>
<h3 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h3><p>hashset.add(value);</p>
<h3 id="判斷元素是否存在"><a href="#判斷元素是否存在" class="headerlink" title="判斷元素是否存在"></a>判斷元素是否存在</h3><p>hashset.contains(value);</p>
<h3 id="刪除元素"><a href="#刪除元素" class="headerlink" title="刪除元素"></a>刪除元素</h3><p>hashset.remove(value);</p>
<h3 id="獲取-hashset-大小"><a href="#獲取-hashset-大小" class="headerlink" title="獲取 hashset 大小"></a>獲取 hashset 大小</h3><p>hashset.size();</p>
<h3 id="交集技巧"><a href="#交集技巧" class="headerlink" title="交集技巧"></a>交集技巧</h3><p>hashset1.retainAll(hashset2);<br>返回扣掉兩 sets 未交集元素後的 hashset1。</p>
<h3 id="差集技巧"><a href="#差集技巧" class="headerlink" title="差集技巧"></a>差集技巧</h3><p>hashset1.removeAll(hashset2);<br>返回扣掉兩 sets 交集元素後的 hashset1。</p>
<h3 id="聯集技巧"><a href="#聯集技巧" class="headerlink" title="聯集技巧"></a>聯集技巧</h3><p>hashset1.addAll(hashset2);<br>返回加上兩 sets 未交集元素後的 hashset1。</p>
<h2 id="PriorityQueue"><a href="#PriorityQueue" class="headerlink" title="PriorityQueue"></a>PriorityQueue</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY2Fpbmlhb2pjLmNvbS9qYXZhL2phdmEtcHJpb3JpdHlxdWV1ZS5odG1s">Java PriorityQueue<i class="fa fa-external-link-alt"></i></span></p>
<p>先進先出，預設先出來的是最小的 (Ascending Order)</p>
<h3 id="建構方式"><a href="#建構方式" class="headerlink" title="建構方式"></a>建構方式</h3><p>可以帶入自定義的 Comparator，如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PriorityQueue&lt;Map.Entry&lt;Integer, Integer&gt;&gt; pq = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;(</span><br><span class="line">  (a, b) -&gt; a.getValue() - b.getValue()</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="新增元素"><a href="#新增元素" class="headerlink" title="新增元素"></a>新增元素</h3><p>add()</p>
<h3 id="訪問開頭元素"><a href="#訪問開頭元素" class="headerlink" title="訪問開頭元素"></a>訪問開頭元素</h3><p>peek()</p>
<h3 id="返回並刪除隊列開頭"><a href="#返回並刪除隊列開頭" class="headerlink" title="返回並刪除隊列開頭"></a>返回並刪除隊列開頭</h3><p>poll()</p>
<h2 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmE4LXN0cmVhbXMuaHRtbA==">Java 8 Stream<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h2><h3 id="比大小"><a href="#比大小" class="headerlink" title="比大小"></a>比大小</h3><p>Math.min(value1, value2);<br>Math.max(value1, value2);</p>
<h3 id="絕對值"><a href="#絕對值" class="headerlink" title="絕對值"></a>絕對值</h3><p>Math.abs(value);</p>
<h2 id="printf"><a href="#printf" class="headerlink" title="printf"></a>printf</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS93M2Nub3RlL2phdmEtcHJpbnRmLWZvcm1hdGUtZGVtby5odG1s">Java 格式化输出 printf 用法<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.printf();</span><br></pre></td></tr></table></figure>

<h2 id="基礎型別的預設值"><a href="#基礎型別的預設值" class="headerlink" title="基礎型別的預設值"></a>基礎型別的預設值</h2><h3 id="int"><a href="#int" class="headerlink" title="int"></a>int</h3><p>0</p>
<h2 id="三元運算子"><a href="#三元運算子" class="headerlink" title="三元運算子"></a>三元運算子</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">判斷式 ？ 若判斷為真執行區塊 ： 若判斷為假執行區塊</span><br></pre></td></tr></table></figure>

<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>隨著科技進步，記憶體容量大到唸不出單位了，我的腦容量卻是連有沒有 1 byte 都不清楚。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9wZGFpLnRlY2gv">Java 全栈知识体系<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9yaWNrYnNyLm1lZGl1bS5jb20vJUU5JTk2JTkyJUU4JTgxJThBLWFycmF5cy1hc2xpc3QtJUU3JTlBJTg0JUU1JTlEJTkxLTgzODlkM2YxZTU0NA==">閒聊「Arrays.asList()」的坑<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Java</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00001：Two Sum</title>
    <url>/LeetCode/Note/Java/Easy/41645b8/</url>
    <content><![CDATA[<p>輸入一個 intArray <code>nums</code> 與一個 int <code>target</code>，回傳一個 intArray，內容為 <code>nums</code> 中相加為 <code>target</code> 的兩個 int 的索引。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdHdvLXN1bS8=">Two Sum<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given an array of integers <code>nums</code> and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>
<p>You may assume that each input would have *<strong>exactly* one solution</strong>, and you may not use the <em>same</em> element twice.</p>
<p>You can return the answer in any order.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">diff</span> <span class="operator">=</span> target - nums[i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; nums.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[j] == diff) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;i, j&#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>雙層迴圈，時間複雜度：O(n*n)</p>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>看其他人滿多都在減少時間複雜度，我功力還不夠，所以等我看得夠多再來嘗試。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdHdvLXN1bS9zb2x1dGlvbnMvNi9teS1zaG9ydC1qYXZhLXNvbHV0aW9uLW8tbi1oYXNobWFwLw==">My (short) Java solution [O(n) + HashMap!]<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="重新嘗試："><a href="#重新嘗試：" class="headerlink" title="重新嘗試："></a>重新嘗試：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; diffMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">diff</span> <span class="operator">=</span> target - nums[i];</span><br><span class="line">            <span class="keyword">if</span> (diffMap.containsKey(nums[i])) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;diffMap.get(nums[i]), i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            diffMap.put(diff, i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>已經知道雙層迴圈太 low 了，所以趕緊換成單迴圈跟查字典方式，時間複雜度：O(n)。</p>
<p>重點物件或方法：</p>
<ul>
<li>HashMap</li>
</ul>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
        <tag>array</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00002：Add Two Numbers</title>
    <url>/LeetCode/Note/Java/Medium/a0a5adef/</url>
    <content><![CDATA[<p>輸入兩個非空的 linked list，分別表示兩個非負的整數，一個 node 包含一個數字，並且是反向排列 (第一個數字是個位數)，回傳兩數字相加的 linked list 結果。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYWRkLXR3by1udW1iZXJzLw==">Add Two Numbers<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>You are given two <strong>non-empty</strong> linked lists representing two non-negative integers. The digits are stored in <strong>reverse order</strong>, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.</p>
<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">l3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">l1tmp</span> <span class="operator">=</span> l1, l2tmp = l2, l3tmp = l3;</span><br><span class="line">        <span class="keyword">while</span> (l1tmp != <span class="literal">null</span> || l2tmp != <span class="literal">null</span> || l3tmp != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (l1tmp == <span class="literal">null</span>) &#123;</span><br><span class="line">                l1tmp = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (l2tmp == <span class="literal">null</span>) &#123;</span><br><span class="line">                l2tmp = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            l3tmp.val += ((l1tmp == <span class="literal">null</span> ? <span class="number">0</span> : l1tmp.val) + (l2tmp == <span class="literal">null</span> ? <span class="number">0</span> : l2tmp.val));</span><br><span class="line">            <span class="keyword">if</span> (l3tmp.val &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">                l3tmp.val -= <span class="number">10</span>;</span><br><span class="line">                l3tmp.next = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (l1tmp.next != <span class="literal">null</span> || l2tmp.next != <span class="literal">null</span>) &#123;</span><br><span class="line">                    l3tmp.next = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (l1tmp != <span class="literal">null</span>) &#123;</span><br><span class="line">                l1tmp = l1tmp.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (l2tmp != <span class="literal">null</span>) &#123;</span><br><span class="line">                l2tmp = l2tmp.next;</span><br><span class="line">            &#125;</span><br><span class="line">            l3tmp = l3tmp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l3;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li><p>需要了解 Linked List 基本原理，要一直用 <code>next</code> 相關聯。</p>
</li>
<li><p>輸出的 ListNode 可能因為進位而比輸入的 ListNode 長。</p>
</li>
<li><p>沒處理好會很容易發生 NullPointer Exception。</p>
</li>
</ul>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>別人的解法解題思路沒有差很多，但 code 比我簡潔很多，所以我可以再減少變數的使用。</p>
<p>[Java concise solution.]](<span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYWRkLXR3by1udW1iZXJzL3NvbHV0aW9ucy8xMDQ0L2phdmEtY29uY2lzZS1zb2x1dGlvbi8=">https://leetcode.com/problems/add-two-numbers/solutions/1044/java-concise-solution/<i class="fa fa-external-link-alt"></i></span>)</p>
<h3 id="重新整理-code："><a href="#重新整理-code：" class="headerlink" title="重新整理 code："></a>重新整理 code：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">l3head</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(); <span class="comment">// 只是個假頭，方便後面造 next 的邏輯</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">l3tmp</span> <span class="operator">=</span> l3head;</span><br><span class="line">        <span class="keyword">while</span> (l1 != <span class="literal">null</span> || l2 != <span class="literal">null</span> || l3tmp.next != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (l3tmp.next == <span class="literal">null</span>) &#123;</span><br><span class="line">                l3tmp.next = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>); <span class="comment">// 為了避免產出多餘的尾巴，在迴圈開頭才造出 next</span></span><br><span class="line">            &#125;</span><br><span class="line">            l3tmp = l3tmp.next;</span><br><span class="line">            l3tmp.val += ((l1 != <span class="literal">null</span> ? l1.val : <span class="number">0</span>) + (l2 != <span class="literal">null</span> ? l2.val : <span class="number">0</span>));</span><br><span class="line">            <span class="keyword">if</span> (l3tmp.val &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">                l3tmp.val -= <span class="number">10</span>;</span><br><span class="line">                l3tmp.next = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            l1 = l1 != <span class="literal">null</span> ? l1.next : <span class="literal">null</span>;</span><br><span class="line">            l2 = l2 != <span class="literal">null</span> ? l2.next : <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l3head.next; <span class="comment">// 因為前面有個假頭，所以是回傳 next</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>linked-list</tag>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Note 02：常用 Hexo 標籤外掛（Tag Plugins）</title>
    <url>/Hexo/Note/c4b9fa9c/</url>
    <content><![CDATA[<p>單純記錄我常用到的 Hexo 標籤外掛，並無其他延伸用法，真要查用法 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLXR3L2RvY3MvdGFnLXBsdWdpbnM=">官方文件<i class="fa fa-external-link-alt"></i></span> 永遠是最好的選擇。</p>
<span id="more"></span>

<h2 id="文章連結"><a href="#文章連結" class="headerlink" title="文章連結"></a>文章連結</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% post<span class="emphasis">_link source/_</span>posts內文章路徑不含副檔名 連結顯示文字 %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h2><p>這就不是 Hexo 原生用法了，不過主題通常都會擴增此功能，像 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RhZy1wbHVnaW5zL3RhYnM=">NexT<i class="fa fa-external-link-alt"></i></span>。</p>
<p>他在主題中的設定預設就是啟用了：</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">tabs:</span></span><br><span class="line">  <span class="comment"># Make the nav bar of tabs with long content stick to the top.</span></span><br><span class="line">  <span class="attr">sticky:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">transition:</span></span><br><span class="line">    <span class="attr">tabs:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">labels:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>語法：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs First unique name %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p>效果：</p>
<div class="tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1">First unique name 1</a></li><li class="tab"><a href="#first-unique-name-2">First unique name 2</a></li><li class="tab"><a href="#first-unique-name-3">First unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00003：Longest Substring Without Repeating Characters</title>
    <url>/LeetCode/Note/Java/Medium/3261ff39/</url>
    <content><![CDATA[<p>回傳字串中最長不重複字元子字串的長度。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1zdWJzdHJpbmctd2l0aG91dC1yZXBlYXRpbmctY2hhcmFjdGVycy8=">Longest Substring Without Repeating Characters<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>Given a string s, find the length of the longest substring without repeating characters.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">lengthOfLongestSubstring</span><span class="params">(String s)</span> &#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> s.length();</span><br><span class="line">      <span class="keyword">if</span> (n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>, r = l + <span class="number">1</span>, count = <span class="number">1</span>, res = <span class="number">1</span>; <span class="comment">// 左邊界、右邊界、長度計數、答案</span></span><br><span class="line">      <span class="keyword">while</span> (l &lt; r &amp;&amp; r &lt; n) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">subS</span> <span class="operator">=</span> s.substring(l, r); <span class="comment">// 截出無重複字元的子字串</span></span><br><span class="line">        <span class="keyword">if</span> (!subS.contains(<span class="string">&quot;&quot;</span> + s.charAt(r))) &#123; <span class="comment">// 下個字元不在子字串中就增加計數</span></span><br><span class="line">          count++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 子字串中包含下個字元，將左邊界移到該重複字元的下一位；將計數扣除重複字元在子字串中的索引</span></span><br><span class="line">          l += subS.indexOf(s.charAt(r)) + <span class="number">1</span>;</span><br><span class="line">          count -= subS.indexOf(s.charAt(r));</span><br><span class="line">        &#125;</span><br><span class="line">        res = count &gt; res ? count : res; <span class="comment">// 計數超過答案就更新答案</span></span><br><span class="line">        r++; <span class="comment">// 右邊界前進</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>寫到邏輯混亂，很多條件我自己都不清楚為什麼，尤其是移動邊界跟扣除計數的加一減一很不好想，我是重複嘗試才試出結果。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
        <tag>two-pointers</tag>
        <tag>string</tag>
        <tag>sliding-window</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Note 04：NexT 主題菜單 (menu) 進階設置</title>
    <url>/Hexo/Note/f48e7c63/</url>
    <content><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoZW1lLXNldHRpbmdzLyNDb25maWd1cmluZy1NZW51LUl0ZW1z">NexT 主題<i class="fa fa-external-link-alt"></i></span> 提供了 <code>多階層動態子菜單</code> (Dynamic sub-menu within hierarchy structure)，讓 Blog 可以更彈性的編排頁面。</p>
<span id="more"></span>



<h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p>預設情況 menu 是沒有階層的：</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Note-04-Hexo-Theme-NexT-Configuring-Menu-Items/myMenu.png?raw=true" alt="一般 menu"></p>
<p><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoZW1lLXNldHRpbmdzLw==">NexT 官網<i class="fa fa-external-link-alt"></i></span> 本身的 menu 提供了階層式 menu 的良好範例：</p>
<figure class="highlight yaml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-bell</span> <span class="comment"># 首頁路徑其實是 /index.html (以專案的 /public 作為根目錄)</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">Docs:</span> <span class="comment"># 第一階菜單選項</span></span><br><span class="line">    <span class="attr">default:</span> <span class="string">/docs/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-book</span> <span class="comment"># 第一階菜單的默認頁面 (/docs/index.html)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">Theme Settings:</span> <span class="comment"># 第二階菜單選項</span></span><br><span class="line">      <span class="attr">default:</span> <span class="string">/theme-settings/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-star</span> <span class="comment"># 第二階菜單的默認頁面 (/docs/theme-settings/index.html)</span></span><br><span class="line">      <span class="attr">Sidebar:</span> <span class="string">/sidebar.html</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-bars</span> <span class="comment"># 第三階菜單選項</span></span><br><span class="line">      <span class="attr">Footer:</span> <span class="string">/footer.html</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-sticky-note</span></span><br><span class="line">      <span class="attr">Posts:</span> <span class="string">/posts.html</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-paragraph</span></span><br><span class="line">      <span class="attr">Custom Pages:</span> <span class="string">/custom-pages.html</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-swatchbook</span></span><br><span class="line">      <span class="attr">Miscellaneous:</span> <span class="string">/miscellaneous.html</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-university</span></span><br><span class="line">      <span class="attr">SEO:</span> <span class="string">/seo.html</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-external-link-square-alt</span></span><br><span class="line">      <span class="attr">i18n:</span> <span class="string">/internationalization.html</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-language</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Hexo/Hexo-Note-04-Hexo-Theme-NexT-Configuring-Menu-Items/nextMenu.png?raw=true" alt="這裡以 Docs/Theme Settings 為範例"></p>
<p>左手邊的菜單為第一階菜單，上方 Header 同時有第二階 (上排) 與第三階菜單 (下排)。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><ul>
<li>超過一階的菜單都必須有 default 頁。</li>
<li>菜單元素的格式為 <code>Key: /link/ || icon</code>；<code>Key</code> 為元素名稱、<code>link</code> 為 Blog 網站相對 URL 目標 (以專案的 &#x2F;public 作為根目錄)，這也是為何第三階菜單元素的副檔名是 html 而不是 md、<code>icon</code> 就是圖標代號。</li>
<li>各目錄的默認路徑都是 index.html (經過 Hexo 轉換前是 index.md)。</li>
<li>不更改 NexT 主題原始碼的情況下，首頁 (home)、標籤 (tags)、分類 (categories)、歸檔 (archives) 頁面無法使用此功能 (無效果或導致錯誤)。</li>
</ul>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>雖然知道了創建子菜單的方法，但真正缺的是可以放在那的內容 🙂</p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00011：Container With Most Water</title>
    <url>/LeetCode/Note/Java/Medium/5882686f/</url>
    <content><![CDATA[<p>情境題：給定一系列長短不一的高，每個高坐落於間格為 1 的 x 軸上，求任意兩個高夾出的最大裝水容積。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29udGFpbmVyLXdpdGgtbW9zdC13YXRlci8=">Container With Most Water<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).</p>
<p>Find two lines that together with the x-axis form a container, such that the container contains the most water.</p>
<p>Return the maximum amount of water a container can store.</p>
<p>Notice that you may not slant the container.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><p>暴力解：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxArea</span><span class="params">(<span class="type">int</span>[] height)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; height.length - <span class="number">1</span>; i++) &#123; <span class="comment">// i means left border</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; height.length; j++) &#123; <span class="comment">// j means right border</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> height[i] &lt;= height[j] ? height[i] : height[j];</span><br><span class="line">            <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> j - i;</span><br><span class="line">            <span class="type">int</span> <span class="variable">volume</span> <span class="operator">=</span> x * y;</span><br><span class="line">            max = volume &gt; max ? volume : max;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>會超時。</p>
<p>Two Pointer：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxArea</span><span class="params">(<span class="type">int</span>[] height)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>, r = height.length - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">          <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> r - l;</span><br><span class="line">          <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> Math.min(height[l], height[r]);</span><br><span class="line">          <span class="type">int</span> <span class="variable">area</span> <span class="operator">=</span> x * y;</span><br><span class="line">          result = Math.max(area, result);</span><br><span class="line">          <span class="keyword">if</span> (height[l] &lt; height[r]) &#123; <span class="comment">// 這邊比較難說服自己腦袋，但主要概念還是留住最大的值</span></span><br><span class="line">            l++;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            r--;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lZXRjb2RlLWdoL2xlZXRjb2RlL2Jsb2IvbWFpbi9qYXZhLzAwMTEtY29udGFpbmVyLXdpdGgtbW9zdC13YXRlci5qYXZh">leetcode&#x2F;java&#x2F;0011-container-with-most-water.java<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>two-pointers</tag>
        <tag>array</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00013：Roman to Integer</title>
    <url>/LeetCode/Note/Java/Easy/cdea9f99/</url>
    <content><![CDATA[<p>將羅馬數字轉成阿拉伯數字。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcm9tYW4tdG8taW50ZWdlci8=">Roman to Integer<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.</p>
<p>Symbol       Value<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000<br>For example, 2 is written as II in Roman numeral, just two ones added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.</p>
<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:</p>
<p>I can be placed before V (5) and X (10) to make 4 and 9.<br>X can be placed before L (50) and C (100) to make 40 and 90.<br>C can be placed before D (500) and M (1000) to make 400 and 900.<br>Given a roman numeral, convert it to an integer.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">romanToInt</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        Map&lt;Character, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&#x27;I&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;V&#x27;</span>, <span class="number">5</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;X&#x27;</span>, <span class="number">10</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;L&#x27;</span>, <span class="number">50</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;C&#x27;</span>, <span class="number">100</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;D&#x27;</span>, <span class="number">500</span>);</span><br><span class="line">        map.put(<span class="string">&#x27;M&#x27;</span>, <span class="number">1000</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">pre</span> <span class="operator">=</span> <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c : s.toCharArray()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                ((c == <span class="string">&#x27;V&#x27;</span> || c == <span class="string">&#x27;X&#x27;</span>) &amp;&amp; pre == <span class="string">&#x27;I&#x27;</span>) || </span><br><span class="line">                ((c == <span class="string">&#x27;L&#x27;</span> || c == <span class="string">&#x27;C&#x27;</span>) &amp;&amp; pre == <span class="string">&#x27;X&#x27;</span>) || </span><br><span class="line">                ((c == <span class="string">&#x27;D&#x27;</span> || c == <span class="string">&#x27;M&#x27;</span>) &amp;&amp; pre == <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">                ) &#123;</span><br><span class="line">                res -= <span class="number">2</span> * map.get(pre);</span><br><span class="line">            &#125;</span><br><span class="line">            res += map.get(c);</span><br><span class="line">            pre = c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>string</tag>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00014：Longest Common Prefix</title>
    <url>/LeetCode/Note/Java/Easy/645a0db9/</url>
    <content><![CDATA[<p>回傳最長的共同字首。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1jb21tb24tcHJlZml4Lw==">Longest Common Prefix<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Write a function to find the longest common prefix string amongst an array of strings.</p>
<p>If there is no common prefix, return an empty string “”.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><h3 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h3><ol>
<li><p>計數器記錄幾個字都相同。</p>
</li>
<li><p>最後取出計算數量的的字做成字串回傳。</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">longestCommonPrefix</span><span class="params">(String[] strs)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">minLength</span> <span class="operator">=</span> strs[<span class="number">0</span>].length();</span><br><span class="line">        <span class="keyword">for</span> (String str : strs) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str.length() &lt; minLength) &#123;</span><br><span class="line">                minLength = str.length();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (minLength == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">same</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (same &amp;&amp; count &lt; minLength) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> strs[<span class="number">0</span>].charAt(count);</span><br><span class="line">            <span class="keyword">for</span> (String str : strs) &#123;</span><br><span class="line">                <span class="keyword">if</span> (str.charAt(count) != c) &#123;</span><br><span class="line">                    same = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (same) &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span>[] ca = <span class="keyword">new</span> <span class="title class_">char</span>[count];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            ca[i] = strs[<span class="number">0</span>].charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(ca);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>String 長度會不同，要避免發生 StringIndexOutOfBoundsException。</li>
</ul>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>我的方法算是從頭開始一個一個加，看到別人有用減法的：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">longestCommonPrefix</span><span class="params">(String[] strs)</span> &#123;        </span><br><span class="line">        <span class="keyword">if</span>(strs == <span class="literal">null</span> || strs.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">pre</span> <span class="operator">=</span> strs[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; strs.length)&#123;</span><br><span class="line">            <span class="keyword">while</span>(strs[i].indexOf(pre) != <span class="number">0</span>)</span><br><span class="line">                pre = pre.substring(<span class="number">0</span>, pre.length() - <span class="number">1</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pre;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="重點物件或方法"><a href="#重點物件或方法" class="headerlink" title="重點物件或方法"></a>重點物件或方法</h3><ul>
<li><p><code>String.indexOf()</code></p>
</li>
<li><p><code>String.substring()</code></p>
</li>
</ul>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9kZXNvbHZlLm1lZGl1bS5jb20vJUU1JUJFJTlFbGVldGNvZGUlRTUlQUQlQjglRTYlQkMlOTQlRTclQUUlOTclRTYlQjMlOTUtMi1kNDE4OWY1MzAxOGU=">從LeetCode學演算法 - 2<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>string</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00020：Valid Parentheses</title>
    <url>/LeetCode/Note/Java/Easy/a641d62a/</url>
    <content><![CDATA[<p>判斷是否合法使用括號。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdmFsaWQtcGFyZW50aGVzZXMv">Valid Parentheses<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given a string s containing just the characters ‘(‘, ‘)’, ‘{‘, ‘}’, ‘[‘ and ‘]’, determine if the input string is valid.</p>
<p>An input string is valid if:</p>
<p>Open brackets must be closed by the same type of brackets.<br>Open brackets must be closed in the correct order.<br>Every close bracket has a corresponding open bracket of the same type.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (s.length() % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ArrayList&lt;Character&gt; stack = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> i : s.toCharArray()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">lastIndex</span> <span class="operator">=</span> stack.size() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">switch</span> (i) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> (!stack.isEmpty() &amp;&amp; stack.get(lastIndex) == <span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">                        stack.remove(lastIndex);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> (!stack.isEmpty() &amp;&amp; stack.get(lastIndex) == <span class="string">&#x27;&#123;&#x27;</span>) &#123;</span><br><span class="line">                        stack.remove(lastIndex);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> (!stack.isEmpty() &amp;&amp; stack.get(lastIndex) == <span class="string">&#x27;[&#x27;</span>) &#123;</span><br><span class="line">                        stack.remove(lastIndex);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    stack.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stack.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>看了別人的解法才知道 Java 有 Stack 這個類能直接用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="comment">// Create hashmap to store the pairs...</span></span><br><span class="line">        HashMap&lt;Character, Character&gt; Hmap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Character, Character&gt;();</span><br><span class="line">        Hmap.put(<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;(&#x27;</span>);</span><br><span class="line">        Hmap.put(<span class="string">&#x27;&#125;&#x27;</span>,<span class="string">&#x27;&#123;&#x27;</span>);</span><br><span class="line">        Hmap.put(<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;[&#x27;</span>);</span><br><span class="line">        <span class="comment">// Create stack data structure...</span></span><br><span class="line">        Stack&lt;Character&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;Character&gt;();</span><br><span class="line">        <span class="comment">// Traverse each charater in input string...</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">idx</span> <span class="operator">=</span> <span class="number">0</span>; idx &lt; s.length(); idx++)&#123;</span><br><span class="line">            <span class="comment">// If open parentheses are present, push it to stack...</span></span><br><span class="line">            <span class="keyword">if</span> (s.charAt(idx) == <span class="string">&#x27;(&#x27;</span> || s.charAt(idx) == <span class="string">&#x27;&#123;&#x27;</span> || s.charAt(idx) == <span class="string">&#x27;[&#x27;</span>) &#123;</span><br><span class="line">                stack.push(s.charAt(idx));</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// If the character is closing parentheses, check that the same type opening parentheses is being pushed to the stack or not...</span></span><br><span class="line">            <span class="comment">// If not, we need to return false...</span></span><br><span class="line">            <span class="keyword">if</span> (stack.size() == <span class="number">0</span> || Hmap.get(s.charAt(idx)) != stack.pop()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// If the stack is empty, return true...</span></span><br><span class="line">        <span class="keyword">if</span> (stack.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdmFsaWQtcGFyZW50aGVzZXMvc29sdXRpb25zLzI0MTE2NzUvdmVyeS1lYXN5LTEwMC1mdWxseS1leHBsYWluZWQtYy1qYXZhLXB5dGhvbi1qcy1weXRob24zLw==">Very Easy || 100% || Fully Explained (C++, Java, Python, JS, Python3)<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>string</tag>
        <tag>stack</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00015：3Sum</title>
    <url>/LeetCode/Note/Java/Medium/4ed39218/</url>
    <content><![CDATA[<p>找出 int Array 中所有三個數相加為 0 的組合。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvM3N1bS8=">3Sum<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i !&#x3D; j, i !&#x3D; k, and j !&#x3D; k, and nums[i] + nums[j] + nums[k] &#x3D;&#x3D; 0.</p>
<p>Notice that the solution set must not contain duplicate triplets.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>將其中一個數當成 target 即可，剩下就跟 <a href="/LeetCode/Note/Java/Medium/90bfb5ca/" title="LeetCode Note Java 00167：Two Sum II - Input Array Is Sorted">00167：Two Sum II - Input Array Is Sorted</a> 的概念差不多。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">threeSum</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        Arrays.sort(nums); <span class="comment">// 將 nums 由小到大排序</span></span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; output = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;List&lt;Integer&gt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length - <span class="number">2</span>; i++) &#123; <span class="comment">// 因為一次要處理兩個值</span></span><br><span class="line">          <span class="keyword">if</span> (i == <span class="number">0</span> || i &gt; <span class="number">0</span> &amp;&amp; nums[i] != nums[i - <span class="number">1</span>]) &#123; <span class="comment">// 避免重複算到一樣的值</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">target</span> <span class="operator">=</span> nums[i];</span><br><span class="line">            <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> i + <span class="number">1</span>, r = nums.length - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">              <span class="keyword">if</span> (target + nums[l] + nums[r] == <span class="number">0</span>) &#123;</span><br><span class="line">                ArrayList&lt;Integer&gt; outputS = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                outputS.add(target);</span><br><span class="line">                outputS.add(nums[l]);</span><br><span class="line">                outputS.add(nums[r]);</span><br><span class="line">                output.add(outputS);</span><br><span class="line">                <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[l + <span class="number">1</span>] == nums[l]) &#123; <span class="comment">// 避免重複算到一樣的值</span></span><br><span class="line">                  l++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[r - <span class="number">1</span>] == nums[r]) &#123;</span><br><span class="line">                  r--;</span><br><span class="line">                &#125;</span><br><span class="line">                l++;</span><br><span class="line">                r--;</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target + nums[l] + nums[r] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                l++;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                r--;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>雖說知道大致解題方向，但寫起來還是一堆障礙，補了一堆條件才通過。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lZXRjb2RlLWdoL2xlZXRjb2RlL2Jsb2IvbWFpbi9qYXZhLzAwMTUtM3N1bS5qYXZh">leetcode&#x2F;java&#x2F;0015-3sum.java<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>two-pointers</tag>
        <tag>array</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00021：Merge Two Sorted Lists</title>
    <url>/LeetCode/Note/Java/Easy/4f09ad43/</url>
    <content><![CDATA[<p>將輸入的兩個有序 Linked List 合併後返回，返回的 Linked List 也需是有序。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWVyZ2UtdHdvLXNvcnRlZC1saXN0cy8=">Merge Two Sorted Lists<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>You are given the heads of two sorted linked lists list1 and list2.</p>
<p>Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.</p>
<p>Return the head of the merged linked list.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">mergeTwoLists</span><span class="params">(ListNode list1, ListNode list2)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">outputHead</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>();<span class="comment">// 一個假頭，Linked List 常使用這方式來避免尾端多餘的連結。</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">tmp</span> <span class="operator">=</span> outputHead;</span><br><span class="line">        <span class="keyword">while</span> (list1 != <span class="literal">null</span> || list2 != <span class="literal">null</span>) &#123;</span><br><span class="line">            tmp.next = <span class="keyword">new</span> <span class="title class_">ListNode</span>(); <span class="comment">// 在迴圈的開頭才創造新 ListNode，這樣才不會在尾端多造出一個。</span></span><br><span class="line">            tmp = tmp.next;</span><br><span class="line">            <span class="keyword">if</span> (list1 != <span class="literal">null</span> &amp;&amp; list2 != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (list1.val &lt;= list2.val) &#123;</span><br><span class="line">                    tmp.val = list1.val;</span><br><span class="line">                    list1 = list1.next;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    tmp.val = list2.val;</span><br><span class="line">                    list2 = list2.next;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (list1 != <span class="literal">null</span>) &#123;</span><br><span class="line">                tmp.val = list1.val;</span><br><span class="line">                list1 = list1.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (list2 != <span class="literal">null</span>) &#123;</span><br><span class="line">                tmp.val = list2.val;</span><br><span class="line">                list2 = list2.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> outputHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>依序比較 list1 與 list2 的大小來創建 outputHead。</p>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>其他人滿多使用遞迴方式解題，我有點難理解，暫時先無視。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>linked-list</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00009：Palindrome Number</title>
    <url>/LeetCode/Note/Java/Easy/a985eb04/</url>
    <content><![CDATA[<p>判斷輸入的數字是否回文。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFsaW5kcm9tZS1udW1iZXIv">Palindrome Number<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given an integer x, return true if x is a palindrome, and false otherwise.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">xs</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;&quot;</span> + x);</span><br><span class="line">        <span class="type">char</span>[] xca = xs.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; xca.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (xca[i] != xca[xca.length - <span class="number">1</span> - i]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>將 int 做成 String，再轉成 charArray，最後用迴圈比較頭尾是否相同。</p>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>我應該是不想處理數字，所以傾向於轉換成文字，但講究時間或空間效率的好像不建議這樣做。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> v;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="comment">//optimizations</span></span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">10</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(x%<span class="number">10</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">100</span>&amp;&amp;x%<span class="number">11</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">1000</span>&amp;&amp;((x/<span class="number">100</span>)*<span class="number">10</span>+x%<span class="number">10</span>)%<span class="number">11</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//actual logic</span></span><br><span class="line">        v=x%<span class="number">10</span>;</span><br><span class="line">        x=x/<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">while</span>(x-v&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                v=v*<span class="number">10</span>+x%<span class="number">10</span>;</span><br><span class="line">                x/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(v&gt;x)&#123;v/=<span class="number">10</span>;&#125;</span><br><span class="line">        <span class="keyword">return</span> v==x?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看到別人先判斷了一些快捷選項來減少計算，覺得可能滿重要的，不過解題通常都是想要快且正確，思考這些不知道是不是對實際開發比較好？</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFsaW5kcm9tZS1udW1iZXIvc29sdXRpb25zLzUzMTcvOS1tcy1qYXZhLWJlYXRzLTk5LTUtamF2YS1zb2x1dGlvbnMtZWFzeS10by11bmRlcnN0YW5kLw==">[9 ms JAVA] Beats 99.5 java solutions, easy to understand<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00036：Valid Sudoku</title>
    <url>/LeetCode/Note/Java/Medium/b8b7538/</url>
    <content><![CDATA[<p>辨別輸入的數獨陣列是否有效，無須判斷能否有解答。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdmFsaWQtc3Vkb2t1Lw==">Valid Sudoku<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:</p>
<p>Each row must contain the digits 1-9 without repetition.<br>Each column must contain the digits 1-9 without repetition.<br>Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.<br>Note:</p>
<p>A Sudoku board (partially filled) could be valid but is not necessarily solvable.<br>Only the filled cells need to be validated according to the mentioned rules.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><ul>
<li>造出 9 + 9 + 9 個新 Array，再判斷這 27 個 Array 是否有重複的數字。</li>
<li>建立判斷 Array 是否有重複數字的方法。</li>
<li>最難想的是九宮格座標的判斷，腦袋不靈光的人 (如我) 最好多看幾次記住這規律。<br>第一組 <code>[i][j]</code><br>00 00<br>01 01<br>02 02<br>03 10<br>04 11<br>05 12<br>06 20<br>07 21<br>08 22<br>第九組 <code>[i][j]</code><br>80 66<br>81 67<br>82 68<br>83 76<br>84 77<br>85 78<br>86 86<br>87 87<br>88 88</li>
</ul>
<p>最終會得出此公式：<code>[i / 3 * 3 + j / 3][i % 3 * 3 + j % 3]</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValidSudoku</span><span class="params">(<span class="type">char</span>[][] board)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span>[] i : board) &#123; <span class="comment">// 判斷 board</span></span><br><span class="line">          <span class="keyword">if</span> (!isVaildArray(i)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span>[][] board2 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line">        <span class="type">char</span>[][] board3 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">9</span>; j++) &#123;</span><br><span class="line">            board2[i][j] = board[j][i]; <span class="comment">// fill board2</span></span><br><span class="line">            board3[i][j] = board[i / <span class="number">3</span> * <span class="number">3</span> + j / <span class="number">3</span>][i % <span class="number">3</span> * <span class="number">3</span> + j % <span class="number">3</span>]; <span class="comment">// fill board3</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (!isVaildArray(board2[i])) &#123; <span class="comment">// 判斷 board2</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (!isVaildArray(board3[i])) &#123; <span class="comment">// 判斷 board3</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isVaildArray</span><span class="params">(<span class="type">char</span>[] array)</span> &#123;</span><br><span class="line">      <span class="type">int</span>[] ia = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">9</span>];</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> array[i];</span><br><span class="line">        <span class="keyword">if</span> (value != <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">          ia[value - <span class="string">&#x27;1&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i : ia) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>算是最笨的直觀解法。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0wxNDEyMTAxMTMvYXJ0aWNsZS9kZXRhaWxzLzg4NDEyMzc2">【LeetCode】36. Valid Sudoku 解题报告（Python）<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00070：Climbing Stairs</title>
    <url>/LeetCode/Note/Java/Easy/f6d2e913/</url>
    <content><![CDATA[<p>爬樓梯經典題，一步可以走一或兩階，n 階的樓梯有幾種走法。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY2xpbWJpbmctc3RhaXJzLw==">Climbing Stairs<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>You are climbing a staircase. It takes n steps to reach the top.</p>
<p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><p>經典題，推算幾階之後會發現是費式數列的規則：第 n 階方法數 &#x3D; (第 n - 1 階方法數) + (第 n - 2 階方法數)。</p>
<p>n&#x3D;1 1&#x3D;1<br>n&#x3D;2 1+1&#x3D;2<br>n&#x3D;3 1+2&#x3D;3<br>n&#x3D;4 1+3+1&#x3D;5<br>n&#x3D;5 1+4+3&#x3D;8<br>n&#x3D;6 1+5+6+1&#x3D;13 開始不好算<br>n&#x3D;7 1+6+10+4&#x3D;21 直接算錯</p>
<p>不過最難的地方就是要發現這規則，我自己是推算到n&#x3D;6開始感到吃力，甚至可能算錯，所以這種找規律的題目最好在五組內就定下公式。</p>
<p>一維動態規劃：</p>
<table>
<thead>
<tr>
<th>n</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
</tr>
</thead>
<tbody><tr>
<td>方法數</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>5</td>
<td>8</td>
</tr>
</tbody></table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">climbStairs</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> n; <span class="comment">// n &lt;= 2 要另外處理</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span>[] array = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        array[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        array[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">          array[i] = array[i - <span class="number">1</span>] + array[i - <span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> array[n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>dynamic-programming</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00049：Group Anagrams</title>
    <url>/LeetCode/Note/Java/Medium/d1b4bfba/</url>
    <content><![CDATA[<p>將輸入的 string array strs 依 Anagram (由相同字母池組成的單字) 分組後返回。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZ3JvdXAtYW5hZ3JhbXMv">Group Anagrams<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>Given an array of strings strs, group the anagrams together. You can return the answer in any order.</p>
<p>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;String&gt;&gt; <span class="title function_">groupAnagrams</span><span class="params">(String[] strs)</span> &#123;</span><br><span class="line">        HashMap&lt;String, ArrayList&lt;String&gt;&gt; hm = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; strs.length; i++) &#123;</span><br><span class="line">            <span class="type">char</span>[] sc = strs[i].toCharArray();</span><br><span class="line">            Arrays.sort(sc);</span><br><span class="line">            <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(sc);</span><br><span class="line">            <span class="keyword">if</span> (hm.containsKey(key)) &#123;</span><br><span class="line">                hm.get(key).add(strs[i]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ArrayList&lt;String&gt; al = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                al.add(strs[i]);</span><br><span class="line">                hm.put(key, al);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(hm.values());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>步驟：</p>
<ol>
<li><p>用 <a href="/LeetCode/Note/Java/Easy/86c77d53/" title="LeetCode Note Java 00242：Valid Anagram">之前 Valid Anagram 的方式</a> 找出 Anagram。</p>
</li>
<li><p>將重新排序過的字串作為 HashMap 的 Key，來存放 Anagram Array。</p>
</li>
<li><p>最後回傳 HashMap 存放的 Arrays。</p>
</li>
</ol>
<p>注意：</p>
<ul>
<li><code>HashMap.values()</code> 是個 Set 不能作為 List 型別回傳，所以要再用 ArrayList 包裝。</li>
</ul>
<p>重點物件或方法：</p>
<ul>
<li><p>HashMap</p>
</li>
<li><p>ArrayList</p>
</li>
</ul>
<p>寫的時候會一直用錯 HashMap 跟 ArrayList 的泛型宣告，Collection 與 List 的關係也挺讓人混亂。要默寫出來需要對這些類別無比熟悉。</p>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>繞了一圈後發現這解法算是滿主流的，差在 code 的精簡度跟使用 List 的差異。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZ3JvdXAtYW5hZ3JhbXMvc29sdXRpb25zLzE5MTc2L3NoYXJlLW15LXNob3J0LWphdmEtc29sdXRpb24vP29yZGVyQnk9bW9zdF92b3RlcyZsYW5ndWFnZVRhZ3M9amF2YQ==">Share my short JAVA solution<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmEtYXJyYXlsaXN0Lmh0bWw=">Java ArrayList<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmEtaGFzaG1hcC5odG1s">Java HashMap<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmEtaGFzaG1hcC12YWx1ZXMuaHRtbA==">Java HashMap values() 方法<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
        <tag>string</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00062：Unique Paths</title>
    <url>/LeetCode/Note/Java/Medium/f915260d/</url>
    <content><![CDATA[<p>情境題：給定 m * n 的網格，只能往右或往下走，求從左上到右下的所有路徑數。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdW5pcXVlLXBhdGhzLw==">Unique Paths<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time.</p>
<p>Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner.</p>
<p>The test cases are generated so that the answer will be less than or equal to 2 * 109.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><p>題目提到了網格，很容易讓人聯想到使用動態規劃來解題。<br>二維動態規劃，畫表格填充數量來觀察出公式：</p>
<table>
<thead>
<tr>
<th>n\m</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td>2</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
</tr>
<tr>
<td>3</td>
<td>1</td>
<td>3</td>
<td>6</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td>4</td>
<td>1</td>
<td>4</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
<tr>
<td>5</td>
<td>1</td>
<td>5</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
</tbody></table>
<p>若是用手來數，數到 <code>3 x 3</code> 就滿極限了，後面就不容易數出正確答案。<br>以僅有數值來分析，每個數值表示的是到達該格的方法數。<br>由於只能往右方或下方移動，所以可以確定上一格一定是來自左方或上方。<br>因此可以得知，<code>到達某一格的方法數</code> 為 <code>到達上方格的方法數</code> 加上 <code>到達左方格的方法數</code>。<br>還有可以發現當某邊為 <code>1</code> 時，都只會有一種到達方法，將此規則套入公式就能讓程式有初始值。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">uniquePaths</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] table = <span class="keyword">new</span> <span class="title class_">int</span>[m][n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span> || j == <span class="number">0</span>) &#123;</span><br><span class="line">              table[i][j] = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              table[i][j] = table[i - <span class="number">1</span>][j] + table[i][j - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> table[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>看了別人答案，發現這題效能要好就必須將此問題視為排序問題，將固定次數的 <code>下</code> 跟 <code>右</code> 進行排列組合。<br>(不過我排列組合老早就忘光了😥，所以不可能想出這解法)</p>
<p>題目中 <code>m</code> 跟 <code>n</code> 為格子數，要轉成步數就要減 <code>1</code>，變成 <code>m - 1</code> 跟 <code>n - 1</code>。<br>排序的公式為：總數量階除以各重複數量階 &#x3D;&gt; (a + b)! &#x2F; (a! * b!) &#x3D;&gt; ((m - 1) + (n - 1))! &#x2F; ((m - 1)! * (n - 1)!)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">uniquePaths</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(m == <span class="number">1</span> || n == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        m--;</span><br><span class="line">        n--;</span><br><span class="line">        <span class="keyword">if</span>(m &lt; n) &#123;              <span class="comment">// Swap, so that m is the bigger number</span></span><br><span class="line">            m = m + n;</span><br><span class="line">            n = m - n;</span><br><span class="line">            m = m - n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> m+<span class="number">1</span>; i &lt;= m+n; i++, j++)&#123;       <span class="comment">// Instead of taking factorial, keep on multiply &amp; divide</span></span><br><span class="line">            res *= i;</span><br><span class="line">            res /= j;</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>)res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>結論是我看過這用法之後，在實戰中應該還是用不出來…</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdW5pcXVlLXBhdGhzL3NvbHV0aW9ucy8yMjk1OC9tYXRoLXNvbHV0aW9uLW8tMS1zcGFjZS8=">Math solution, O(1) space<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>array</tag>
        <tag>dynamic-programming</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00042：Trapping Rain Water</title>
    <url>/LeetCode/Note/Java/Hard/db137b/</url>
    <content><![CDATA[<p>情境題：計算最大積水量。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdHJhcHBpbmctcmFpbi13YXRlci8=">Trapping Rain Water<i class="fa fa-external-link-alt"></i></span> Hard</p>
<p>Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>Two Pointer 從兩邊往內夾：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">trap</span><span class="params">(<span class="type">int</span>[] height)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">output</span> <span class="operator">=</span> <span class="number">0</span>, l = <span class="number">0</span>, r = height.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">          <span class="type">int</span> <span class="variable">minBorder</span> <span class="operator">=</span> Math.min(height[l], height[r]); <span class="comment">// 以短的邊界為比較依據，因為水超過短邊就會漏掉</span></span><br><span class="line">          <span class="keyword">if</span> (height[l] == minBorder) &#123;</span><br><span class="line">            l++;</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r &amp;&amp; minBorder &gt; height[l]) &#123; <span class="comment">// 計算水窪</span></span><br><span class="line">              output += minBorder - height[l++];</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            r--;</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r &amp;&amp; minBorder &gt; height[r]) &#123;</span><br><span class="line">              output += minBorder - height[r--];</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>關於 Two Pointer 對於移動指標的時機還不是很熟悉，常常誤判。</p>
<p>看了滿多其他解法，要注意不要被題目分類蒙蔽雙眼。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZ3JhbmR5YW5nL3AvNDQwMjM5Mi5odG1s">[LeetCode] 42. Trapping Rain Water 收集雨水<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Hard</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>two-pointers</tag>
        <tag>array</tag>
        <tag>stack</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00121：Best Time to Buy and Sell Stock</title>
    <url>/LeetCode/Note/Java/Easy/a41baae5/</url>
    <content><![CDATA[<p>回傳最高收益。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmVzdC10aW1lLXRvLWJ1eS1hbmQtc2VsbC1zdG9jay8=">Best Time to Buy and Sell Stock<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>You are given an array prices where prices[i] is the price of a given stock on the ith day.</p>
<p>You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.</p>
<p>Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><h3 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h3><p>計算每個 price 買進後可能的最高收益來更新最佳收益：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxProfit</span><span class="params">(<span class="type">int</span>[] prices)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxP</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; prices.length - <span class="number">1</span>; i++) &#123; <span class="comment">// 買進的價位</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; prices.length; j++) &#123; <span class="comment">// 賣出的價位</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">diff</span> <span class="operator">=</span> prices[j] - prices[i];</span><br><span class="line">                <span class="keyword">if</span> (diff &gt; maxP) &#123;</span><br><span class="line">                    maxP = diff;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxP;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>O(n*n) 最暴力的雙層迴圈果然超時了。</p>
<h3 id="想法-2"><a href="#想法-2" class="headerlink" title="想法 2"></a>想法 2</h3><p>只能跑一圈的話就必須好好設計變數，記錄當前可能的最低買進價錢跟最高收益。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxProfit</span><span class="params">(<span class="type">int</span>[] prices)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> Integer.MAX_VALUE, maxP = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> price : prices) &#123;</span><br><span class="line">          min = price &lt; min ? price : min; <span class="comment">// 更新 最低買進價位</span></span><br><span class="line">          <span class="type">int</span> <span class="variable">profit</span> <span class="operator">=</span> price - min; <span class="comment">// 計算 當次收益</span></span><br><span class="line">          maxP = profit &gt; maxP ? profit : maxP; <span class="comment">// 更新 最高收益</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxP;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="重點"><a href="#重點" class="headerlink" title="重點"></a>重點</h3><ul>
<li>最後的 <code>最高收益</code> 不一定是由最後的 <code>最低買進價位</code> 得出。</li>
</ul>
<h3 id="重點物件或方法"><a href="#重點物件或方法" class="headerlink" title="重點物件或方法"></a>重點物件或方法</h3><ul>
<li><code>Integer.MAX_VALUE</code></li>
</ul>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>網路上有著各式方法，只好見一套學一套。</p>
<h3 id="Sliding-Window："><a href="#Sliding-Window：" class="headerlink" title="Sliding Window："></a>Sliding Window：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxProfit</span><span class="params">(<span class="type">int</span>[] prices)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 買進位置</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">// 賣出位置</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">maxProfit</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (right &lt; prices.length) &#123;</span><br><span class="line">            <span class="keyword">if</span> (prices[left] &lt; prices[right]) &#123;</span><br><span class="line">                maxProfit = Math.max(maxProfit, prices[right] - prices[left]);</span><br><span class="line">                right++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                left = right;</span><br><span class="line">                right++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxProfit;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>重點：</p>
<ul>
<li><p>其實概念跟前面的 想法 2 一樣，只是寫法不同。</p>
</li>
<li><p>Sliding Window 是這種解題技巧的名稱，可以減少暴力法中的重複計算。</p>
</li>
</ul>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lZXRjb2RlLWdoL2xlZXRjb2RlL2Jsb2IvbWFpbi9qYXZhLzEyMS1CZXN0LVRpbWUtdG8tQnV5LWFuZC1TZWxsLVN0b2NrLmphdmE=">neetcode-gh&#x2F;leetcode&#x2F;blob&#x2F;main&#x2F;java&#x2F;121-Best-Time-to-Buy-and-Sell-Stock.java<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tLyVFNiU4QSU4MCVFOCVBMSU5MyVFNyVBRCU4NiVFOCVBOCU5OC8lRTYlQkMlOTQlRTclQUUlOTclRTYlQjMlOTUlRTclQUQlODYlRTglQTglOTglRTclQjMlQkIlRTUlODglOTctdHdvLXBvaW50ZXItJUU4JTg4JTg3c2xpZGluZy13aW5kb3ctODc0MmY0NWYzZjU1">演算法筆記系列 — Two Pointer 與Sliding Window<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnRlY2hicmlkZ2UuY2MvMjAxOS8wOS8yOC9sZWV0Y29kZS1wYXR0ZXJuLXNsaWRpbmctd2luZG93Lw==">Leetcode 刷題 pattern - Sliding Window<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>array</tag>
        <tag>dynamic-programming</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00125：Valid Palindrome</title>
    <url>/LeetCode/Note/Java/Easy/e64a5a32/</url>
    <content><![CDATA[<p>判斷將字串除去符號與轉成小寫後是否回文。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdmFsaWQtcGFsaW5kcm9tZS8=">Valid Palindrome<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.</p>
<p>Given a string s, return true if it is a palindrome, or false otherwise.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ls</span> <span class="operator">=</span> s.toLowerCase();</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = ls.length() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">          <span class="keyword">if</span> (!Character.isLetterOrDigit(ls.charAt(left))) &#123;</span><br><span class="line">            left++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (!Character.isLetterOrDigit(ls.charAt(right))) &#123;</span><br><span class="line">            right--;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (ls.charAt(left) != ls.charAt(right)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          left++;</span><br><span class="line">          right--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="重點物件或方法"><a href="#重點物件或方法" class="headerlink" title="重點物件或方法"></a>重點物件或方法</h3><ul>
<li><code>Character.isLetterOrDigit()</code></li>
</ul>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>最難的就是判斷是不是符號，如果不會這個方法就很難寫出來。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>two-pointers</tag>
        <tag>string</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00128：Longest Consecutive Sequence</title>
    <url>/LeetCode/Note/Java/Medium/b92d4adc/</url>
    <content><![CDATA[<p>返回 int Array 中最長的連續數字長度。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1jb25zZWN1dGl2ZS1zZXF1ZW5jZS8=">Longest Consecutive Sequence<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.</p>
<p>You must write an algorithm that runs in O(n) time.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><ul>
<li>先排序。</li>
<li>再來就數連續相差 1 的數量。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">longestConsecutive</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums.length &lt; <span class="number">2</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> nums.length;</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> <span class="number">1</span>, cLength = <span class="number">1</span>, cMaxLength = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (right &lt; nums.length) &#123;</span><br><span class="line">          <span class="type">int</span> <span class="variable">diff</span> <span class="operator">=</span> nums[right] - nums[right - <span class="number">1</span>];</span><br><span class="line">          <span class="keyword">if</span> (diff == <span class="number">1</span>) &#123;</span><br><span class="line">            cLength++;</span><br><span class="line">          &#125;<span class="keyword">else</span> <span class="keyword">if</span> (diff &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            cLength = <span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (cLength &gt; cMaxLength) &#123;</span><br><span class="line">            cMaxLength = cLength;</span><br><span class="line">          &#125;</span><br><span class="line">          right++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cMaxLength;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>結果意外的簡單。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>array</tag>
        <tag>union-find</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00141：Linked List Cycle</title>
    <url>/LeetCode/Note/Java/Easy/30f3f015/</url>
    <content><![CDATA[<p>回傳輸入的 Linked List 是否形成 Cycle。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbGlua2VkLWxpc3QtY3ljbGUv">Linked List Cycle<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given head, the head of a linked list, determine if the linked list has a cycle in it.</p>
<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail’s next pointer is connected to. Note that pos is not passed as a parameter.</p>
<p>Return true if there is a cycle in the linked list. Otherwise, return false.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123;</span></span><br><span class="line"><span class="comment"> *         val = x;</span></span><br><span class="line"><span class="comment"> *         next = null;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasCycle</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">null</span> || head.next == <span class="literal">null</span> || head.next.next == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> head, fast = head;</span><br><span class="line">        <span class="keyword">while</span> (slow.next != <span class="literal">null</span> &amp;&amp; fast.next != <span class="literal">null</span> &amp;&amp; fast.next.next != <span class="literal">null</span>) &#123;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">            <span class="keyword">if</span> (slow == fast) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因為先寫過 <a href="/LeetCode/Note/Java/Medium/9b4c1812/" title="LeetCode Note Java 00142：Linked List Cycle II">00142</a> 了，所以知道要確認有沒有形成 Cycle 是使用龜兔賽跑的方式判斷。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>two-pointers</tag>
        <tag>linked-list</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00205：Isomorphic Strings</title>
    <url>/LeetCode/Note/Java/Easy/637201b9/</url>
    <content><![CDATA[<p>判斷輸入的兩個 String 是否是 Isomorphic (字母排序規律相同)。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcnVubmluZy1zdW0tb2YtMWQtYXJyYXkv">Isomorphic Strings<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given two strings s and t, determine if they are isomorphic.</p>
<p>Two strings s and t are isomorphic if the characters in s can be replaced to get t.</p>
<p>All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isIsomorphic</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (s.length() != t.length()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span>[] sca = s.toCharArray();</span><br><span class="line">        <span class="type">char</span>[] tca = t.toCharArray();</span><br><span class="line">        HashMap&lt;Character, Character&gt; hm = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; sca.length; i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">sc</span> <span class="operator">=</span> sca[i];</span><br><span class="line">            <span class="type">char</span> <span class="variable">tc</span> <span class="operator">=</span> tca[i];</span><br><span class="line">            <span class="keyword">if</span> (hm.containsKey(sc)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (hm.get(sc) != tc ) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (hm.containsValue(tc)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                hm.put(sc, tc);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>步驟：</p>
<ol>
<li><p>將 String 轉成 char array。</p>
</li>
<li><p>透過 HashMap 記住相同序列位置的 char。</p>
</li>
<li><p>迴圈依序比對 HashMap 中儲存的 key 與 value，若違反規則就不是 Isomorphic。</p>
</li>
<li><p>都沒違反規則才是 Isomorphic。</p>
</li>
</ol>
<p>注意：</p>
<ul>
<li>HashSet 只能用包裝過的基本型別。</li>
</ul>
<p>重點物件或方法：</p>
<ul>
<li>HashSet</li>
</ul>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>看到很多人只使用 intArray 解題，但這種的我要想更久，先繼續練其他題，來增加眼界好了。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaXNvbW9ycGhpYy1zdHJpbmdzL3NvbHV0aW9ucy81NzgxMC9zaG9ydC1qYXZhLXNvbHV0aW9uLXdpdGhvdXQtbWFwcy8=">Short Java solution without maps<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00206：Reverse Linked List</title>
    <url>/LeetCode/Note/Java/Easy/861a2560/</url>
    <content><![CDATA[<p>倒裝輸入的 Linked List。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcmV2ZXJzZS1saW5rZWQtbGlzdC8=">Reverse Linked List<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given the head of a singly linked list, reverse the list, and return the reversed list.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">reverseList</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">output</span> <span class="operator">=</span> <span class="literal">null</span>, tmp = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="literal">null</span>) &#123;</span><br><span class="line">          tmp = output;</span><br><span class="line">          output = <span class="keyword">new</span> <span class="title class_">ListNode</span>(head.val);</span><br><span class="line">          output.next = tmp;</span><br><span class="line">          head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>直接把 head 倒裝：</p>
<ol>
<li><p>遍歷 head。</p>
</li>
<li><p>用 tmp 記住前一輪的 output，不然連結會斷。</p>
</li>
<li><p>output 設成一個新 ListNode，並將 val 值 設成 head.val。</p>
</li>
<li><p>output.next 設成 output，把先前串的接起來。</p>
</li>
<li><p>head 設成 head.next，進入下一輪，直到 next 為空。</p>
</li>
</ol>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>這種類型的解法滿主流的，不過還是很多遞迴方式的解法，遞迴真的是我的罩門 QQ。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>linked-list</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00167：Two Sum II - Input Array Is Sorted</title>
    <url>/LeetCode/Note/Java/Medium/90bfb5ca/</url>
    <content><![CDATA[<p>給定一排序過的 int Array 與 1 目標值，找出 Array 中相加為目標值的兩個數的索引。其中所引從 1 開始，限制同一元素不得使用兩次，限制只能使用恆定的額外空間。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdHdvLXN1bS1paS1pbnB1dC1hcnJheS1pcy1zb3J0ZWQv">Two Sum II - Input Array Is Sorted<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>  Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number. Let these two numbers be numbers[index1] and numbers[index2] where 1 &lt;&#x3D; index1 &lt; index2 &lt;&#x3D; numbers.length.</p>
<p>  Return the indices of the two numbers, index1 and index2, added by one as an integer array [index1, index2] of length 2.</p>
<p>  The tests are generated such that there is exactly one solution. You may not use the same element twice.</p>
<p>  Your solution must use only constant extra space.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>直觀的拿之前 <a href="/LeetCode/Note/Java/Easy/41645b8/" title="LeetCode Note Java 00001：Two Sum">00001：Two Sum</a> 的解法來用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] numbers, <span class="type">int</span> target) &#123;</span><br><span class="line">        Map&lt;Integer, Integer&gt; diffMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(); <span class="comment">// diff, index</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; numbers.length; i++) &#123;</span><br><span class="line">          <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> numbers[i];</span><br><span class="line">          <span class="keyword">if</span> (diffMap.containsKey(value)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;diffMap.get(value) + <span class="number">1</span>, i + <span class="number">1</span>&#125;; <span class="comment">// 限制索引從 1 開始所以要 +1</span></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            diffMap.put(target - value, i);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>雖然這樣通過了 leetCode Submit，但應該不符合題目要求的 <code>只使用恆定額外空間</code>。</p>
<p>Two Pointer 方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] numbers, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>, r = numbers.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (numbers[l] + numbers[r] != target) &#123;</span><br><span class="line">          <span class="keyword">if</span> (numbers[l] + numbers[r] &gt; target) &#123;</span><br><span class="line">            r--;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            l++;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;l + <span class="number">1</span>, r + <span class="number">1</span>&#125;; <span class="comment">// 限制索引從 1 開始所以要 +1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>之後知道排序過的 Array 可以用 two pointer 的方式。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>two-pointers</tag>
        <tag>array</tag>
        <tag>binary-search</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00238：Product of Array Except Self</title>
    <url>/LeetCode/Note/Java/Medium/72cd5012/</url>
    <content><![CDATA[<p>回傳一個 Array，其每一項等於輸入 Array 的每一項排除自己後的乘積。須滿足 O(n) 時間複雜度，且不得使用除法。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcHJvZHVjdC1vZi1hcnJheS1leGNlcHQtc2VsZi8=">Product of Array Except Self<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p>
<p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>
<p>You must write an algorithm that runs in O(n) time and without using the division operation.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><ul>
<li>限制 O(n) 意味著不準暴力法，並且在常數次的 for loop 下要完成計算。</li>
<li>禁止除法意味著每次 for loop 不能乘到每個數字。</li>
</ul>
<p>這樣限制後逼得我們想出 Array 的每一格都是左邊所有數字的乘積乘上右邊所有乘積的方式。<br>要做到這種事最簡單的方法是從左到右乘一次，再從右到左乘一次，我是覺得不好想，但用代入法來看確實就是答案。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] productExceptSelf(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="type">int</span>[] output = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">1</span>, right = <span class="number">1</span>; <span class="comment">// 從左到右跟從右到左要乘的數字</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123; <span class="comment">// 從左到右</span></span><br><span class="line">            output[i] = left; <span class="comment">// 第一圈時 left 是 1</span></span><br><span class="line">            left *= nums[i]; <span class="comment">// left 每走一格就乘上那格的值</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> nums.length - <span class="number">1</span>; i &gt; -<span class="number">1</span>; i--) &#123; <span class="comment">// 從右到左</span></span><br><span class="line">            output[i] *= right; <span class="comment">// 第一圈時 right 是 1</span></span><br><span class="line">            right *= nums[i]; <span class="comment">// right 每走一格就乘上那格的值</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lZXRjb2RlLWdoL2xlZXRjb2RlL2Jsb2IvbWFpbi9qYXZhLzAyMzgtcHJvZHVjdC1vZi1hcnJheS1leGNlcHQtc2VsZi5qYXZh">leetcode&#x2F;java&#x2F;0238-product-of-array-except-self.java<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>array</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00242：Valid Anagram</title>
    <url>/LeetCode/Note/Java/Easy/86c77d53/</url>
    <content><![CDATA[<p>判斷輸入的兩個 String 彼此是否為 Anagram (由相同字母池組成的單字)。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdmFsaWQtYW5hZ3JhbS8=">Valid Anagram<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given two strings s and t, return true if t is an anagram of s, and false otherwise.</p>
<p>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">        <span class="type">char</span>[] sa = s.toCharArray();</span><br><span class="line">        <span class="type">char</span>[] ta = t.toCharArray();</span><br><span class="line">        Arrays.sort(sa);</span><br><span class="line">        Arrays.sort(ta);</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">new</span> <span class="title class_">String</span>(sa)).equals(<span class="keyword">new</span> <span class="title class_">String</span>(ta));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>步驟：</p>
<ol>
<li><p>將 String 轉成 char array。</p>
</li>
<li><p>透過 <code>Arrays.sort()</code> 重新排列 chars。</p>
</li>
<li><p>將 char array 轉回 String。</p>
</li>
<li><p>比較排序後的 String 值是否相同。</p>
</li>
</ol>
<p>注意：</p>
<ul>
<li><p><code>Arrays.sort()</code> 是操作原數據，並非返回新 Array。</p>
</li>
<li><p>比較 String 時應使用 <code>String.equals()</code> 才是比較 String 值是否相同，若使用 <code>==</code> 是比較儲存位置。</p>
</li>
</ul>
<p>重點物件或方法：</p>
<ul>
<li><p><code>Arrays.sort()</code></p>
</li>
<li><p><code>String.toCharArray()</code></p>
</li>
<li><p><code>String.equals()</code></p>
</li>
</ul>
<p>補充：此方法在 <a href="/LeetCode/Note/Java/Medium/2ce9d3d1/" title="LeetCode Note Java 00438：Find All Anagrams in a String">00438：Find All Anagrams in a String</a> 中會超時。</p>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>這種題目解法就滿多樣的，看到只使用一個 Array 就解決計數兩個 String，真的是滿厲害的，不過看過之後方法就見光死了，類似題目以後都能用此方式處理了。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] chars = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            chars[s.charAt(i) - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; t.length(); i++) &#123;</span><br><span class="line">            chars[t.charAt(i) - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; chars.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chars[i] != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>知道越多 String Class 的 method 解題時可以更靈活，如 <code>String.charAt()</code>。</p>
<p>需要知道 char 也能當作 int 使用，詳見：<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvQVNDSUk=">ASCII<i class="fa fa-external-link-alt"></i></span>。</p>
<p>重點物件或方法：</p>
<ul>
<li><code>String.charAt()</code></li>
</ul>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdmFsaWQtYW5hZ3JhbS9zb2x1dGlvbnMvNjY0ODQvYWNjZXB0ZWQtamF2YS1vLW4tc29sdXRpb24taW4tNS1saW5lcy8=">Accepted Java O(n) solution in 5 lines<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9qYXZhL2phdmEtc3RyaW5nLmh0bWw=">Java String 类<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
        <tag>sort</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00278：First Bad Version</title>
    <url>/LeetCode/Note/Java/Easy/243cafb6/</url>
    <content><![CDATA[<p>情境題：找出第一個壞版本。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmlyc3QtYmFkLXZlcnNpb24v">First Bad Version<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.</p>
<p>Suppose you have n versions [1, 2, …, n] and you want to find out the first bad one, which causes all the following ones to be bad.</p>
<p>You are given an API bool isBadVersion(version) which returns whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>假設好版本是 false，壞版本是 true，那各版本就可以如此呈現：[f, f, f, f, t, t, t, t]</p>
<p>要找的是第一個 true。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* The isBadVersion API is defined in the parent class VersionControl.</span></span><br><span class="line"><span class="comment">      boolean isBadVersion(int version); */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> <span class="keyword">extends</span> <span class="title class_">VersionControl</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">firstBadVersion</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">      <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">1</span>, right = n;</span><br><span class="line">      <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">middle</span> <span class="operator">=</span> left + (right - left) / <span class="number">2</span>; <span class="comment">// 重點：避免相加數字過大導致溢出。</span></span><br><span class="line">        <span class="keyword">if</span> (isBadVersion(middle)) &#123;</span><br><span class="line">          right = middle;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          left = middle + <span class="number">1</span>; <span class="comment">// 一定是這步導致離開迴圈。</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> left; <span class="comment">// 離開迴圈時 left 會是第一個 t。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>這題乍看之下就是二元搜尋法，以為很簡單，但是很多條件不好想像，要一次正確或是執行時間達標都不容易。</p>
<p>要注意離開迴圈時的條件才能知道誰是答案。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmlyc3QtYmFkLXZlcnNpb24vc29sdXRpb25zLzcxMzg2L2FuLWNsZWFyLXdheS10by11c2UtYmluYXJ5LXNlYXJjaC8=">An clear way to use binary search<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>binary-search</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00142：Linked List Cycle II</title>
    <url>/LeetCode/Note/Java/Medium/9b4c1812/</url>
    <content><![CDATA[<p>回傳輸入的 Linked List 的 Cycle 啟始 ListNode。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbGlua2VkLWxpc3QtY3ljbGUtaWkv">Linked List Cycle II<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>Given the head of a linked list, return the node where the cycle begins. If there is no cycle, return null.</p>
<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail’s next pointer is connected to (0-indexed). It is -1 if there is no cycle. Note that pos is not passed as a parameter.</p>
<p>Do not modify the linked list.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123;</span></span><br><span class="line"><span class="comment"> *         val = x;</span></span><br><span class="line"><span class="comment"> *         next = null;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">detectCycle</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">null</span> || head.next == <span class="literal">null</span> || head.next.next == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> head, fast = head;</span><br><span class="line">        <span class="comment">// Cycle 測試：fast 終會追上 slow</span></span><br><span class="line">        <span class="keyword">while</span> (slow.next != <span class="literal">null</span> &amp;&amp; fast.next != <span class="literal">null</span> &amp;&amp; fast.next.next != <span class="literal">null</span>) &#123;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">            <span class="keyword">if</span> (slow == fast) &#123;</span><br><span class="line">                <span class="comment">// 確定是 Cycle</span></span><br><span class="line">                <span class="comment">// head 到 Cycle start node 的距離與 slow 到 Cycle start node 距離會一致：</span></span><br><span class="line">                <span class="comment">// 因為 a + b = (a + 2b +c ) / 2</span></span><br><span class="line">                <span class="comment">// 2a + 2b = a + 2b + c</span></span><br><span class="line">                <span class="comment">// a = c</span></span><br><span class="line">                <span class="keyword">while</span> (head != slow) &#123;</span><br><span class="line">                    head = head.next;</span><br><span class="line">                    slow = slow.next;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> head;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>這題我真的想不到，所以直接看別人答案了，感覺我就算好好在紙上畫圖分析，並測試幾輪後也想不到這種解法。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9pdGhlbHAuaXRob21lLmNvbS50dy9hcnRpY2xlcy8xMDIyMzcyMQ==">[Day 16] 演算法刷題 LeetCode 142. Linked List Cycle II (Medium)<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>two-pointers</tag>
        <tag>linked-list</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00299：Bulls and Cows</title>
    <url>/LeetCode/Note/Java/Medium/2ddf9d28/</url>
    <content><![CDATA[<p>情境題：猜數字，輸入答案跟猜的數字，回傳幾 A (數字對位置也對) 幾 B (數字對位置錯)。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYnVsbHMtYW5kLWNvd3Mv">Bulls and Cows<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>You are playing the Bulls and Cows game with your friend.</p>
<p>You write down a secret number and ask your friend to guess what the number is. When your friend makes a guess, you provide a hint with the following info:</p>
<p>The number of “bulls”, which are digits in the guess that are in the correct position.<br>The number of “cows”, which are digits in the guess that are in your secret number but are located in the wrong position. Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.<br>Given the secret number secret and your friend’s guess guess, return the hint for your friend’s guess.</p>
<p>The hint should be formatted as “xAyB”, where x is the number of bulls and y is the number of cows. Note that both secret and guess may contain duplicate digits.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getHint</span><span class="params">(String secret, String guess)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>, b = <span class="number">0</span>; <span class="comment">// A 的數目與 B 的數目</span></span><br><span class="line">        HashMap&lt;Character, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(); <span class="comment">// 數字, 數量</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; secret.length(); i++) &#123;</span><br><span class="line">          <span class="type">char</span> <span class="variable">valueS</span> <span class="operator">=</span> secret.charAt(i), valueG = guess.charAt(i);</span><br><span class="line">          <span class="keyword">if</span> (valueS == valueG) &#123; <span class="comment">// 完全正確就不做額外計數</span></span><br><span class="line">            a++;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123; <span class="comment">// B 的計數不太好想，要考慮相同數字的數字差</span></span><br><span class="line">            <span class="keyword">if</span> (map.getOrDefault(valueS, <span class="number">0</span>) &lt; <span class="number">0</span>) &#123; <span class="comment">// 表示這個數字在另一條出現過相同的了，而且保證是再次相遇，不會做多餘的計算</span></span><br><span class="line">              b++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (map.getOrDefault(valueG, <span class="number">0</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">              b++;</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(valueS, map.getOrDefault(valueS, <span class="number">0</span>) + <span class="number">1</span>); <span class="comment">// 每個不完全相同的數字都要計數</span></span><br><span class="line">            map.put(valueG, map.getOrDefault(valueG, <span class="number">0</span>) - <span class="number">1</span>); <span class="comment">// 兩條計數的方向相反，這樣一加一減才能用大於或小於 0 當作分界</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="string">&quot;A&quot;</span> + b + <span class="string">&quot;B&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>在比較序列時，這種共用 map 或 array 來相反計數 (一加一減) 的方式滿常見的，但有時候我邏輯會跟不上，只能多做題目強迫做這種思考了。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYnVsbHMtYW5kLWNvd3Mvc29sdXRpb25zLzc0NjIxL29uZS1wYXNzLWphdmEtc29sdXRpb24v">One pass Java solution<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00347：Top K Frequent Elements</title>
    <url>/LeetCode/Note/Java/Medium/82ff91a8/</url>
    <content><![CDATA[<p>回傳 array 中頻率最高的 k 個元素。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdG9wLWstZnJlcXVlbnQtZWxlbWVudHMv">Top K Frequent Elements<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] topKFrequent(<span class="type">int</span>[] nums, <span class="type">int</span> k) &#123;</span><br><span class="line">        <span class="type">int</span>[] output = <span class="keyword">new</span> <span class="title class_">int</span>[k];</span><br><span class="line">        <span class="comment">// 將計數存進 HashMap</span></span><br><span class="line">        HashMap&lt;Integer, Integer&gt; hm = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> value : nums) &#123;</span><br><span class="line">            hm.put(value, hm.getOrDefault(value, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        PriorityQueue&lt;Map.Entry&lt;Integer, Integer&gt;&gt; pq = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;(</span><br><span class="line">            (a, b) -&gt; a.getValue() - b.getValue() <span class="comment">// Ascending Order</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry : hm.entrySet()) &#123;</span><br><span class="line">            pq.add(entry);</span><br><span class="line">            <span class="keyword">if</span> (pq.size() &gt; k) &#123;</span><br><span class="line">                pq.poll(); <span class="comment">// 將最小的值排除</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">            output[i] = pq.poll().getKey();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>若不會特定的資料結構相關組件就要手刻一個類似功能，所以最好趁練習的時候多記一些。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY2Fpbmlhb2pjLmNvbS9qYXZhL2phdmEtcHJpb3JpdHlxdWV1ZS5odG1s">Java PriorityQueue<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lZXRjb2RlLWdoL2xlZXRjb2RlL2Jsb2IvbWFpbi9qYXZhLzM0Ny1Ub3AtSy1GcmVxdWVudC1FbGVtZW50cy5qYXZh">neetcode-gh&#x2F;leetcode&#x2F;blob&#x2F;main&#x2F;java&#x2F;347-Top-K-Frequent-Elements.java<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
        <tag>heap</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00392：Is Subsequence</title>
    <url>/LeetCode/Note/Java/Easy/e8a366b3/</url>
    <content><![CDATA[<p>判斷輸入的兩個 String <code>s</code> 是不是 <code>t</code> 的 subsequence (序列中刪除部分，但不改變剩餘序列的相對順序)。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaXMtc3Vic2VxdWVuY2Uv">Is Subsequence<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given two strings s and t, return true if s is a subsequence of t, or false otherwise.</p>
<p>A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., “ace” is a subsequence of “abcde” while “aec” is not).</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSubsequence</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">indexa</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">chars</span> <span class="operator">=</span> s.charAt(i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> index; j &lt; t.length(); j++) &#123;</span><br><span class="line">                <span class="type">char</span> <span class="variable">chart</span> <span class="operator">=</span> t.charAt(j);</span><br><span class="line">                <span class="keyword">if</span> (chart == chars) &#123;</span><br><span class="line">                    indexa = j;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (indexa &lt; index) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            index = indexa + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>步驟：</p>
<ol>
<li><p>使用 int 變數記住 String <code>s</code> 中每個 char 在 <code>t</code> 中的索引。</p>
</li>
<li><p>找過的地方不重複找，只要能依序找完，<code>s</code> 就是 <code>t</code> 的 subsequence。</p>
</li>
</ol>
<p>重點：</p>
<ul>
<li>for 迴圈使用 break 提早結束。</li>
</ul>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>有人的 code 超精簡，那要腦袋很靈光才能馬上想到，目前我做不到，就能多看看。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvaXMtc3Vic2VxdWVuY2Uvc29sdXRpb25zLzE4MTE1NDYvc2ltcGxlLWNvZGUtMy1saW5lcy8=">SIMPLE CODE || 3 LINES<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>dynamic-programming</tag>
        <tag>binary-search</tag>
        <tag>greedy</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00409：Longest Palindrome</title>
    <url>/LeetCode/Note/Java/Easy/f4685209/</url>
    <content><![CDATA[<p>回傳傳入字串可造出的最長回文字串長度。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1wYWxpbmRyb21lLw==">Longest Palindrome<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome that can be built with those letters.</p>
<p>Letters are case sensitive, for example, “Aa” is not considered a palindrome here.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><h3 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h3><ul>
<li><p>偶數數量的字能在回文字串兩邊各放一半</p>
</li>
<li><p>奇數數量的字僅能放一組在中間</p>
</li>
</ul>
<h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ol>
<li><p>計算與儲存各字母數量</p>
</li>
<li><p>依照各字母是否為奇數來計算回文字串長度</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">longestPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        HashMap&lt;Character, Integer&gt; hm = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">schar</span> <span class="operator">=</span> s.charAt(i);</span><br><span class="line">            hm.put(schar, hm.getOrDefault(schar, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">output</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasOdd</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> value : hm.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (value % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                hasOdd = <span class="literal">true</span>;</span><br><span class="line">                output += (value - <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                output += value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> hasOdd ? output + <span class="number">1</span> : output;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="重點物件或方法"><a href="#重點物件或方法" class="headerlink" title="重點物件或方法"></a>重點物件或方法</h3><ul>
<li><code>HashMap.getOrDefault()</code></li>
</ul>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>看其他人滿多精巧的寫法，我的要跑兩次迴圈實在是太弱了：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">longestPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (s == <span class="literal">null</span> || s.length() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">		HashSet&lt;Character&gt; hs = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Character&gt;();</span><br><span class="line">		<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (hs.contains(s.charAt(i))) &#123;</span><br><span class="line">				hs.remove(s.charAt(i));</span><br><span class="line">				count++;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				hs.add(s.charAt(i));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (!hs.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">return</span> count * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">		<span class="keyword">return</span> count * <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1wYWxpbmRyb21lL3NvbHV0aW9ucy8xNTk4OTg3LzQwOS1sb25nZXN0LXBhbGluZHJvbWUtamF2YS1zb2x1dGlvbi8=">409. Longest Palindrome: Java Solution<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00438：Find All Anagrams in a String</title>
    <url>/LeetCode/Note/Java/Medium/2ce9d3d1/</url>
    <content><![CDATA[<p>找出 <code>s</code> 字串中所有目標字串 <code>p</code> 的 Anagram (由相同字母池組成的單字)，返回以每個 Anagram 的開頭索引組成的 Array。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmluZC1hbGwtYW5hZ3JhbXMtaW4tYS1zdHJpbmcv">Find All Anagrams in a String<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>Given two strings s and p, return an array of all the start indices of p’s anagrams in s. You may return the answer in any order.</p>
<p>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><p>列出需求：</p>
<ul>
<li>回傳的 List</li>
<li>判斷 Anagram 的方法</li>
<li>切出特定 String 長度的方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">findAnagrams</span><span class="params">(String s, String p)</span> &#123;</span><br><span class="line">      List&lt;Integer&gt; output = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">      <span class="type">int</span> <span class="variable">pAdd</span> <span class="operator">=</span> p.length(); <span class="comment">// 注意</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length() - p.length() + <span class="number">1</span>; i++) &#123; <span class="comment">// 注意</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">tester</span> <span class="operator">=</span> s.substring(i, i + pAdd); <span class="comment">// 注意</span></span><br><span class="line">        <span class="keyword">if</span> (isAnagram(tester, p)) &#123;</span><br><span class="line">          output.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String a, String b)</span> &#123;</span><br><span class="line">      <span class="type">char</span>[] aca = a.toCharArray();</span><br><span class="line">      <span class="type">char</span>[] bca = b.toCharArray();</span><br><span class="line">      Arrays.sort(aca);</span><br><span class="line">      Arrays.sort(bca);</span><br><span class="line">      <span class="keyword">return</span> (<span class="keyword">new</span> <span class="title class_">String</span>(aca)).equals(<span class="keyword">new</span> <span class="title class_">String</span>(bca));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>結果超過時間限制。</p>
<p>重新嘗試：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">findAnagrams</span><span class="params">(String s, String p)</span> &#123;</span><br><span class="line">      List&lt;Integer&gt; output = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">      <span class="type">int</span> <span class="variable">pAdd</span> <span class="operator">=</span> p.length(); <span class="comment">// 注意</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length() - p.length() + <span class="number">1</span>; i++) &#123; <span class="comment">// 注意</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">tester</span> <span class="operator">=</span> s.substring(i, i + pAdd); <span class="comment">// 注意</span></span><br><span class="line">        <span class="keyword">if</span> (isAnagram(tester, p)) &#123;</span><br><span class="line">          output.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String a, String b)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] chars = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length(); i++) &#123;</span><br><span class="line">            chars[a.charAt(i) - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; b.length(); i++) &#123;</span><br><span class="line">            chars[b.charAt(i) - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; chars.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chars[i] != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>這次就通過了，但運算時間還是太久…</p>
<p>上面兩次嘗試只差在判斷 Anagram 的方式不同，兩種方法都是 <a href="/LeetCode/Note/Java/Easy/86c77d53/" title="LeetCode Note Java 00242：Valid Anagram">00242：Valid Anagram</a> 中使用的。</p>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>找了一個運算時間算快的版本來研究：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">findAnagrams</span><span class="params">(String s, String p)</span> &#123;</span><br><span class="line">        <span class="comment">// 比較用的 array</span></span><br><span class="line">        <span class="type">int</span> freq1[] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="type">int</span> freq2[] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="comment">// 結果 list</span></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span>(s.length()&lt;p.length())</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 填充比較用的 array</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;p.length(); i++)&#123;</span><br><span class="line">            freq1[s.charAt(i)-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">            freq2[p.charAt(i)-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="type">int</span> start=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> end=p.length();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 比較第一組</span></span><br><span class="line">        <span class="keyword">if</span>(Arrays.equals(freq1,freq2))</span><br><span class="line">            list.add(start);</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">while</span>(end&lt;s.length())&#123;</span><br><span class="line">            <span class="comment">// 去掉前一組的第一個的計數</span></span><br><span class="line">            freq1[s.charAt(start)-<span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">            <span class="comment">// 加上下一組的最後一個的計數</span></span><br><span class="line">            freq1[s.charAt(end)-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">            <span class="comment">// 比較</span></span><br><span class="line">            <span class="keyword">if</span>(Arrays.equals(freq1,freq2))</span><br><span class="line">                list.add(start+<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">            start++;</span><br><span class="line">            end++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用固定一組 Array 來滾動調整比較省時間的樣子。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmluZC1hbGwtYW5hZ3JhbXMtaW4tYS1zdHJpbmcvc29sdXRpb25zLzc5MjAyOC9zaW1wbGUtc2xpZGluZy13aW5kb3ctamF2YS1zb2x1dGlvbi1vLW4tNm1zLTkwLWJlYXQv">Simple Sliding Window Java Solution, O(n), (6ms, 90% beat)<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00424：Longest Repeating Character Replacement</title>
    <url>/LeetCode/Note/Java/Medium/b36d5abd/</url>
    <content><![CDATA[<p>給定 <code>k</code> 次替換字母機會，回傳字串 <code>s</code> 經過替換後可形成的最長重複字母字串的長度。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbG9uZ2VzdC1yZXBlYXRpbmctY2hhcmFjdGVyLXJlcGxhY2VtZW50Lw==">Longest Repeating Character Replacement<i class="fa fa-external-link-alt"></i></span> Medium</p>
<p>You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.</p>
<p>Return the length of the longest substring containing the same letter you can get after performing the above operations.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>列出想法：</p>
<ul>
<li>題目換句話說：一定範圍內，非重複最多次的字母數量小於等於 k</li>
<li>判斷新範圍合不合理的方法</li>
<li>雙指針走完一條 String</li>
<li>指針前進條件：</li>
<li>左指針：不符合維持範圍條件，所以前進左指針</li>
<li>右指針：符合維持範圍條件，所以前進右指針</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">characterReplacement</span><span class="params">(String s, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// 範圍內重複最多的字的次數</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">// i 左邊界</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; s.length(); j++) &#123; <span class="comment">// j 右邊界</span></span><br><span class="line">            arr[s.charAt(j) - <span class="string">&#x27;A&#x27;</span>]++;</span><br><span class="line">            max = Math.max(max, arr[s.charAt(j) - <span class="string">&#x27;A&#x27;</span>]);</span><br><span class="line">            <span class="keyword">if</span> (j - i + <span class="number">1</span> - max &gt; k) &#123;</span><br><span class="line">                arr[s.charAt(i) - <span class="string">&#x27;A&#x27;</span>]--;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            ans = Math.max(ans, j - i + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lZXRjb2RlLWdoL2xlZXRjb2RlL2Jsb2IvbWFpbi9qYXZhLzA0MjQtbG9uZ2VzdC1yZXBlYXRpbmctY2hhcmFjdGVyLXJlcGxhY2VtZW50LmphdmE=">leetcode&#x2F;java&#x2F;0424-longest-repeating-character-replacement.java<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Z1eHVlbWluZ3podS9hcnRpY2xlL2RldGFpbHMvNzk1MjczMDM=">【LeetCode】424. 替换后的最长重复字符 Longest Repeating Character Replacement（Python）<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>two-pointers</tag>
        <tag>sliding-window</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00217：Contains Duplicate</title>
    <url>/LeetCode/Note/Java/Easy/448d5637/</url>
    <content><![CDATA[<p>判斷輸入的 intArray <code>nums</code> 是否包含重複的數字。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvY29udGFpbnMtZHVwbGljYXRlLw==">Contains Duplicate<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">containsDuplicate</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> i;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; nums.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[i] == nums[j]) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>直接用雙層迴圈去解，結果超時，只好換個做法。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">containsDuplicate</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        HashSet&lt;Integer&gt; dic = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dic.contains(nums[i])) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            dic.add(nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>換成 HashSet 當字典的方式就可以通過測試，時間複雜度：O(n)。</p>
<p>重點物件或方法：</p>
<ul>
<li>HashSet</li>
</ul>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>要盡量避免使用雙層迴圈，但是中間跑去查了 HashSet 怎麼使用，對於這些基本集合還是要熟悉。</p>
<p>看了別人的答案後，發現使用 HeshSet 算是滿普遍的解法。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>hash-table</tag>
        <tag>array</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00704：Binary Search</title>
    <url>/LeetCode/Note/Java/Easy/bff93c45/</url>
    <content><![CDATA[<p>二元搜尋法。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvYmluYXJ5LXNlYXJjaC8=">Binary Search<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.</p>
<p>You must write an algorithm with O(log n) runtime complexity.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><p>標準的二元搜尋法，設定左右兩邊界，每次測試兩邊界正中間的索引，是答案就回傳該索引，不是就修正邊界。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">          <span class="type">int</span> <span class="variable">middle</span> <span class="operator">=</span> (left + right) / <span class="number">2</span>;</span><br><span class="line">          <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> nums[middle];</span><br><span class="line">          <span class="keyword">if</span> (value == target) &#123;</span><br><span class="line">            <span class="keyword">return</span> middle;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (value &lt; target) &#123;</span><br><span class="line">            left = middle + <span class="number">1</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            right = middle - <span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00509：Fibonacci Number</title>
    <url>/LeetCode/Note/Java/Easy/17fdec8c/</url>
    <content><![CDATA[<p>經典題：費式數列。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmlib25hY2NpLW51bWJlci8=">Fibonacci Number<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">F(0) = 0, F(1) = 1</span><br><span class="line">F(n) = F(n - 1) + F(n - 2), for n &gt; 1.</span><br></pre></td></tr></table></figure>
<p>Given n, calculate F(n).</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><p>經典題，就遞迴法或 Dynamic Programming 實作。 </p>
<figure class="highlight java"><figcaption><span>Dynamic Programming</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">fib</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span>[] fa = <span class="keyword">new</span> <span class="title class_">int</span>[n + <span class="number">1</span>];</span><br><span class="line">        fa[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        fa[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt; n + <span class="number">1</span>; i++) &#123;</span><br><span class="line">          fa[i] = fa[i - <span class="number">1</span>] + fa[i - <span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fa[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><figcaption><span>遞迴法</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">fib</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fib(n - <span class="number">1</span>) + fib(n - <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Dynamic Programming 的效能會比遞迴法好滿多。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>tree</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00724：Find Pivot Index</title>
    <url>/LeetCode/Note/Java/Easy/d6f0ae5b/</url>
    <content><![CDATA[<p>找出輸入的 intArray <code>nums</code> 的 Pivot Index (索引的左右兩邊總和相同)。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmluZC1waXZvdC1pbmRleC8=">Find Pivot Index<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given an array of integers nums, calculate the pivot index of this array.</p>
<p>The pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index’s right.</p>
<p>If the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left. This also applies to the right edge of the array.</p>
<p>Return the leftmost pivot index. If no such index exists, return -1.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">pivotIndex</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">                left += nums[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i +<span class="number">1</span>; j &lt; nums.length; j++) &#123;</span><br><span class="line">                right += nums[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (left == right) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用了粗暴方式作答，Runtime 拉得很長。</p>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>別人寫得 Runtime 就極短。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Runtime: 1 ms, faster than 92.94% of Java online submissions for Find Pivot Index.</span></span><br><span class="line"><span class="comment">// Time Complexity : O(n)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">pivotIndex</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="comment">// Initialize total sum of the given array...</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// Initialize &#x27;leftsum&#x27; as sum of first i numbers, not including nums[i]...</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">leftsum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// Traverse the elements and add them to store the totalSum...</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> ele : nums)</span><br><span class="line">            totalSum += ele;</span><br><span class="line">        <span class="comment">// Again traverse all the elements through the for loop and store the sum of i numbers from left to right...</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; leftsum += nums[i++])</span><br><span class="line">            <span class="comment">// sum to the left == leftsum.</span></span><br><span class="line">            <span class="comment">// sum to the right === totalSum - leftsum - nums[i]..</span></span><br><span class="line">            <span class="comment">// check if leftsum == totalSum - leftsum - nums[i]...</span></span><br><span class="line">            <span class="keyword">if</span> (leftsum * <span class="number">2</span> == totalSum - nums[i])</span><br><span class="line">                <span class="keyword">return</span> i;       <span class="comment">// Return the pivot index...</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;      <span class="comment">// If there is no index that satisfies the conditions in the problem statement...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>避開了多層回圈，果然還是要多看別人的解答來擴編我僵化的腦袋。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmluZC1waXZvdC1pbmRleC9zb2x1dGlvbnMvMjQ3MDAxNC92ZXJ5LWVhc3ktMTAwLWZ1bGx5LWV4cGxhaW5lZC1qYXZhLWMtcHl0aG9uLWpzLXB5dGhvbjMv">Very Easy || 100% || Fully Explained || Java, C++, Python, JS, Python3<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>array</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00746：Min Cost Climbing Stairs</title>
    <url>/LeetCode/Note/Java/Easy/7fbdb4b5/</url>
    <content><![CDATA[<p>情境題：付費爬樓梯，每階價格不同，每步走一階或兩階，求最便宜登頂價格。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWluLWNvc3QtY2xpbWJpbmctc3RhaXJzLw==">Min Cost Climbing Stairs<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>You are given an integer array cost where cost[i] is the cost of ith step on a staircase. Once you pay the cost, you can either climb one or two steps.</p>
<p>You can either start from the step with index 0, or the step with index 1.</p>
<p>Return the minimum cost to reach the top of the floor.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><ul>
<li>一維動態規劃：到達每一階最便宜的價格</li>
<li>只可能從前一階或前前一階上來</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minCostClimbingStairs</span><span class="params">(<span class="type">int</span>[] cost)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt; cost.length; i++) &#123;</span><br><span class="line">          cost[i] += Math.min(cost[i - <span class="number">1</span>], cost[i - <span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Math.min(cost[cost.length - <span class="number">1</span>], cost[cost.length - <span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>動態規劃的規律都不太好想，只能多練培養直覺。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>trie</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 00876：Middle of the Linked List</title>
    <url>/LeetCode/Note/Java/Easy/61390e2b/</url>
    <content><![CDATA[<p>回傳輸入的 Linked List 的中間的 ListNode。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWlkZGxlLW9mLXRoZS1saW5rZWQtbGlzdC8=">Middle of the Linked List<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given the head of a singly linked list, return the middle node of the linked list.</p>
<p>If there are two middle nodes, return the second middle node.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">middleNode</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">tmp</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="keyword">while</span> (tmp != <span class="literal">null</span>) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            tmp = tmp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> count / <span class="number">2</span>; </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">            head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>計算 head 總長後，算出中間是第幾個，再將 head 走到中間後回傳。</p>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>我的寫法總共走了 1.5 條 head，看到別人的只要走半條的步數就能回傳，覺得很厲害：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">middleNode</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> head, fast = head;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="literal">null</span> &amp;&amp; fast.next != <span class="literal">null</span>) &#123;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>補充：</p>
<p>經過 <a href="/LeetCode/Note/Java/Easy/30f3f015/" title="LeetCode Note Java 00141：Linked List Cycle">00141</a> 與 <a href="/LeetCode/Note/Java/Medium/9b4c1812/" title="LeetCode Note Java 00142：Linked List Cycle II">00142</a> 的洗禮後，知道 slow 跟 fast 這種方法叫做龜兔賽跑。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWlkZGxlLW9mLXRoZS1saW5rZWQtbGlzdC9zb2x1dGlvbnMvMTY1MTYwMC9weXRob24tamF2YS1jLXNpbXBsZS1zb2x1dGlvbi1vbmUtcGFzcy1iZWdpbm5lci1mcmllbmRseS1kZXRhaWxlZC1leHBsYW5hdGlvbi8=">[Python&#x2F;Java&#x2F;C++] Simple Solution || One-Pass || Beginner Friendly || Detailed Explanation<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>ordered-map</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 01046：Last Stone Weight</title>
    <url>/LeetCode/Note/Java/Easy/1c408dc7/</url>
    <content><![CDATA[<p>情境題：砸石頭遊戲，每回合從石頭堆中取出兩顆最重的石頭互砸，石頭彼此會依重量相互抵消重量，即一樣重的石頭互砸就兩顆都會消失，不一樣重的石頭互砸，較重的石頭會扣掉較輕石頭的重量後生成新的石頭，將新石頭加入下回合的石頭堆。返回最後剩下的石頭重量，若沒有剩下石頭則返回 0。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbGFzdC1zdG9uZS13ZWlnaHQv">Last Stone Weight<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>You are given an array of integers stones where stones[i] is the weight of the ith stone.</p>
<p>We are playing a game with the stones. On each turn, we choose the heaviest two stones and smash them together. Suppose the heaviest two stones have weights x and y with x &lt;&#x3D; y. The result of this smash is:</p>
<p>If x &#x3D;&#x3D; y, both stones are destroyed, and<br>If x !&#x3D; y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x.<br>At the end of the game, there is at most one stone left.</p>
<p>Return the weight of the last remaining stone. If there are no stones left, return 0.</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>將容器排序後，每次移出兩個最大的石頭來破壞，破壞後如果有剩下小石頭要加回容器，一直循環到只剩一顆或沒石頭。</p>
<p>看起來最麻煩的是新產出的小石頭加進容器後需要排序這件事。</p>
<p>好在有特殊的資料結構可以自動做這件事 – PriorityQueue。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">lastStoneWeight</span><span class="params">(<span class="type">int</span>[] stones)</span> &#123;</span><br><span class="line">        PriorityQueue&lt;Integer&gt; pq = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;(Collections.reverseOrder()); <span class="comment">// 建造每次都會返回最大值的 PriorityQueue。</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i : stones) &#123; <span class="comment">// 還沒找到自動將 int[] 直接轉換成 PriorityQueue 的優雅方式，所以逐一將 int[] 的值加入 PriorityQueue。</span></span><br><span class="line">          pq.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (pq.size() &gt; <span class="number">1</span>) &#123; <span class="comment">// 容量大於一時不斷進行遊戲。</span></span><br><span class="line">          <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> pq.poll(); <span class="comment">// 最重的石頭。</span></span><br><span class="line">          <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> pq.poll(); <span class="comment">// 次重的石頭。</span></span><br><span class="line">          <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a - b; <span class="comment">// 兩石頭互砸後生成的新石頭重量。</span></span><br><span class="line">          <span class="keyword">if</span> (c != <span class="number">0</span>) &#123; <span class="comment">// 如果有生成新石頭就要將新石頭加入 PriorityQueue。</span></span><br><span class="line">            pq.add(c);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pq.size() &gt; <span class="number">0</span> ? pq.poll() : <span class="number">0</span>; <span class="comment">// 若容器被清空就返回0，不然就返回最後一顆石頭的重量。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>選對容器後，照著遊戲規則就能簡單寫出答案。</p>
<p>就是前提是要先學會使用該工具。</p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
        <tag>two-pointers</tag>
        <tag>sliding-window</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Note Java 01480：Running Sum of 1d Array</title>
    <url>/LeetCode/Note/Java/Easy/f91e76b6/</url>
    <content><![CDATA[<p>將輸入的 intArray <code>nums</code> 的每個欄位加總其左方的所有數字。</p>
<span id="more"></span>



<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcnVubmluZy1zdW0tb2YtMWQtYXJyYXkv">Running Sum of 1d Array<i class="fa fa-external-link-alt"></i></span> Easy</p>
<p>Given an array nums. We define a running sum of an array as runningSum[i] &#x3D; sum(nums[0]…nums[i]).</p>
<p>Return the running sum of nums.</p>
<h2 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] runningSum(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="type">int</span>[] output = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            sum += nums[i];</span><br><span class="line">            output[i] = sum;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>滿直觀就能寫出答案了。</p>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>別人寫得更省記憶體的樣子，直接修改傳入的 array。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] runningSum(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; nums.length) &#123;</span><br><span class="line">            nums[i] += nums[i - <span class="number">1</span>];</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>不過跑出來的記憶體消耗數據跟本來的一樣，就當作多看一種方法吧。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcnVubmluZy1zdW0tb2YtMWQtYXJyYXkvc29sdXRpb25zLzY4NjI2MS9qYXZhLWMtcHl0aG9uLWFycmF5LXRpbWUtby1uLXNwYWNlLW8tMS8=">[Java&#x2F;C++&#x2F;Python] Array, Time O(N) Space O(1)<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>LeetCode</category>
        <category>Note</category>
        <category>Java</category>
        <category>Easy</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Note：Linux 常用技巧</title>
    <url>/Linux/Note/20b510e4/</url>
    <content><![CDATA[<p>整理了一些我常用到的。</p>
<span id="more"></span>

<h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><p>list，列出文件和目錄。</p>
<h3 id="a"><a href="#a" class="headerlink" title="-a"></a>-a</h3><p>–all 的簡寫，列出的內容包含以 <code>.</code> 開頭的隱藏文件。<br>其中 <code>.</code> 為當前目錄，<code>..</code> 為當前目錄的父目錄。</p>
<h3 id="l"><a href="#l" class="headerlink" title="-l"></a>-l</h3><p>long listing format，列出文件和目錄的詳細內容，後面接文件名稱可以只輸出該文件的詳細內容，以 <code>ls -l init</code> 為例，輸出結果如下：：<br><code>-rwxr-xr-x 1 root root 632096 Feb  9  2022 init</code></p>
<h3 id="合併參數"><a href="#合併參數" class="headerlink" title="合併參數"></a>合併參數</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -al</span><br></pre></td></tr></table></figure>

<h2 id="文件詳細內容"><a href="#文件詳細內容" class="headerlink" title="文件詳細內容"></a>文件詳細內容</h2><p>以 <code>init</code> 的詳細內容為例，共 9 組：<br><code>-rwxr-xr-x 1 root root 632096 Feb  9  2022 init</code></p>
<h3 id="文件權限"><a href="#文件權限" class="headerlink" title="文件權限"></a>文件權限</h3><p><code>-rwxr-xr-x</code><br>由 4 個子字串拼接而成，共 10 位。<br>文件類型：1 位；<code>-</code>：文件；<code>d</code>：目錄；<code>l</code>：鏈接。<br>所有者權限、組用戶權限、其他用戶權限：各 3 位：<br><code>r</code>：readable；<code>w</code>：writeable；<code>x</code>：executable；<code>-</code>：denied。</p>
<h3 id="子項目數目"><a href="#子項目數目" class="headerlink" title="子項目數目"></a>子項目數目</h3><p><code>1</code></p>
<h3 id="所屬用戶"><a href="#所屬用戶" class="headerlink" title="所屬用戶"></a>所屬用戶</h3><p><code>root</code></p>
<h3 id="所屬組別"><a href="#所屬組別" class="headerlink" title="所屬組別"></a>所屬組別</h3><p><code>root</code></p>
<h3 id="文件大小-byte"><a href="#文件大小-byte" class="headerlink" title="文件大小 (byte)"></a>文件大小 (byte)</h3><p><code>632096</code></p>
<h3 id="修改時間-月"><a href="#修改時間-月" class="headerlink" title="修改時間 (月)"></a>修改時間 (月)</h3><p><code>Feb</code></p>
<h3 id="修改時間-日"><a href="#修改時間-日" class="headerlink" title="修改時間 (日)"></a>修改時間 (日)</h3><p><code>9</code></p>
<h3 id="修改時間-年"><a href="#修改時間-年" class="headerlink" title="修改時間 (年)"></a>修改時間 (年)</h3><p><code>2022</code></p>
<h3 id="文件或目錄名稱"><a href="#文件或目錄名稱" class="headerlink" title="文件或目錄名稱"></a>文件或目錄名稱</h3><p><code>init</code></p>
<h2 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h2><p>更改文件權限。</p>
<h3 id="使用權限分數更改"><a href="#使用權限分數更改" class="headerlink" title="使用權限分數更改"></a>使用權限分數更改</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 777 myfile</span><br></pre></td></tr></table></figure>

<p>一個數字表示一種身份的權限分數總和：</p>
<table>
<thead>
<tr>
<th align="center">權限</th>
<th align="center">分數</th>
</tr>
</thead>
<tbody><tr>
<td align="center">r</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">w</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">x</td>
<td align="center">1</td>
</tr>
</tbody></table>
<p><code>777</code> 表示要設成 <code>rwxrwxrwx</code>，即權限全開。</p>
<h2 id="chown"><a href="#chown" class="headerlink" title="chown"></a>chown</h2><p>更改所有者：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> myuser myfile</span><br></pre></td></tr></table></figure>

<p>更改組別：</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> :mygroup myfile</span><br></pre></td></tr></table></figure>

<p>兩者就差在 <code>:</code> 而已。</p>
<h2 id="待整理"><a href="#待整理" class="headerlink" title="待整理"></a>待整理</h2><p>ssh 遠端連線</p>
<p>scp 遠端傳輸檔案</p>
<p>rsync 遠端同步檔案</p>
<p>ctrl + z: 暫停程式並返回到 shell 提示符號<br>fg [程式名稱]: 將暫停的程式放回前景運作</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac Note：Mac 常用技巧</title>
    <url>/Mac/Note/91c8942c/</url>
    <content><![CDATA[<p>列出我日常使用 mac 時遇到的一些障礙。</p>
<span id="more"></span>

<h2 id="Mac-鍵盤快速鍵"><a href="#Mac-鍵盤快速鍵" class="headerlink" title="Mac 鍵盤快速鍵"></a>Mac 鍵盤快速鍵</h2><p><span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0LmFwcGxlLmNvbS96aC10dy9IVDIwMTIzNg==">Mac 鍵盤快速鍵<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9hcHAueWlwZWUuY2MvODk0NzgvJUUzJTgwJTkwbWFjLW9zLSVFNiU5NSU5OSVFNSVBRCVCOCVFMyU4MCU5MTMzLSVFNSU4MCU4Qi1tYWMtJUU5JThEJUI1JUU3JTlCJUE0JUU4JUE2JTgxJUU1JUFEJUI4JUU2JTlDJTgzJUU3JTlBJTg0JUU1JUJGJUFCJUU5JTgwJTlGJUU5JThEJUI1JUVGJUJDJTgxJUVGJUJDJTg4JUU2JTlCJUI0JUU2JTk2JUIwJUVGJUJDJTg5Lw==">【Mac OS 教學】33 個 Mac 鍵盤要學會的快速鍵！（更新）<i class="fa fa-external-link-alt"></i></span><br>直接進設定看最準</p>
<h3 id="切換輸入法"><a href="#切換輸入法" class="headerlink" title="切換輸入法"></a>切換輸入法</h3><p>ctrl + 空白鍵<br>caps</p>
<h3 id="重做"><a href="#重做" class="headerlink" title="重做"></a>重做</h3><p>command + shift + Z<br>不太確定什麼情況可以觸發</p>
<h3 id="Mission-Control"><a href="#Mission-Control" class="headerlink" title="Mission Control"></a>Mission Control</h3><p>ctrl + 上鍵</p>
<h3 id="顯示桌面"><a href="#顯示桌面" class="headerlink" title="顯示桌面"></a>顯示桌面</h3><p>fn + F11<br>觸控板大拇指與三隻手指外展</p>
<p>再做一次可以回到原本的視窗<br>視窗全螢幕下無效</p>
<h3 id="切換桌面"><a href="#切換桌面" class="headerlink" title="切換桌面"></a>切換桌面</h3><p>ctrl + 右鍵<br>ctrl + 左鍵</p>
<h3 id="切換開啟的應用程式"><a href="#切換開啟的應用程式" class="headerlink" title="切換開啟的應用程式"></a>切換開啟的應用程式</h3><p>command + tab<br>command + shift + tab</p>
<h3 id="調整顯示大小"><a href="#調整顯示大小" class="headerlink" title="調整顯示大小"></a>調整顯示大小</h3><p>放大：command + &#x3D;<br>縮小：command + -<br>預設：command + 0</p>
<h3 id="截圖"><a href="#截圖" class="headerlink" title="截圖"></a>截圖</h3><p>擷取全螢幕畫面並儲存：command + shift + 3<br>自行選取截圖範圍並儲存：command + shift + 4<br>擷取特定視窗並儲存：command + shift + 4 + 空白鍵<br>截圖與錄影選項：command + shift + 5</p>
<h3 id="瀏覽器"><a href="#瀏覽器" class="headerlink" title="瀏覽器"></a>瀏覽器</h3><p>重新整理：command + R<br>捲到最上方：command + 上鍵<br>捲到最下方：command + 下鍵<br>開新視窗：command + N<br>開新分頁：command + T<br>重新開啟一個關閉的分頁：command + shift + T<br>關閉分頁：command + W</p>
<h3 id="關閉當前程式"><a href="#關閉當前程式" class="headerlink" title="關閉當前程式"></a>關閉當前程式</h3><p>command + Q</p>
<h2 id="顯示隱藏檔案"><a href="#顯示隱藏檔案" class="headerlink" title="顯示隱藏檔案"></a>顯示隱藏檔案</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJidWhvLmNvbS96aC10dy9ob3ctdG8vc2hvdy1oaWRkZW4tZmlsZXMtbWFj">【2023】如何在Mac 顯示隱藏檔案和資料夾 - BuhoCleaner<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Finder-中使用快捷鍵開啟或關閉"><a href="#Finder-中使用快捷鍵開啟或關閉" class="headerlink" title="Finder 中使用快捷鍵開啟或關閉"></a>Finder 中使用快捷鍵開啟或關閉</h3><p>Command + Shift + .</p>
<h3 id="使用-終端機-永久開啟或關閉"><a href="#使用-終端機-永久開啟或關閉" class="headerlink" title="使用 終端機 永久開啟或關閉"></a>使用 <code>終端機</code> 永久開啟或關閉</h3><p>開啟</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles TRUE</span><br><span class="line">killall Finder</span><br></pre></td></tr></table></figure>

<p>要關閉就把上面指令 TRUE 換成 FALSE。</p>
<h2 id="更改檔案預設開啟程式"><a href="#更改檔案預設開啟程式" class="headerlink" title="更改檔案預設開啟程式"></a>更改檔案預設開啟程式</h2><p>滑鼠右鍵 &gt; 取得資訊 &gt; 打開檔案的應用程式 &gt; 全部更改．．．</p>
<h2 id="重新整理-launchpad"><a href="#重新整理-launchpad" class="headerlink" title="重新整理 launchpad"></a>重新整理 launchpad</h2><p>常常發生 launchpad 的圖標錯誤，這時只能使用此指令重整，會失去所有排序與分類設定。</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">defaults write com.apple.dock ResetLaunchPad -bool <span class="literal">true</span>; killall Dock</span><br></pre></td></tr></table></figure>

<h2 id="Raycast"><a href="#Raycast" class="headerlink" title="Raycast"></a>Raycast</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucmF5Y2FzdC5jb20v">Raycast<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9tYW51YWwucmF5Y2FzdC5jb20v">Raycast Manual<i class="fa fa-external-link-alt"></i></span></p>
<p>Mac 輔助工具，可以取代 Spotlight。<br>我目前只用到視窗置左或置右跟剪貼板歷史的功能。</p>
<h2 id="Fig"><a href="#Fig" class="headerlink" title="Fig"></a>Fig</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dpdGhmaWcvZmln">Fig<i class="fa fa-external-link-alt"></i></span></p>
<p>主要是用他的 command line 提詞功能。</p>
<h2 id="Chrome-Toggle-Show-Toolbar-in-Full-Screen"><a href="#Chrome-Toggle-Show-Toolbar-in-Full-Screen" class="headerlink" title="Chrome Toggle Show Toolbar in Full Screen"></a>Chrome Toggle Show Toolbar in Full Screen</h2><p>上方選單：View -&gt; Always Show Toolbar in Full Screen<br>快捷鍵：shift command F</p>
]]></content>
      <categories>
        <category>Mac</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac Note：完整移除應用</title>
    <url>/Mac/Note/e2407cf9/</url>
    <content><![CDATA[<p>已經移除的應用一直跳出相關更新服務，讓人十分頭痛。</p>
<span id="more"></span>

<ul>
<li>移除 Finder&#x2F;Applications 的 App<br>如果只做這步很可能刪除不完全，某日可能會跳出其他相關服務</li>
<li>移除 &#x2F;Library&#x2F;LaunchAgents、&#x2F;Library&#x2F;LaunchDaemons、&#x2F;Library&#x2F;PrivilegedHelperTools 的該廠商相關服務<br>這樣做之後理論上就清得很乾淨了</li>
</ul>
]]></content>
      <categories>
        <category>Mac</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Project：TTS MESSAGE MOD</title>
    <url>/Project/158b204b/</url>
    <content><![CDATA[<p>TTS 風聲桌遊 MOD 腳本實作。</p>
<span id="more"></span>

<h2 id="development-notes"><a href="#development-notes" class="headerlink" title="development notes"></a>development notes</h2><h3 id="腳本生成客製化物件"><a href="#腳本生成客製化物件" class="headerlink" title="腳本生成客製化物件"></a>腳本生成客製化物件</h3><p><span class="exturl" data-url="aHR0cHM6Ly9hcGkudGFibGV0b3BzaW11bGF0b3IuY29tL2Jhc2UvI3NwYXdub2JqZWN0">spawnObject(…)<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9hcGkudGFibGV0b3BzaW11bGF0b3IuY29tL29iamVjdC8jc2V0Y3VzdG9tb2JqZWN0">setCustomObject(…)<i class="fa fa-external-link-alt"></i></span><br>上面兩個方法要接著用，但是很不爽，因為 <code>spawnObject(...)</code> 中有個 <code>callback_function</code> 參數，理論上要能使用所有該物件的設定方法，但 <code>setCustomObject(...)</code> 就是一定要用 <code>spawnObject(...)</code> 的回傳值來設定。<br><span class="exturl" data-url="aHR0cHM6Ly9hcGkudGFibGV0b3BzaW11bGF0b3IuY29tL2N1c3RvbS1nYW1lLW9iamVjdHMv">Custom<i class="fa fa-external-link-alt"></i></span>：客製化物件的 type 參數必須是此文檔中列出的類型之一。<br>研究之後發現 <span class="exturl" data-url="aHR0cHM6Ly9hcGkudGFibGV0b3BzaW11bGF0b3IuY29tL2Jhc2UvI3NwYXdub2JqZWN0anNvbg==">spawnObjectJSON(…)<i class="fa fa-external-link-alt"></i></span> 比較符合我們目前的使用情境，只需將現有 json 填進參數中就能造出一樣的物件，連 GUID 都能直接指定。</p>
<h3 id="TTS-內建回合機制控制"><a href="#TTS-內建回合機制控制" class="headerlink" title="TTS 內建回合機制控制"></a>TTS 內建回合機制控制</h3><p><span class="exturl" data-url="aHR0cHM6Ly9hcGkudGFibGV0b3BzaW11bGF0b3IuY29tL3R1cm5zLw==">Turns<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9hcGkudGFibGV0b3BzaW11bGF0b3IuY29tL2V2ZW50cy8jb25wbGF5ZXJ0dXJu">onPlayerTurn(…)<i class="fa fa-external-link-alt"></i></span><br>研究目的：回合結束手排上限檢查與提示<br>障礙：TTS 開出的 Turns api 並無法做出禁止回合結束的行為，只能在換人時做一些判定<br>決策：逐步捨棄 TTS 內建回合機制<br>規劃：先自己做一個回合結束鈕接入 TTS 的結束回合功能</p>
<h2 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h2><p><span class="exturl" data-url="aHR0cHM6Ly9hcGkudGFibGV0b3BzaW11bGF0b3IuY29tL29iamVjdC8jdWktZnVuY3Rpb25z">UI Functions<i class="fa fa-external-link-alt"></i></span>：操作使 UI 附加到物件上</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9hcGkudGFibGV0b3BzaW11bGF0b3IuY29tL3VpL2ludHJvVUkv">UI API<i class="fa fa-external-link-alt"></i></span>：使用 xml 導入客製化 UI</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9hcGkudGFibGV0b3BzaW11bGF0b3IuY29tL3VpLw==">UI<i class="fa fa-external-link-alt"></i></span>：run time 操控 UI 屬性</p>
<p>Global UI：螢幕上的 UI</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">UI.getAttributes(id)</span><br></pre></td></tr></table></figure>

<p>Object UI：物件上的 UI</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">object.UI.getAttributes(id)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Project</category>
      </categories>
      <tags>
        <tag>Lua</tag>
      </tags>
  </entry>
  <entry>
    <title>React Native Debug：無法連上 Firebase Analytics DebugView</title>
    <url>/React-Native/Debug/e908ab10/</url>
    <content><![CDATA[<p>小細節可能誤大局，偷走我一整週的蠢事。</p>
<span id="more"></span>

<p>Firebase 專案中將 development 與 production App 分別設置不同的套件名稱：development app 套件名稱結尾會加上 <code>.debug</code>。<br>理論上這種配置很常見，不過我要使用 Firebase console 的 Analytics DebugView 時，卻遲遲無法連上。<br>直接說答案，因為我們將 development app 的 Analytics 數據流給刪除了。</p>
<p>如何從 Firebase console 中查看此設定？</p>
<blockquote>
<p>點擊 <code>專案總覽</code> 右邊的齒輪<br>選擇 <code>專案設定</code><br>選擇 <code>整合</code><br>點擊 <code>Google Analytics</code> 的 <code>管理</code> (這步可能需要更高的權限)<br>點擊 <code>已連結的 Google Analytics (分析) 帳戶</code><br>選擇 <code>數據流</code> 就可以看到目前有跟 Google Analytics 連結的 App，其套件名稱會寫在 App 名下方<br>點擊 <code>&gt;</code> 可以看到 <code>應用數據流詳情</code>，其實跟在 Firebase 設定 App 的地方差不多<br>點擊右上角 <code>...</code> 可以看到 <code>刪除數據流</code>，我們 development App 的數據流應該就是在此刪除的</p>
</blockquote>
<p>總之在 Google Analytics 刪除 App 的數據流，就會使 Firebase console 的 Analytics DebugView 無法跟該 App 連結。</p>
<ul>
<li>在 <code>google-services.json</code> 檔案中依然有包含該 App 的套件名稱</li>
<li>firebase.analytics log 中也依舊會包含傳送 event 資料的 log</li>
</ul>
<p>會發生這種奇妙現象是因為我們本來要將 development app 轉移到另一個 Firebase 專案，但不知道什麼原因只做一半．．．</p>
<p>轉移後會需要換新的 <code>google-services.json</code> 記住更換後要記得清除 gradle 資料，不然會繼續使用舊的，也不會有提示。</p>
]]></content>
      <categories>
        <category>React Native</category>
        <category>Debug</category>
      </categories>
      <tags>
        <tag>Firebase</tag>
        <tag>React Native</tag>
        <tag>Google Analytics</tag>
      </tags>
  </entry>
  <entry>
    <title>React Native Note：Design</title>
    <url>/React-Native/Note/c9b124d1/</url>
    <content><![CDATA[<p>刻畫面必備知識，沒弄懂的話連勞動的權力都沒有。</p>
<span id="more"></span>

<h2 id="Style"><a href="#Style" class="headerlink" title="Style"></a><span class="exturl" data-url="aHR0cHM6Ly9yZWFjdG5hdGl2ZS5kZXYvZG9jcy9zdHlsZQ==">Style<i class="fa fa-external-link-alt"></i></span></h2><ul>
<li>只是組件的其中一個 props</li>
</ul>
<h2 id="Height-and-Width"><a href="#Height-and-Width" class="headerlink" title="Height and Width"></a><span class="exturl" data-url="aHR0cHM6Ly9yZWFjdG5hdGl2ZS5kZXYvZG9jcy9oZWlnaHQtYW5kLXdpZHRo">Height and Width<i class="fa fa-external-link-alt"></i></span></h2><h3 id="Fixed-Dimensions"><a href="#Fixed-Dimensions" class="headerlink" title="Fixed Dimensions"></a>Fixed Dimensions</h3><p>將 width 跟 height 用數值表示固定尺寸<br>單位都是 density-independent pixels</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">FixedDimensionsBasics</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width:</span> <span class="attr">50</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">height:</span> <span class="attr">50</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundColor:</span> &#x27;<span class="attr">powderblue</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width:</span> <span class="attr">100</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">height:</span> <span class="attr">100</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundColor:</span> &#x27;<span class="attr">skyblue</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width:</span> <span class="attr">150</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">height:</span> <span class="attr">150</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundColor:</span> &#x27;<span class="attr">steelblue</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">FixedDimensionsBasics</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Flex-Dimensions"><a href="#Flex-Dimensions" class="headerlink" title="Flex Dimensions"></a>Flex Dimensions</h3><p><code>flex: 1</code> 表示填充所有可用空間<br>如果父容器沒有指定的 width 跟 height 或是 flex，那麼父容器的大小就會是 0，將導致子視圖無法顯示</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">FlexDimensionsBasics</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="comment">// Try removing the `flex: 1` on the parent View.</span></span><br><span class="line">    <span class="comment">// The parent will not have dimensions, so the children can&#x27;t expand.</span></span><br><span class="line">    <span class="comment">// What if you add `height: 300` instead of `flex: 1`?</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;flex:</span> <span class="attr">1</span>&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;flex:</span> <span class="attr">1</span>, <span class="attr">backgroundColor:</span> &#x27;<span class="attr">powderblue</span>&#x27;&#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;flex:</span> <span class="attr">2</span>, <span class="attr">backgroundColor:</span> &#x27;<span class="attr">skyblue</span>&#x27;&#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;flex:</span> <span class="attr">3</span>, <span class="attr">backgroundColor:</span> &#x27;<span class="attr">steelblue</span>&#x27;&#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">FlexDimensionsBasics</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Percentage-Dimensions"><a href="#Percentage-Dimensions" class="headerlink" title="Percentage Dimensions"></a>Percentage Dimensions</h3><p>能直接指定百分比</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">PercentageDimensionsBasics</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// Try removing the `height: &#x27;100%&#x27;` on the parent View.</span></span><br><span class="line">  <span class="comment">// The parent will not have dimensions, so the children can&#x27;t expand.</span></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;height:</span> &#x27;<span class="attr">100</span>%&#x27;&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">height:</span> &#x27;<span class="attr">15</span>%&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundColor:</span> &#x27;<span class="attr">powderblue</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width:</span> &#x27;<span class="attr">66</span>%&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">height:</span> &#x27;<span class="attr">35</span>%&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundColor:</span> &#x27;<span class="attr">skyblue</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width:</span> &#x27;<span class="attr">33</span>%&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">height:</span> &#x27;<span class="attr">50</span>%&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundColor:</span> &#x27;<span class="attr">steelblue</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">PercentageDimensionsBasics</span>;</span><br></pre></td></tr></table></figure>

<p>更常用的方式是獲取設備窗口尺寸，再乘上 0~1 的小數達到比例效果</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> windowWidth = <span class="title class_">Dimensions</span>.<span class="title function_">get</span>(<span class="string">&#x27;window&#x27;</span>).<span class="property">width</span></span><br><span class="line"><span class="keyword">const</span> windowHeight = <span class="title class_">Dimensions</span>.<span class="title function_">get</span>(<span class="string">&#x27;window&#x27;</span>).<span class="property">height</span></span><br></pre></td></tr></table></figure>

<h2 id="Layout-with-Flexbox"><a href="#Layout-with-Flexbox" class="headerlink" title="Layout with Flexbox"></a><span class="exturl" data-url="aHR0cHM6Ly9yZWFjdG5hdGl2ZS5kZXYvZG9jcy9mbGV4Ym94">Layout with Flexbox<i class="fa fa-external-link-alt"></i></span></h2><h3 id="Flex-Direction"><a href="#Flex-Direction" class="headerlink" title="Flex Direction"></a>Flex Direction</h3><p>flexDirection: column | row | column-reverse | row-reverse<br>指定 children 排序方向為垂直或水平</p>
<h3 id="Layout-Direction"><a href="#Layout-Direction" class="headerlink" title="Layout Direction"></a>Layout Direction</h3><p>direction: ltr | rtl<br>指定 layout 從左還右開始排</p>
<h3 id="Justify-Content"><a href="#Justify-Content" class="headerlink" title="Justify Content"></a>Justify Content</h3><p>justifyContent: flex-start | flex-end | center | space-between | space-around | space-evenly<br>沿主軸方向處理 children</p>
<h3 id="Align-Items"><a href="#Align-Items" class="headerlink" title="Align Items"></a>Align Items</h3><p>alignItems: stretch | flex-start | flex-end | center | baseline<br>沿非主軸方向處理 children</p>
<h3 id="Align-Self"><a href="#Align-Self" class="headerlink" title="Align Self"></a>Align Self</h3><p>alignSelf: stretch | flex-start | flex-end | center | baseline<br>跟 alignItems 類似，不過是處理自己</p>
]]></content>
      <categories>
        <category>React Native</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>React Native</tag>
      </tags>
  </entry>
  <entry>
    <title>React Native Note：Custom Components</title>
    <url>/React-Native/Note/2775b30c/</url>
    <content><![CDATA[<p>構建自己的 React Native 樂高。</p>
<span id="more"></span>

<p><span class="exturl" data-url="aHR0cHM6Ly9yZWFjdG5hdGl2ZS5kZXYvZG9jcy9pbnRyby1yZWFjdCNjdXN0b20tY29tcG9uZW50cw==">Custom Components<i class="fa fa-external-link-alt"></i></span></p>
<p>想創建一個自定義組件需要建立類似如下的函式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">Cat</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>Hello, I am...<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">TextInput</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">height:</span> <span class="attr">40</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">borderColor:</span> &#x27;<span class="attr">gray</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">borderWidth:</span> <span class="attr">1</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">defaultValue</span>=<span class="string">&quot;Name me!&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cat</span>;</span><br></pre></td></tr></table></figure>

<p>這樣可以將 Cat 在其他地方以 JSX 語法呼叫如下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">Cafe</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>Welcome!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cafe</span>;</span><br></pre></td></tr></table></figure>

<p>若要讓自定義組建使用外部傳入的參數，需要定義並指定 props</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">type <span class="title class_">CatProps</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: string;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cat</span> = (<span class="params">props: CatProps</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>Hello, I am &#123;props.name&#125;!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cafe</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> <span class="attr">name</span>=<span class="string">&quot;Maru&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> <span class="attr">name</span>=<span class="string">&quot;Jellylorum&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> <span class="attr">name</span>=<span class="string">&quot;Spot&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cafe</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>React Native</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>React Native</tag>
      </tags>
  </entry>
  <entry>
    <title>React Native Note：開發環境建置</title>
    <url>/React-Native/Note/c7f4268a/</url>
    <content><![CDATA[<p>讓被臉書拋棄的孩子帶我邁向大前端之路 🥴。<br>安裝 0.70 版<br>2024&#x2F;04&#x2F;05: 安裝 0.73 版</p>
<span id="more"></span>

<p><span class="exturl" data-url="aHR0cHM6Ly9yZWFjdG5hdGl2ZS5kZXYvZG9jcy9lbnZpcm9ubWVudC1zZXR1cD9wYWNrYWdlLW1hbmFnZXI9eWFybiZndWlkZT1uYXRpdmU=">Setting up the development environment<i class="fa fa-external-link-alt"></i></span><br>分為 Expo Go 與 React Native CLI 兩。簡單來說前者適合新手，建制過程較為簡單，對客製化較不友善，可以用來建構簡單的 App；後者適合較大型專案，需要對各平台客製化時較方便。<br>為了體驗全面一點，選擇 React Native CLI。<br>其餘步驟照著官網就行。</p>
<p>環境是 macOS</p>
<p>2025&#x2F;05&#x2F;25: 現在官方預設介紹 Expo，要安裝純 React Native 反而是特例<br><span class="exturl" data-url="aHR0cHM6Ly9yZWFjdG5hdGl2ZS5kZXYvZG9jcy9nZXR0aW5nLXN0YXJ0ZWQtd2l0aG91dC1hLWZyYW1ld29yaz9wYWNrYWdlLW1hbmFnZXI9eWFybg==">Get Started Without a Framework<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="安裝-Homebrew"><a href="#安裝-Homebrew" class="headerlink" title="安裝 Homebrew"></a>安裝 Homebrew</h3><p><span class="exturl" data-url="aHR0cHM6Ly9icmV3LnNoLw==">Homebrew<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmJyZXcuc2gv">Homebrew Documentation<i class="fa fa-external-link-alt"></i></span></p>
<p>在 terminal 中使用官網提供的安裝指令。</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>安裝流程結束後 terminal 會提示兩條指令來將 Homebrew 加入 PATH。<br>執行完兩條指令後輸入 brew help 看是否正常。</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">(<span class="built_in">echo</span>; <span class="built_in">echo</span> <span class="string">&#x27;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#x27;</span>) &gt;&gt; /Users/username/.zprofile</span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(/opt/homebrew/bin/brew shellenv)</span>&quot;</span></span><br><span class="line">brew <span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<h3 id="安裝-Node-Watchman"><a href="#安裝-Node-Watchman" class="headerlink" title="安裝 Node &amp; Watchman"></a>安裝 Node &amp; Watchman</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">brew install node</span><br><span class="line">brew install watchman</span><br></pre></td></tr></table></figure>

<h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><p>需要 Node、Watchman、React Native command line interface、JDK、Android Studio</p>
<h4 id="安裝-Java-Development-Kit"><a href="#安裝-Java-Development-Kit" class="headerlink" title="安裝 Java Development Kit"></a>安裝 Java Development Kit</h4><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">brew tap homebrew/cask-versions</span><br><span class="line">brew install --cask zulu11</span><br></pre></td></tr></table></figure>

<p>2024&#x2F;04&#x2F;05:</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">brew tap homebrew/cask-versions</span><br><span class="line">brew install --cask zulu17</span><br></pre></td></tr></table></figure>

<p>不同版本的 React Native 專案，可能需要不同的 java 版本，建議使用 java version manager 來管理，如：SDKMAN!</p>
<h4 id="安裝-Android-Studio"><a href="#安裝-Android-Studio" class="headerlink" title="安裝 Android Studio"></a>安裝 Android Studio</h4><p>照著官方文件需求載 Android Studio，並下載特定 SDK。</p>
<p>設定 ANDROID_HOME 環境參數。</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">vim ~/.zprofile</span><br></pre></td></tr></table></figure>

<p>i 進入 insert mode<br>填入<br>export ANDROID_HOME&#x3D;$HOME&#x2F;Library&#x2F;Android&#x2F;sdk<br>export PATH&#x3D;$PATH:$ANDROID_HOME&#x2F;emulator<br>export PATH&#x3D;$PATH:$ANDROID_HOME&#x2F;platform-tools<br>esc 跳出 insert mode<br>:wq 存擋並離開 vim</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zprofile</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ANDROID_HOME</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<p>PATH 中應該要包含 ANDROID_HOME 的路徑。</p>
<p>進 Android Studio 查看 Appearance &amp; Behavior → System Settings → Android SDK 的路徑與上述相同。</p>
<h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p>需要 Node、Watchman、React Native command line interface、Ruby version manager、Xcode、CocoaPods</p>
<h4 id="安裝-Ruby-Version-Manager-RVM"><a href="#安裝-Ruby-Version-Manager-RVM" class="headerlink" title="安裝 Ruby Version Manager (RVM)"></a>安裝 Ruby Version Manager (RVM)</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ydm0uaW8v">Ruby Version Manager (RVM)<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ydm0uaW8vcnZtL2luc3RhbGw=">Installing RVM<i class="fa fa-external-link-alt"></i></span></p>
<p>補充：RVM 在下載特定 Ruby 版本時可能遭遇一些難以解決的錯誤，如：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3J2bS9ydm0vaXNzdWVzLzUxMjQjaXNzdWVjb21tZW50LTEwMjY5MjgzODY=">Cannot install Ruby 2.7.4 and 3.0.2 on Mac - NoMethodError - Nil
<i class="fa fa-external-link-alt"></i></span>，其中有人建議使用 rbenv<br>2024&#x2F;04&#x2F;05: RVM 依然有問題，直接載 rbenv 吧</p>
<p>安裝 gpg</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">brew install gpg</span><br></pre></td></tr></table></figure>

<p>安裝 GPG keys</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">gpg --keyserver keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span><br></pre></td></tr></table></figure>

<p>本來是要用 gpg2 的指令，但好像統一名稱為 gpg 了。</p>
<p>安裝 RVM</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">\curl -sSL https://get.rvm.io | bash -s stable</span><br><span class="line"><span class="built_in">source</span> /Users/wengchengwei/.rvm/scripts/rvm</span><br></pre></td></tr></table></figure>

<h4 id="安裝-React-Native-要求的-Ruby-版本"><a href="#安裝-React-Native-要求的-Ruby-版本" class="headerlink" title="安裝 React Native 要求的 Ruby 版本"></a>安裝 React Native 要求的 Ruby 版本</h4><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LW5hdGl2ZS9ibG9iL3YwLjcxLjMvLnJ1YnktdmVyc2lvbg==">react-native&#x2F;.ruby-version<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">rvm install ruby-2.7.6</span><br></pre></td></tr></table></figure>

<p>查看當前 Ruby 版本</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">ruby --version</span><br></pre></td></tr></table></figure>

<h4 id="安裝-Xcode"><a href="#安裝-Xcode" class="headerlink" title="安裝 Xcode"></a>安裝 Xcode</h4><p>用<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2Rvd25sb2FkL21vcmUv">網頁<i class="fa fa-external-link-alt"></i></span>安裝，不要用 App Store 裝。<br>官方目前要求使用 10 或以上版本。<br>本次實作安裝 14.3<br>2024&#x2F;04&#x2F;05: 15.2</p>
<h4 id="安裝-CocoaPods"><a href="#安裝-CocoaPods" class="headerlink" title="安裝 CocoaPods"></a>安裝 CocoaPods</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ndWlkZXMuY29jb2Fwb2RzLm9yZy91c2luZy9nZXR0aW5nLXN0YXJ0ZWQuaHRtbA==">Getting Started<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">sudo gem install cocoapods</span><br></pre></td></tr></table></figure>

<h2 id="最終環境"><a href="#最終環境" class="headerlink" title="最終環境"></a>最終環境</h2><p>Android Studio: Android Studio Flamingo | 2022.2.1<br>Xcode: 14.3<br>Ruby: ruby 2.7.6p219 (2022-04-12 revision c9c2245c0a) [arm64-darwin22]</p>
<p>2024&#x2F;04&#x2F;05:<br>java:<br>openjdk 17.0.10 2024-01-16 LTS<br>OpenJDK Runtime Environment Zulu17.48+15-CA (build 17.0.10+7-LTS)<br>OpenJDK 64-Bit Server VM Zulu17.48+15-CA (build 17.0.10+7-LTS, mixed mode, sharing)<br>Android Studion:<br>Android Studio Iguana | 2023.2.1 Patch 1<br>Xcode: 15.2<br>Ruby: ruby 2.7.6p219 (2022-04-12 revision c9c2245c0a) [arm64-darwin22]</p>
<h2 id="專案相關指令"><a href="#專案相關指令" class="headerlink" title="專案相關指令"></a>專案相關指令</h2><h3 id="建立新專案"><a href="#建立新專案" class="headerlink" title="建立新專案"></a>建立新專案</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">npx react-native@latest init ProjectName</span><br></pre></td></tr></table></figure>

<h3 id="Start-Metro"><a href="#Start-Metro" class="headerlink" title="Start Metro"></a>Start Metro</h3><p>基本上用不到這個指令，直接 Run on iOS 或 Android 比較方便。</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">npx react-native start</span><br></pre></td></tr></table></figure>

<h3 id="Run-on-iOS"><a href="#Run-on-iOS" class="headerlink" title="Run on iOS"></a>Run on iOS</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">npx react-native run-ios</span><br></pre></td></tr></table></figure>

<h3 id="Run-on-Android"><a href="#Run-on-Android" class="headerlink" title="Run on Android"></a>Run on Android</h3><figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">npx react-native run-android</span><br></pre></td></tr></table></figure>

<h3 id="從-git-拉下既有專案"><a href="#從-git-拉下既有專案" class="headerlink" title="從 git 拉下既有專案"></a>從 git 拉下既有專案</h3><p>進入專案資料夾，在 run 之前使用以下指令安裝需要的東西</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>有安裝 yarn 的話則使用</p>
<figure class="highlight sh"><figcaption><span>command line tool</span></figcaption><table><tr><td class="code"><pre><span class="line">yarn install</span><br></pre></td></tr></table></figure>

<h3 id="切換-node-版本"><a href="#切換-node-版本" class="headerlink" title="切換 node 版本"></a>切換 node 版本</h3><p>專案可能需要使用特定版本的 node，這時就需要使用 node 版本控制軟體進行切換，如 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL252bS1zaC9udm0=">nvm<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>React Native</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>React Native</tag>
      </tags>
  </entry>
  <entry>
    <title>Tabletop Simulator Note：Lua 腳本編寫</title>
    <url>/Tabletop-Simulator/Note/5fab3010/</url>
    <content><![CDATA[<p>Tabletop Simulator 是一款在 Steam 平台上的遊戲，主要是拿來玩線上桌遊，並且提供了 API 讓有志之士構建自己想玩的桌遊。</p>
<span id="more"></span>

<h2 id="開發前準備"><a href="#開發前準備" class="headerlink" title="開發前準備"></a>開發前準備</h2><ul>
<li>開始編寫腳本前必須將遊戲桌面佈置成可以遊戲的樣子，即所有物件都存在，且整理成想要的狀態（之後可以將 json 全移到 Lua 腳本中）</li>
<li>儲存桌面</li>
<li>讀取桌面</li>
</ul>
<h2 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h2><p>Tabletop Simulator 中開放玩家使用 Lua 語言構建腳本，實現簡易甚至稍微複雜的遊戲自動化。<br>TTS 使用的 Lua 版本: 5.2<br><span class="exturl" data-url="aHR0cHM6Ly93d3cubHVhLm9yZy9tYW51YWwvNS4yLw==">Lua 5.2 Reference Manual<i class="fa fa-external-link-alt"></i></span>：很難看懂<br><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9sdWEvbHVhLXR1dG9yaWFsLmh0bWw=">Lua 教程<i class="fa fa-external-link-alt"></i></span>：可以快速理解一些概念</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9zdGVhbWNvbW11bml0eS5jb20vc2hhcmVkZmlsZXMvZmlsZWRldGFpbHMvP2lkPTcxNDkwNDYzMQ==">Learning Lua<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9zdGVhbWNvbW11bml0eS5jb20vc2hhcmVkZmlsZXMvZmlsZWRldGFpbHMvP2lkPTg3OTQ0OTUwNg==">Learning MORE Lua<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9zdGVhbWNvbW11bml0eS5jb20vc2hhcmVkZmlsZXMvZmlsZWRldGFpbHMvP2lkPTc1MjY5MDUzMA==">Learning Lua Functions<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="重要概念"><a href="#重要概念" class="headerlink" title="重要概念"></a>重要概念</h3><p>Lua 無 main 程式啟動點的概念，主要是與使用的主要語言框架合作</p>
<p>table 索引有 a[“name”] 跟語法糖的 a.name 兩種表示法</p>
<p>默認情況下變量總是全局的</p>
<p>函數為多返回值<br>支援可變數目參數 (…)<br>select(‘#’, …)：返回可變參數的長度<br>select(n, …)：返回從起點 n 開始到結束位置的所有參數列表</p>
<p>~&#x3D;：不等於<br>..：連接兩字符串<br>#：返回字串或表的長度</p>
<p>[[]]：這樣包裝文字也是 string<br>utf8.len()：含中文的字串計算長度<br>string.len()：只包含 ASCII 的字串計算長度<br>字串匹配模式 (%)：跟其他語言一樣需要知道有這種用法，真要用時再查表</p>
<p>索引從 1 開始，並且可以為負數</p>
<p>迭代器：ipairs 是 Lua 默認提供的迭代函數</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">array = &#123;<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> <span class="built_in">ipairs</span>(array) </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">print</span>(key, value)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>迭代器通常好像都不用真的自己實現，或是只有我沒做過？</p>
<p>Metatable:<br>setmetatable(table,metatable)<br>getmetatable(mytable)<br>可以對特定 table 設定一些操作符行為<br>有點複雜，需要實際操作後才能更熟悉</p>
<p>coroutine:<br>Lua 的 coroutine 跟 Kotlin 的很像，都算是對 thread 進行封裝與優化<br>解釋成協作的 thread 就滿好理解了，雖然 coroutine 彼此間是平行的，但同一時間只有一條 coroutine 在執行，需要開發者顯式進行切換</p>
<h2 id="TTS-API"><a href="#TTS-API" class="headerlink" title="TTS API"></a>TTS API</h2><p><span class="exturl" data-url="aHR0cHM6Ly9hcGkudGFibGV0b3BzaW11bGF0b3IuY29tL2ludHJvLw==">Tabletop Simulator API<i class="fa fa-external-link-alt"></i></span>：官方 API</p>
]]></content>
      <categories>
        <category>Tabletop Simulator</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Lua</tag>
        <tag>Tabletop Simulator</tag>
      </tags>
  </entry>
  <entry>
    <title>Tabletop Simulator Note：TTS VSCode</title>
    <url>/Tabletop-Simulator/Note/64900d3/</url>
    <content><![CDATA[<p>一些使用 TTS VSCode 開發時的觀念。</p>
<span id="more"></span>

<h2 id="Console"><a href="#Console" class="headerlink" title="Console++"></a>Console++</h2><p><span class="exturl" data-url="aHR0cHM6Ly90dHMtdnNjb2RlLnJvbGFuZG9zdGFyLmNvbS9leHRlbnNpb24vY29uc29sZSsr">Console++<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly90dHMtdnNjb2RlLnJvbGFuZG9zdGFyLmNvbS9leHRlbnNpb24vb25FeHRlcm5hbENvbW1hbmQ=">External Command<i class="fa fa-external-link-alt"></i></span></p>
<p>按照上方文章設置完後就能在專案中訂製特殊指令，這些指令只能由 VSCode 開啟的 Console++ 互動視窗中輸入，並且可以及時在相連的遊戲中觸發指定的腳本內容</p>
<p>注意：當團隊中有設置這功能時，每個開發成員都必須安裝 Console++，否則會出錯</p>
<h2 id="與在-TTS-中直接開發的差異"><a href="#與在-TTS-中直接開發的差異" class="headerlink" title="與在 TTS 中直接開發的差異"></a>與在 TTS 中直接開發的差異</h2><p>TTS 中雖然也能開發 Lua 腳本，但整個 Global.lua 視為一個檔案，所有變數與函數都為 global，不容易做到 local 的調用權限劃分。<br>而使用 TTS VSCode 時，藉由他的模組註冊機制，我們可以藉由拆分檔案來模組化專案，將 global 與 local 的性質發揮出來；這樣的唯一缺點大概是不容易在 TTS 中直接修改腳本了。</p>
]]></content>
      <categories>
        <category>Tabletop Simulator</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Tabletop Simulator</tag>
      </tags>
  </entry>
  <entry>
    <title>Tabletop Simulator Note：開發環境建置</title>
    <url>/Tabletop-Simulator/Note/756e548a/</url>
    <content><![CDATA[<p>想要為世界貢獻，還是得做些準備。</p>
<span id="more"></span>

<p>嘗試在最常見的 IDE 上進行桌遊腳本開發。<br>（主要以 mac 環境舉例）</p>
<h2 id="資源整理"><a href="#資源整理" class="headerlink" title="資源整理"></a>資源整理</h2><p><span class="exturl" data-url="aHR0cHM6Ly81dXBlcmIweS5jb20vdGFibGV0b3Atc2ltdWxhdG9yLWx1YS12c2NvZGUtZGV2ZWxvcG1lbnQtZW52aXJvbm1lbnQtYnVpbGRpbmcv">在 Window 上使用 VSCode 建立 Tabletop simulator 的 Lua 腳本開發環境<i class="fa fa-external-link-alt"></i></span>：開發環境設定<br><span class="exturl" data-url="aHR0cHM6Ly9rYi50YWJsZXRvcHNpbXVsYXRvci5jb20vZ2V0dGluZy1zdGFydGVkL3RlY2huaWNhbC1pbmZvLw==">Technical Info<i class="fa fa-external-link-alt"></i></span>：檔案儲存位置等資訊</p>
<h2 id="Tabletop-Simulator-Lua-VSCode-插件"><a href="#Tabletop-Simulator-Lua-VSCode-插件" class="headerlink" title="Tabletop Simulator Lua VSCode 插件"></a>Tabletop Simulator Lua VSCode 插件</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvbGFuZG9zdGFyL3RhYmxldG9wc2ltdWxhdG9yLWx1YS12c2NvZGU=">Tabletop Simulator Lua Extension for VSCode<i class="fa fa-external-link-alt"></i></span> 插件 GitHub 官網</p>
<p>在 VSCode 安裝後可以做到使用下方的快捷鍵連結進行中的遊戲的腳本等行為</p>
<h3 id="主要指令"><a href="#主要指令" class="headerlink" title="主要指令"></a>主要指令</h3><h4 id="Open-TTS-Console"><a href="#Open-TTS-Console" class="headerlink" title="Open TTS Console++"></a>Open TTS Console++</h4><p>windows: Ctrl Alt `<br>mac: Ctrl Option `</p>
<h4 id="Get-Lua-Scripts"><a href="#Get-Lua-Scripts" class="headerlink" title="Get Lua Scripts"></a>Get Lua Scripts</h4><p>windows: Ctrl Alt L<br>mac: Ctrl Option L</p>
<h4 id="Save-And-Play"><a href="#Save-And-Play" class="headerlink" title="Save And Play"></a>Save And Play</h4><p>windows: Ctrl Alt S<br>mac: Ctrl Option S</p>
<h4 id="操作步驟"><a href="#操作步驟" class="headerlink" title="操作步驟"></a>操作步驟</h4><ol>
<li>開啟 Tabletop Simulator 並挑選想要改寫腳本的 mod 執行</li>
<li>進入 VSCode 使用 Get Lua Scripts 指令（通常插件會自動抓運行中 mod 的 Lua scripts）</li>
<li>即可於 VSCode 看到 mod 的 Lua 腳本</li>
</ol>
<h2 id="專案化版本控管"><a href="#專案化版本控管" class="headerlink" title="專案化版本控管"></a>專案化版本控管</h2><p>有了好用的 IDE 支援後，接著就想要有版本控管及多人協作的環境。</p>
<h3 id="建立專案資料夾"><a href="#建立專案資料夾" class="headerlink" title="建立專案資料夾"></a>建立專案資料夾</h3><p>可以直接去 GitHub 創新專案再 clone 到本地，亦可直接用 git 指令在本地初始化一個專案。</p>
<h3 id="連結專案資料夾與遊戲存檔資料夾"><a href="#連結專案資料夾與遊戲存檔資料夾" class="headerlink" title="連結專案資料夾與遊戲存檔資料夾"></a>連結專案資料夾與遊戲存檔資料夾</h3><ol>
<li>終端機進入遊戲存檔資料夾（~&#x2F;Library&#x2F;Tabletop Simulator&#x2F;Saves）</li>
<li>創建專案軟連結（ln -s 專案位置 軟連結名稱）：ln -s ~&#x2F;tabletopSimulatorScripts&#x2F; projectSoftLink</li>
</ol>
<p>注意：<br>不指定軟連結名稱就是使用專案位置作為名稱</p>
<h3 id="將遊戲於專案資料夾中存檔"><a href="#將遊戲於專案資料夾中存檔" class="headerlink" title="將遊戲於專案資料夾中存檔"></a>將遊戲於專案資料夾中存檔</h3><ol>
<li>開啟 Tabletop Simulator</li>
<li>選擇 CREATE，創建任意種類房間</li>
<li>Games（上方 Tab） &gt; Workshop，開起任意已訂閱的 mod</li>
<li>Games（上方 Tab） &gt; Save &amp; Load，可以看到我們創建的專案軟連結（可以視為專案資料夾），單擊進入，單擊 Save Game 按鈕，單擊 Save 按鈕儲存遊戲存檔<br>於電腦檔案系統中進入專案資料夾，可以看到儲存的遊戲存檔由兩個檔案構成：TS_Save_*.json 與 TS_Save_*.png</li>
</ol>
<h3 id="於專案資料夾撰寫腳本"><a href="#於專案資料夾撰寫腳本" class="headerlink" title="於專案資料夾撰寫腳本"></a>於專案資料夾撰寫腳本</h3><ol>
<li>開啟 Tabletop Simulator</li>
<li>CREATE 任意房間</li>
<li>Games &gt; Save &amp; Load &gt; 專案資料夾 &gt; 單擊前面存的遊戲存檔 &gt; 單擊 Load 按鈕，以讀取要進行開發的遊戲存檔</li>
<li>開啟 VSCode 並使用 Get Lua Scripts 指令，連結目前 Tabletop Simulator 開啟存檔的 Lua 腳本，主要會看到名為 Global.-1.lua 的檔案</li>
<li>在 VSCode 目前 WORKSPACE 加入專案資料夾，這種 WORKSPACE 樣式會是之後開發的主要狀態</li>
<li>於專案資料夾內創建 src 資料夾，之後腳本都寫在這裡（非強制，跟團隊約定好為主）</li>
<li>WORKSPACE&#x2F;Tabletop Simulator Lua&#x2F;Global.-1.lua 檔案中最上方需加入以 require(“src&#x2F;*”) 形式加入所有腳本檔案，* 表示 src 資料夾下不含 .lua 副檔名的腳本檔案名，這樣使用 Save And Play 指令後就能將專案資料夾中的腳本加入連結的遊戲存檔（.json）中</li>
</ol>
<p>注意：<br>使用 Save And Play 指令可以將撰寫的腳本寫入遊戲存檔，但遊戲內對物件進行的種種操作想儲存必須使用遊戲內存檔機制，否則遊戲關閉後都會消失<br>資料夾關聯的部分參考 <span class="exturl" data-url="aHR0cHM6Ly90dHMtdnNjb2RlLnJvbGFuZG9zdGFyLmNvbS9leHRlbnNpb24vbW9kdWxlUmVzb2x1dGlvbg==">Module Resolution<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Lua-VSCode-插件"><a href="#Lua-VSCode-插件" class="headerlink" title="Lua VSCode 插件"></a>Lua VSCode 插件</h2><p><span class="exturl" data-url="aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPXN1bW5la28ubHVh">Lua<i class="fa fa-external-link-alt"></i></span></p>
<p>用來做 Lua 語法自動的補全，只用 Tabletop Simulator Lua VSCode 插件很難針對 Lua 語法做偵錯</p>
<h2 id="開發前準備"><a href="#開發前準備" class="headerlink" title="開發前準備"></a>開發前準備</h2><ul>
<li>至少要瀏覽過 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvbGFuZG9zdGFyL3RhYmxldG9wc2ltdWxhdG9yLWx1YS12c2NvZGU=">Tabletop Simulator Lua Extension for VSCode<i class="fa fa-external-link-alt"></i></span> 的相關文檔，了解 IDE 能做到哪些事，其實插件作者還在開發中，有些列出的功能都只在 beta 版，一般安裝版沒有</li>
<li>熟悉 Tabletop Simulator 遊戲內物件操作</li>
<li>待補</li>
</ul>
]]></content>
      <categories>
        <category>Tabletop Simulator</category>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Lua</tag>
        <tag>Tabletop Simulator</tag>
      </tags>
  </entry>
  <entry>
    <title>Tool Jira 01：Jira 建立 儀表板 (Dashboard)，碼農最舒適設定</title>
    <url>/Tool/Jira/4ed23e02/</url>
    <content><![CDATA[<p>身為碼農基本只管解 issue，Jira 這種專案管理工具的功能實在過於複雜，在此分享我在 Jira 中唯一使用的功能 – 儀表板 (Dashboard)。</p>
<p>想要一目了然的查看某團隊或某專案的工作量之類資訊時，建立自定義的 儀表板 (Dashboard) 是滿推薦的方式。</p>
<span id="more"></span>



<h2 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h2><p>我習慣設成一個專案一張 <code>二維篩選統計資料</code> 表，X軸為 <code>優先順序</code>，y軸為 <code>受託人</code>，數字為 issue 數目。<br><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Tool/Tool-Jira-01-create-dashboard/JiraSample.png?raw=true"></p>
<p>這樣能清楚知道誰身上 loading 較重，哪些人較有餘力協助別人之類的 (不過通常也不能這樣判斷啦 XD)。</p>
<h2 id="建立篩選條件-Filter-："><a href="#建立篩選條件-Filter-：" class="headerlink" title="建立篩選條件 (Filter)："></a>建立篩選條件 (Filter)：</h2><p>建立 儀表板 之前需要先建立數個 篩選條件 (Filter) 供 儀表板 使用。</p>
<h3 id="選擇上方-篩選-Filter-tab"><a href="#選擇上方-篩選-Filter-tab" class="headerlink" title="選擇上方 篩選 (Filter) tab"></a>選擇上方 <code>篩選</code> (Filter) tab</h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Tool/Tool-Jira-01-create-dashboard/filter.png?raw=true"></p>
<h3 id="選擇-檢視所有篩選條件-View-all-filters"><a href="#選擇-檢視所有篩選條件-View-all-filters" class="headerlink" title="選擇 檢視所有篩選條件 (View all filters)"></a>選擇 <code>檢視所有篩選條件</code> (View all filters)</h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Tool/Tool-Jira-01-create-dashboard/viewAllFilters.png?raw=true"></p>
<h3 id="點選右上-建立篩選條件-Create-filter"><a href="#點選右上-建立篩選條件-Create-filter" class="headerlink" title="點選右上 建立篩選條件 (Create filter)"></a>點選右上 <code>建立篩選條件</code> (Create filter)</h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Tool/Tool-Jira-01-create-dashboard/createFilter.png?raw=true"></p>
<h3 id="自己視需求設定篩選條件"><a href="#自己視需求設定篩選條件" class="headerlink" title="自己視需求設定篩選條件"></a>自己視需求設定篩選條件</h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Tool/Tool-Jira-01-create-dashboard/searchFilter.png?raw=true"></p>
<p>我自己有設定的是 <code>專案</code> 跟 <code>狀態</code>。<br>專案：為了讓篩選有意義，一個篩選設定一個專案就滿剛好的。<br>狀態：只設定對於開發有意義的狀態，如：<code>開放</code>、<code>進行中</code>、<code>已解決</code>。</p>
<p>設定好後點擊上方的 <code>另存新檔</code>。</p>
<h3 id="設定-篩選條件名稱-後點擊-提交"><a href="#設定-篩選條件名稱-後點擊-提交" class="headerlink" title="設定 篩選條件名稱 後點擊 提交"></a>設定 <code>篩選條件名稱</code> 後點擊 <code>提交</code></h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Tool/Tool-Jira-01-create-dashboard/setFilterName.png?raw=true"></p>
<p>直接設成專案名稱即可。</p>
<p>這樣就建立好一個新的篩選條件，可以再選擇上方 <code>篩選</code> (Filter) tab 找到它。</p>
<h2 id="儀表板-Dashboard-自訂成呈現所有人題目數量的表格："><a href="#儀表板-Dashboard-自訂成呈現所有人題目數量的表格：" class="headerlink" title="儀表板 (Dashboard) 自訂成呈現所有人題目數量的表格："></a>儀表板 (Dashboard) 自訂成呈現所有人題目數量的表格：</h2><h3 id="選擇上方-儀表板-Dashboard-tab"><a href="#選擇上方-儀表板-Dashboard-tab" class="headerlink" title="選擇上方 儀表板 (Dashboard) tab"></a>選擇上方 <code>儀表板</code> (Dashboard) tab</h3><h3 id="選擇-建立儀表板-Create-new-dashboard"><a href="#選擇-建立儀表板-Create-new-dashboard" class="headerlink" title="選擇 建立儀表板 (Create new dashboard)"></a>選擇 <code>建立儀表板</code> (Create new dashboard)</h3><h3 id="填入名稱後點擊-儲存"><a href="#填入名稱後點擊-儲存" class="headerlink" title="填入名稱後點擊 儲存"></a>填入名稱後點擊 <code>儲存</code></h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Tool/Tool-Jira-01-create-dashboard/createDashboard.png?raw=true"></p>
<p>可以依你的分類標準命名，或是命名成 <code>我的 Dashboard</code> 之類的。</p>
<h3 id="就會看到空的儀表板"><a href="#就會看到空的儀表板" class="headerlink" title="就會看到空的儀表板"></a>就會看到空的儀表板</h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Tool/Tool-Jira-01-create-dashboard/blankDashboard.png?raw=true"></p>
<p>可以看到右方有非常多種小工具，不過身為不管事的碼農不用浪費太多精力在這裡。</p>
<p>右方找到 <code>二維篩選統計資料</code> 點擊 <code>新增</code> 就會看到儀表板出現 <code>二維篩選統計資料</code> 的設定欄。</p>
<h3 id="設定-二維篩選統計資料-Two-Dimensional-Filter-Statistics-表"><a href="#設定-二維篩選統計資料-Two-Dimensional-Filter-Statistics-表" class="headerlink" title="設定 二維篩選統計資料 (Two Dimensional Filter Statistics) 表"></a>設定 <code>二維篩選統計資料</code> (Two Dimensional Filter Statistics) 表</h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Tool/Tool-Jira-01-create-dashboard/settingData.png?raw=true"></p>
<p>在 <code>已儲存的篩選條件</code> (Saved Filter) 中找到先前設定的 篩選條件。</p>
<p><code>X 軸</code> 設成 <code>優先順序</code> (Priority)。</p>
<p><code>Y 軸</code> 設成 <code>受託人</code>。</p>
<p><code>結果數目</code> (Number of Results) 設成 50。</p>
<p>最後點擊 <code>儲存</code> 即完成表格設定。</p>
<h3 id="點擊右上角的-完成-結束-儀表板-設定"><a href="#點擊右上角的-完成-結束-儀表板-設定" class="headerlink" title="點擊右上角的 完成 結束 儀表板 設定"></a>點擊右上角的 <code>完成</code> 結束 儀表板 設定</h3><p><img data-src="https://github.com/WCW0310/blogPicture/blob/master/Tool/Tool-Jira-01-create-dashboard/tableSample.png?raw=true"></p>
<h3 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h3><p>多設定幾個專案的表格就會跟一開始的圖片一樣有多張表格了。</p>
<h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>上述設定都是我自己的偏好，完全可以依各自喜好做其他設定，不要被工具奴化就好~</p>
<p>Jira 可以自定義的東西太多了，除非公司有特殊需求，或你本身就要負責專案管理，不然真心覺得越少碰它越好，其他時間能簡易的察看任務就好。</p>
]]></content>
      <categories>
        <category>Tool</category>
        <category>Jira</category>
      </categories>
      <tags>
        <tag>Jira</tag>
      </tags>
  </entry>
  <entry>
    <title>Tool：Visual Studio Code</title>
    <url>/Tool/41e4a259/</url>
    <content><![CDATA[<p>工程師的好夥伴，懂他越多，效率越高。</p>
<span id="more"></span>

<h2 id="常用快捷鍵"><a href="#常用快捷鍵" class="headerlink" title="常用快捷鍵"></a>常用快捷鍵</h2><p>Code &gt; 喜好設定 &gt; 鍵盤快速鍵 [command + K command + S]</p>
<p>一些快捷鍵在非英文輸入法會失效。</p>
<p>search file: command P (mac)<br>go forward &#x2F; go back: ctrl shift - &#x2F; ctrl -<br>editor.fold &#x2F; editor.unfold: alt cmd [ &#x2F; alt cmd ]<br>editor.foldAll &#x2F; editor.unfoldAll: cmd+k cmd+0 &#x2F; cmd+k cmd+j</p>
<h2 id="auto-format"><a href="#auto-format" class="headerlink" title="auto format"></a>auto format</h2><p>option shift F (mac) &#x2F; ctrl shift F (windows)<br>有些檔案類型的 formatter 需要進 command shift p 手動指定</p>
<h2 id="切換語言"><a href="#切換語言" class="headerlink" title="切換語言"></a>切換語言</h2><p>command + shift + p<br>輸入 language<br>選取 Configure Display Language<br>選取要切換的語系</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9jb2Rpbmdpc2xvdmUuY29tL2lzc3VlLWZvcm1hdC1jb2RlLXZzY29kZS1zaG9ydGN1dC8=">Unable to format code in VSCode on MacOS using shortcut (solved)<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
      <tags>
        <tag>Visual Studio Code</tag>
      </tags>
  </entry>
  <entry>
    <title>Tool：klogg</title>
    <url>/Tool/391444f2/</url>
    <content><![CDATA[<p>看程式 log (.log檔案) 比較好看的工具。</p>
<span id="more"></span>

<p>klogg：有 Dark mode 的 glogg，現在基本好像都用這個了，glogg 沒再更新的樣子。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Zhcmlhci9rbG9nZy9ibG9iL21hc3Rlci9ET0NVTUVOVEFUSU9OLm1k">Klogg documentation<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="標記行"><a href="#標記行" class="headerlink" title="標記行"></a>標記行</h2><p>點擊左邊圓點</p>
<p>選擇單行或多行 &gt; 按 m</p>
<h2 id="同時搜尋兩個關鍵字"><a href="#同時搜尋兩個關鍵字" class="headerlink" title="同時搜尋兩個關鍵字"></a>同時搜尋兩個關鍵字</h2><p>|：用直線隔開兩關鍵字(or)</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
      <tags>
        <tag>klogg</tag>
      </tags>
  </entry>
  <entry>
    <title>Tool：Proxyman</title>
    <url>/Tool/ec1de664/</url>
    <content><![CDATA[<p>強大的 HTTP 調試工具。</p>
<span id="more"></span>

<p><span class="exturl" data-url="aHR0cHM6Ly9wcm94eW1hbi5pby8=">Proxyman<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Certificate"><a href="#Certificate" class="headerlink" title="Certificate"></a>Certificate</h2><p>因為需要獲取加密的 api 封包，所以需要對各裝置進行認證設置<br>Certificate 選項位於最上方<br>iOS 模擬器沒遇到什麼障礙<br>Android 模擬器需要使用 google api，因此我目前用不出來，因為專案會把沒有 play store 視為 root，進而阻止繼續使用<br>Android 實機需要定期下載 CA 憑證，並進入裝置設定進行安裝，通常在：設定&gt;密碼與安全&gt;系統安全&gt;加密和憑證&gt;信任的憑證|安裝憑證<br>Android 實機與 Praxyman 連線時需要更改網路 proxy，但須注意沒連接時要將 網路 proxy 關掉，否則 run app 時無法與 metro 連線</p>
<h2 id="作用限制"><a href="#作用限制" class="headerlink" title="作用限制"></a>作用限制</h2><p>android 只能操作 debug 版的 app，因為遵循官方建議：<code>Make sure you remove these configs from your Production build.</code>。<br>ios 應該都能操作。</p>
<p>記住這些差異才不會在奇怪的地方卡住浪費時間。</p>
<h2 id="Map-Local"><a href="#Map-Local" class="headerlink" title="Map Local"></a>Map Local</h2><p>可以攔截 api 儲存回傳內容成 json 檔，並調整成想要的內容後來測試 api 在不同回傳下的結果<br>Map Local 選項位於最上方的 Tools 中，開啟後會額外顯示在視窗右下角<br>原本可以同時儲存很多組設置，更新後只能同時儲存兩組設置，妥妥的養套殺😭<br>mock 網址時必須以 <code>/</code> 結尾，如：<code>https://abcdefghijk/</code>，不然會 mock 失敗，不是很懂為何結尾不能沒有 <code>/</code>。<br>網址好像也都必須是小寫字母🧐。</p>
<h3 id="Local-json-File-撰寫方式"><a href="#Local-json-File-撰寫方式" class="headerlink" title="Local json File 撰寫方式"></a>Local json File 撰寫方式</h3><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnByb3h5bWFuLmlvL2FkdmFuY2VkLWZlYXR1cmVzL21hcC1sb2NhbA==">Map Local (File)<i class="fa fa-external-link-alt"></i></span><br>網路通信過於複雜，Proxyman 提供了一些網路或伺服器狀態的設置方法<br>文件大致包含 Status code, Response Headers, Response Body<br>只寫 Response Body 會視為 200 OK，這樣如果要測試錯誤狀況時，在程式碼中不會進到 catch 的地方，可能會導致誤判<br>常用 Status code:<br>404 Not Found</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
      <tags>
        <tag>Proxyman</tag>
      </tags>
  </entry>
  <entry>
    <title>Life Share：Home Assistant</title>
    <url>/Life/Share/a4e0acfc/</url>
    <content><![CDATA[<p>提升生活小確幸。</p>
<span id="more"></span>

<h2 id="安裝-Home-Assistant"><a href="#安裝-Home-Assistant" class="headerlink" title="安裝 Home Assistant"></a>安裝 Home Assistant</h2><h3 id="用樹莓派時"><a href="#用樹莓派時" class="headerlink" title="用樹莓派時"></a>用樹莓派時</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG9tZS1hc3Npc3RhbnQuaW8vaW5zdGFsbGF0aW9uL2xpbnV4I2luc3RhbGwtaG9tZS1hc3Npc3RhbnQtY29udGFpbmVy">Install Home Assistant Container<i class="fa fa-external-link-alt"></i></span><br>用指令啟動</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG9tZS1hc3Npc3RhbnQuaW8vaW5zdGFsbGF0aW9uL2xpbnV4I2RvY2tlci1jb21wb3Nl">DOCKER COMPOSE<i class="fa fa-external-link-alt"></i></span><br>設定 compose.yml<br>用指令啟動 sudo docker compose up -d homeassistant<br>注意: compose.yml 中設定 volumes 的路徑時，<code>~</code> 可能不會正常運作，需使用相對路徑 (.&#x2F;) 或絕對路徑 (&#x2F;)</p>
<p>上傳後進入 ~&#x2F;homeassistant&#x2F; 透過 docker compose 來啟動 Home Assistant</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker compose up -d homeassistant</span><br></pre></td></tr></table></figure>

<p>若先前的 homeassistant 容器還在需要先刪除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker remove homeassistant</span><br></pre></td></tr></table></figure>

<h3 id="用-Mac"><a href="#用-Mac" class="headerlink" title="用 Mac"></a>用 Mac</h3><p>結論: 在 Mac 上只能用 Virtual Box，但目前也不能用 Arm64 的 Mac 跑</p>
<h2 id="使用瀏覽器連線到-Home-Assistant-並進行初始設定"><a href="#使用瀏覽器連線到-Home-Assistant-並進行初始設定" class="headerlink" title="使用瀏覽器連線到 Home Assistant 並進行初始設定"></a>使用瀏覽器連線到 Home Assistant 並進行初始設定</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG9tZS1hc3Npc3RhbnQuaW8vZ2V0dGluZy1zdGFydGVkL29uYm9hcmRpbmcv">Onboarding Home Assistant<i class="fa fa-external-link-alt"></i></span><br><code>http://&#123;host&#125;:8123</code></p>
<h2 id="Home-Assistant-Community-Store-HACS"><a href="#Home-Assistant-Community-Store-HACS" class="headerlink" title="Home Assistant Community Store (HACS)"></a>Home Assistant Community Store (HACS)</h2><p><span class="exturl" data-url="aHR0cHM6Ly9oYWNzLnh5ei8=">HACS<i class="fa fa-external-link-alt"></i></span><br>好像很厲害，但我還沒實際使用到他的功能</p>
]]></content>
      <categories>
        <category>Life</category>
        <category>Share</category>
      </categories>
      <tags>
        <tag>Smart Home</tag>
        <tag>Home Assistant</tag>
      </tags>
  </entry>
  <entry>
    <title>Life Share：Smart Home</title>
    <url>/Life/Share/2ac8f7fd/</url>
    <content><![CDATA[<p>提升生活小確幸。</p>
<span id="more"></span>

<h2 id="採用系統"><a href="#採用系統" class="headerlink" title="採用系統"></a>採用系統</h2><p>Apple HomeKit<br>理由：因為換了蘋果手機</p>
<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>在床上可以輕鬆看 apple tv<br>睡前可以說：“Hey Siri 準備睡覺” 執行開啟夜燈與一些其他睡前設備<br>睡覺時可以說：“Hey Siri 晚安” 執行關閉夜燈與一些電器</p>
<h2 id="已添購物"><a href="#已添購物" class="headerlink" title="已添購物"></a>已添購物</h2><p>RFB APPLE TV 4K (3RD GEN) WI-FI+ETH-TWN：NT$ 4,190<br>使用在 2K 的 27 吋電腦螢幕上，安裝過程中有發生看到蘋果標誌後就一直黑畫面，不過最後測試結果為 HDMI 線異常或規格不夠之類的，換一條好一點的 HDMI 線之後就正常了。</p>
<p>HomePod mini-白色 (MY5H2TA&#x2F;A)：NT$ 2,799<br>作為整個房間的語音智能中樞，目前表現不錯。</p>
<p>米家床頭燈 2 白色：NT$ 759<br>發生一次斷線過，持續觀察。<br>2023&#x2F;11&#x2F;21 因為網路開開關關又斷線一次，這次比較可怕，從 Apple Home 移除後重連都沒有用，最後是用 Mi Home 加入設備後再加入 Home 才重新連進 Apple HomeKit</p>
<p>Patya x Meross 遠端遙控智能延長線：NT$ 1,890<br>需要載專門的 App 來進行初次配對，一定要選對相應的圖標，以防萬一也手動長按電源鍵來重置，不然可能會一直連不上。<br>除了初次配對遇到小障礙之外都挺好，就是晚上全黑的時候就算所有開關全斷電，也還是會有綠色電源燈亮著。</p>
<p>Nanoleaf 智能燈泡3入-RAZER 雷蛇御用燈組：NT$ 1,890<br>有一顆燈泡拿到時電源接口處就有刮傷，但因為功能看起來正常就直接用了，整體使用很滿意。<br>唯一困擾是常常會想手動關電燈，需要習慣完全用嘴巴才行。</p>
<p>2024&#x2F;02<br>Raspberry Pi 5：NT$ 4,788<br>使用 Raspberry Pi 5 建置 Home Assistant，使用 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3FxYWF0dy9KY2lIaXRhY2hpSEE=">Jci-Hitachi Home Assistant Integration<i class="fa fa-external-link-alt"></i></span> 將日立除濕機整合進 Apple HomeKit。</p>
<h2 id="待添購物"><a href="#待添購物" class="headerlink" title="待添購物"></a>待添購物</h2><p>智能紅外線遙控器：控制冷氣</p>
<h2 id="配電組合"><a href="#配電組合" class="headerlink" title="配電組合"></a>配電組合</h2><p>長期通電：homepod mini、檯燈、mac mini<br>回家時要開：２螢幕、iphone 充電器、電燈、apple TV<br>準備睡覺時要開：夜燈；要關：電燈<br>晚安時要關的：２螢幕、iphone 充電器、夜燈<br>出門上班要關的：apple TV</p>
<h2 id="更新日誌"><a href="#更新日誌" class="headerlink" title="更新日誌"></a>更新日誌</h2><p>2023&#x2F;12&#x2F;23<br>目前除了米家床頭燈 2 發生過幾次斷線外其他都用得很舒適，解放雙手真爽</p>
<p>2024&#x2F;02&#x2F;08<br>建置 Home Assistant，將日立除濕機整合進 Apple HomeKit，整合後心情很好</p>
]]></content>
      <categories>
        <category>Life</category>
        <category>Share</category>
      </categories>
      <tags>
        <tag>Smart Home</tag>
      </tags>
  </entry>
</search>
